{"version":3,"sources":["types/types.ts","helpers.ts","objects/models/Items.tsx","types/consts.ts","audio/play.ts","objects/tileTypeDefinitions.tsx","objects/propTypeDefinitions.tsx","mocks/mapMock.ts","objects/definitions.ts","state/resolvers/moveResolver.ts","state/gameReducer.ts","state/resolvers/rotateResolver.ts","state/gameEpics.ts","state/soundEpics.ts","state/store.ts","hooks/useGame.tsx","hooks/useKeyboardEvent.tsx","app/DebugView.tsx","app/Environment.tsx","app/GameInstance.tsx","app/App.tsx","index.tsx"],"names":["ObjectTypes","findById","props","id","find","prop","findByXY","objects","xy","filter","tile","x1","y1","x2","y2","samePosition","asArray","item","Array","isArray","arrMerge","a","b","Item","url","Asset","instance","elevation","rotation","castShadow","receiveShadow","gltf","useLoader","GLTFLoader","process","scene","children","scale","set","clone","object","dispose","position","vectorToThree","AnimatieAsset","anim","useSpring","pos","rot","gltfanimation","mixer","AnimationMixer","animations","forEach","clip","clipAction","play","useFrame","update","primitive","vector","Math","PI","UP","RIGHT","DOWN","LEFT","soundList","button","music","Alert_NO","Alert_YES","Bazooka","Crossbow","Engine_start","Engine_LOOP_128","Engine_NO_1","Engine_NO_2","Engine_stop","Equip_1","Equip_2","Equip_3","Equip_4","Hero_1","Hero_2","Jump","name","volume","sound","Audio","engineStart","tileDebugComponent","color","style","width","height","backgroundColor","fontSize","tileTypeDefinitions","Grass","getId","uniqueId","Component","Component3d","Ice","enter","who","move","targetId","RockFloor","Button","push","state","self","randomProp","sample","p","remove","setObjectData","data","info","propDebugComponent","margin","borderRadius","type","Player","opacity","padding","propTypeDefinitions","BigRock","Cannon","equip","round","random","gun","tileDict","0","1","2","3","mapBitmap","propDict","propsBitmap","objectDefinitions","getDefinition","def","Error","moveResolver","actions","addActions","abortResults","target","console","warn","newXY","x","y","applyVector","newXYObjects","sort","aIndex","length","obj","objDef","event","map","maxElevation","max","initialState","queueStared","queue","tiles","flatMap","items","typeNumber","zIndex","createMap","action","actionCreatorFactory","enqueue","tryNextAction","nextAction","queueEnd","rotate","gameReducer","reducerWithInitialState","case","rotateResolver","equipResolver","setObjectDataResolver","myObjects","gameEpics","combineEpics","actions$","state$","pipe","match","value","game","mapTo","first","concat","of","payload","delay","meta","soundEpics","tap","ignoreElements","epicMiddleware","createEpicMiddleware","composeEnhancers","composeWithDevTools","rootReducer","combineReducers","store","createStore","applyMiddleware","run","useGame","useSelector","dispatch","useDispatch","isEqual","useKeyboardEvent","key","callback","useEffect","handler","window","addEventListener","removeEventListener","DebugView","left","up","down","right","top","size","onClick","isEmpty","JSON","stringify","Environment","intensity","Color","shadow-mapSize-Height","shadow-mapSize-width","shadow-camera-far","shadow-bias","shadow-camera-left","shadow-camera-right","shadow-camera-top","shadow-camera-bottom","GameInstance","useThree","gl","orthographic","camera","zoom","fov","onCreated","lookAt","shadowMap","PCFSoftShadowMap","enabled","fallback","attach","args","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.98522728.chunk.js","sourcesContent":["import { GameState } from '../state/gameReducer'\nimport { Action } from 'redux'\nimport { FC, ReactNode } from 'react'\n\nexport type XY = [number, number]\nexport type Vector2 = [number, number]\n\nexport enum ObjectTypes {\n    Grass = 'Grass',\n    Ice = 'Ice',\n    RockFloor = 'RockFloor',\n    Button = 'Button',\n    Player = 'Player',\n    BigRock = 'BigRock',\n    Cannon = 'Cannon',\n}\n\nexport interface ObjectInstance {\n    type: ObjectTypes\n    id: string\n    xy: XY\n    rotation: Vector2\n    elevation: number\n    zIndex: number\n    aIndex: number\n    data: Partial<ObjectInstanceData>\n}\n\nexport interface ObjectInstanceData {\n    gun: 'cannon'\n    info: string\n}\n\nexport interface ActionEvent {\n    who: ObjectInstance // who triggered this @TODO better name!\n    self: ObjectInstance\n    vector: Vector2\n    state: GameState\n}\n\nexport interface ObjectDefinition {\n    name: string\n    height: number\n    getId(): string\n    push?(event: ActionEvent): Action[] // triggered when elevation is to big\n    enter?(event: ActionEvent): Action[]\n    leave?(event: ActionEvent): Action[]\n    equip?(event: ActionEvent): Action[]\n    Component(props: RenderComponentProps & { children: ReactNode }): any\n    Component3d(props: RenderComponentProps): any\n}\n\nexport interface RenderComponentProps {\n    instance: ObjectInstance\n}\n","import { XY, Vector2 } from './types/types'\n\nexport const reverseVector = (vector: Vector2) => vector.map(v => v * -1) as Vector2\n\nexport const applyVector = ([x, y]: XY, [vx, vy]: Vector2): XY => [x + vx, y + vy]\n\nexport const samePosition = ([x1, y1]: XY, [x2, y2]: XY) => x1 === x2 && y1 === y2\n\nexport const findById = <T extends { id: string }>(props: T[], id: string) => {\n    return props.find(prop => prop.id === id)\n}\n\nexport const findByXY = <T extends { xy: XY }>(objects: T[], xy: XY) => {\n    return objects.filter(tile => samePosition(tile.xy, xy))\n}\n\nexport const asArray = <T>(item: T | T[]): T[] => (Array.isArray(item) ? item : [item])\nexport const arrMerge = <T>(a: T[], b: T | T[] = []): T[] => [...a, ...asArray(b)]\n","import React from 'react'\nimport { useLoader, useFrame } from 'react-three-fiber'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport { RenderComponentProps, Vector2 } from '../../types/types'\nimport { AnimationMixer } from 'three'\nimport { setInterval } from 'timers'\nimport { useSpring, animated } from 'react-spring/three'\n\nexport const Player = (props: RenderComponentProps) => {\n    return <AnimatieAsset {...props} url=\"robot_model.gltf\" />\n}\n\nexport const Item = (props: RenderComponentProps) => {\n    return <Asset {...props} url=\"rock1.gltf\" />\n}\n\nexport const Ground = (props: RenderComponentProps) => {\n    return <Asset {...props} url=\"rock.gltf\" castShadow={false} receiveShadow={true} />\n}\n\nexport const Grass = (props: RenderComponentProps) => {\n    return (\n        <Asset\n            {...props}\n            url=\"grass_002_export_test_1_cube.gltf\" // INNY model\n            castShadow={false}\n            receiveShadow={true}\n        />\n    )\n}\n\nexport const Ice = (props: RenderComponentProps) => {\n    return (\n        <Asset\n            {...props}\n            url=\"ice_002_export_test_1_cube.gltf\" // INNY model\n            castShadow={false}\n            receiveShadow={true}\n        />\n    )\n}\nexport const Button = (props: RenderComponentProps) => {\n    return (\n        <Asset\n            {...props}\n            url=\"ground_002_export_test_1_cube.gltf\" // INNY model\n            castShadow={false}\n            receiveShadow={true}\n        />\n    )\n}\n\ninterface AssetProps extends RenderComponentProps {\n    url: string\n    color?: string\n    castShadow?: boolean\n    receiveShadow?: boolean\n}\n\nconst Asset = ({\n    url,\n    instance: { xy, elevation, rotation },\n    castShadow = true,\n    receiveShadow = true,\n}: AssetProps) => {\n    const gltf = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/${url}`)\n    if (castShadow) gltf.scene.children[0].castShadow = true\n    if (receiveShadow) gltf.scene.children[0].receiveShadow = true\n    gltf.scene.scale.set(0.5, 0.5, 0.5)\n    gltf.scene = gltf.scene.clone()\n    return (\n        <primitive\n            object={gltf.scene}\n            dispose={null}\n            position={[xy[0], elevation, xy[1]]}\n            rotation={[0, vectorToThree(rotation), 0]}\n        />\n    )\n}\n\nconst AnimatieAsset = ({\n    url,\n    instance: { xy, elevation, rotation },\n    castShadow = true,\n    receiveShadow = true,\n}: AssetProps) => {\n    const anim = useSpring({\n        pos: [xy[0], elevation, xy[1]],\n        rot: [0, vectorToThree(rotation), 0],\n    })\n\n    const gltf = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/${url}`)\n    // const gltfanimation = useLoader(GLTFLoader, `/assets/animations/jump.gltf`)\n    // const gltfanimation = useLoader(GLTFLoader, `/assets/animations/move.gltf`)\n    const gltfanimation = useLoader(\n        GLTFLoader,\n        `${process.env.PUBLIC_URL}/assets/animations/boring.gltf`,\n    )\n    if (castShadow) gltf.scene.children[0].castShadow = true\n    if (receiveShadow) gltf.scene.children[0].receiveShadow = true\n    gltf.scene.scale.set(0.5, 0.5, 0.5)\n    gltf.scene = gltf.scene.clone()\n    const mixer = new AnimationMixer(gltfanimation.scene)\n    gltfanimation.animations.forEach(clip => {\n        // console.log(clip, mixer)\n        mixer.clipAction(clip, gltf.scene.children[0]).play()\n        // mixer.setTime(0.5)\n    })\n\n    useFrame(() => {\n        // console.log(mixer)\n        mixer.update(0.02)\n        // mixer.time = 5\n    })\n    // useFrame(() => (mixer.existingAction))\n\n    return (\n        <animated.primitive\n            object={gltf.scene}\n            dispose={null}\n            position={anim.pos}\n            rotation={anim.rot}\n        />\n    )\n}\n\nconst vectorToThree = (vector: Vector2) => {\n    if (vector[0] === 1 && vector[1] === 0) return Math.PI / 2\n    if (vector[0] === 0 && vector[1] === -1) return (Math.PI / 2) * 2\n    if (vector[0] === -1 && vector[1] === 0) return (Math.PI / 2) * 3\n    if (vector[0] === 0 && vector[1] === 1) return (Math.PI / 2) * 4\n    return 0\n}\n\n// export const box = (props: RenderComponentProps) => {\n//     return (\n//         <mesh>\n//             <boxBufferGeometry attach=\"geometry\" args={[0.5, 0.5, 0.5]} />\n//             <meshStandardMaterial attach=\"material\" color={props.color} />\n//         </mesh>\n//     )\n// }\n","import { Vector2 } from './types'\n\nexport const PLAYER_ID = 'player'\n\nexport const UP: Vector2 = [0, -1]\nexport const RIGHT: Vector2 = [1, 0]\nexport const DOWN: Vector2 = [0, 1]\nexport const LEFT: Vector2 = [-1, 0]\n","const soundList = {\n    button: `${process.env.PUBLIC_URL}/sounds/Button_gameplay.mp3`,\n    music: `${process.env.PUBLIC_URL}/sounds/elementary1.mp3`,\n    Alert_NO: `${process.env.PUBLIC_URL}/sounds/Alert_NO.mp3`,\n    Alert_YES: `${process.env.PUBLIC_URL}/sounds/Alert_YES.mp3`,\n    Bazooka: `${process.env.PUBLIC_URL}/sounds/Bazooka.mp3`,\n    Crossbow: `${process.env.PUBLIC_URL}/sounds/Crossbow.mp3`,\n    Engine_start: `${process.env.PUBLIC_URL}/sounds/Engine_start.mp3`,\n    Engine_LOOP_128: `${process.env.PUBLIC_URL}/sounds/Engine_LOOP_128.mp3`,\n    Engine_NO_1: `${process.env.PUBLIC_URL}/sounds/Engine_NO_1.mp3`,\n    Engine_NO_2: `${process.env.PUBLIC_URL}/sounds/Engine_NO_2.mp3`,\n    Engine_stop: `${process.env.PUBLIC_URL}/sounds/Engine_stop.mp3`,\n    Equip_1: `${process.env.PUBLIC_URL}/sounds/Equip_1.mp3`,\n    Equip_2: `${process.env.PUBLIC_URL}/sounds/Equip_2.mp3`,\n    Equip_3: `${process.env.PUBLIC_URL}/sounds/Equip_3.mp3`,\n    Equip_4: `${process.env.PUBLIC_URL}/sounds/Equip_4.mp3`,\n    Hero_1: `${process.env.PUBLIC_URL}/sounds/Hero_1.mp3`,\n    Hero_2: `${process.env.PUBLIC_URL}/sounds/Hero_2.mp3`,\n    Jump: `${process.env.PUBLIC_URL}/sounds/Jump.mp3`,\n}\n\nexport type SoundName = keyof typeof soundList\n\nexport const play = (name: SoundName, volume?: number) => {\n    const sound = new Audio(soundList[name])\n    if (volume) sound.volume = volume\n    sound.play()\n    // sound.addEventListener('ended', () => {\n    //     sound.play()\n    // })\n}\nexport const playEquip = (volume?: number) => {\n    const list = ['Equip_1', 'Equip_2', 'Equip_3', 'Equip_4']\n    play(list[Math.round(Math.random() * 4)] as SoundName, volume)\n}\n\nconst engineStart = new Audio(soundList['Engine_LOOP_128'])\n\nexport const playEngine = (volume?: number) => {\n    if (volume) engineStart.volume = volume\n    // const playEnd = () => {\n    //     play('Engine_stop', volume)\n    //     engineStart.removeEventListener('ended', playEnd)\n    // }\n    engineStart.play()\n    // engineStart.removeEventListener('ended', playEnd)\n    // engineStart.addEventListener('ended', playEnd)\n}\n","import { uniqueId, sample } from 'lodash'\nimport React, { FC } from 'react'\nimport { ObjectDefinition, ObjectTypes } from '../types/types'\nimport { Button, Grass, Ground, Ice } from './models/Items'\nimport { remove, move, setObjectData } from '../state/gameReducer'\nimport { PLAYER_ID } from '../types/consts'\nimport { play } from '../audio/play'\n\nconst tileDebugComponent = (color: string) => (props: any) => (\n    <div\n        style={{ width: '100%', height: '100%', backgroundColor: color, fontSize: 9 }}\n        {...props}\n    />\n)\n\nexport const tileTypeDefinitions: Partial<Record<ObjectTypes, ObjectDefinition>> = {\n    [ObjectTypes.Grass]: {\n        name: 'Grass',\n        height: 0,\n        getId: () => uniqueId('grass'),\n        Component: tileDebugComponent('green'),\n        Component3d: Grass,\n    },\n\n    [ObjectTypes.Ice]: {\n        name: 'Ice',\n        height: 0,\n        getId: () => uniqueId('ice'),\n        enter: ({ who, vector }) => [move({ targetId: who.id, vector })],\n        Component: tileDebugComponent('lightblue'),\n        Component3d: Ice,\n    },\n\n    [ObjectTypes.RockFloor]: {\n        name: 'Rock floor',\n        height: 0,\n        getId: () => uniqueId('rock-floor'),\n        Component: tileDebugComponent('gray'),\n        Component3d: Ground,\n    },\n\n    [ObjectTypes.Button]: {\n        name: 'Button',\n        height: 0,\n        getId: () => uniqueId('button'),\n        push: ({ state, self }) => {\n            const randomProp = sample(state.objects.filter(p => p.id !== PLAYER_ID))\n            play('button')\n            if (!randomProp) return []\n            return [\n                remove(randomProp.id),\n                setObjectData({ targetId: self.id, data: { info: uniqueId('Ups!') } }),\n            ]\n        },\n        Component: tileDebugComponent('blue'),\n        Component3d: Button,\n    },\n}\n","import { uniqueId } from 'lodash'\nimport React from 'react'\nimport { remove, setObjectData, move } from '../state/gameReducer'\nimport { PLAYER_ID } from '../types/consts'\nimport { ObjectDefinition, ObjectTypes } from '../types/types'\nimport { Item, Player } from './models/Items'\nimport { play, playEquip } from '../audio/play'\n\nconst propDebugComponent = (color: string) => ({ instance, children }: any) => {\n    return (\n        <div\n            style={{\n                margin: '20%',\n                width: '60%',\n                height: '60%',\n                borderRadius: instance.type === ObjectTypes.Player ? 100 : 5,\n                backgroundColor: color,\n                color: 'black',\n                opacity: 0.7,\n            }}\n        >\n            <pre style={{ padding: 2, fontSize: 8 }}>{children}</pre>\n        </div>\n    )\n}\n\nexport const propTypeDefinitions: Partial<Record<ObjectTypes, ObjectDefinition>> = {\n    [ObjectTypes.Player]: {\n        name: 'Player',\n        height: 2,\n        getId: () => PLAYER_ID,\n        Component: propDebugComponent('white'),\n        Component3d: Player,\n    },\n\n    [ObjectTypes.BigRock]: {\n        name: 'Big rock',\n        height: 0.5,\n        getId: () => uniqueId('big-rock'),\n        push: ({ self, vector }) => [move({ targetId: self.id, vector })],\n        Component: propDebugComponent('brown'),\n        Component3d: Item,\n    },\n\n    [ObjectTypes.Cannon]: {\n        name: 'Cannon',\n        height: 0,\n        getId: () => uniqueId('cannon'),\n        equip: ({ who, self }) => {\n            playEquip(0.8)\n            return [setObjectData({ targetId: who.id, data: { gun: 'cannon' } }), remove(self.id)]\n        },\n        Component: propDebugComponent('red'),\n        Component3d: Item,\n    },\n}\n","import { tileTypeDefinitions } from '../objects/tileTypeDefinitions'\nimport { propTypeDefinitions } from '../objects/propTypeDefinitions'\nimport { ObjectInstance, ObjectTypes } from '../types/types'\nimport { findByXY } from '../helpers'\n\nconst tileDict = {\n    0: ObjectTypes.Grass,\n    1: ObjectTypes.RockFloor,\n    2: ObjectTypes.Button,\n    3: ObjectTypes.Ice,\n}\n\n// prettier-ignore\nconst mapBitmap = [\n    [1,1,1,1,2,1,1,],\n    [1,0,3,3,0,0,1,],\n    [1,0,0,1,1,0,1,],\n    [1,0,0,1,0,0,1,],\n    [1,1,1,1,1,1,1,],\n]\n\nconst propDict = {\n    1: ObjectTypes.Player,\n    2: ObjectTypes.BigRock,\n    3: ObjectTypes.Cannon,\n}\n\n// prettier-ignore\nconst propsBitmap = [\n    [0,0,0,0,0,0,0,],\n    [0,1,0,0,0,0,0,],\n    [0,0,0,0,0,0,0,],\n    [0,2,0,0,3,0,2,],\n    [0,0,0,0,0,0,0,],\n]\n\n// TODO?\nconst randomRotation = () => {\n    return (Math.PI / 2) * Math.round(Math.random() * 4)\n}\n\nexport const createMap = (): ObjectInstance[] => {\n    const tiles: ObjectInstance[] = mapBitmap.flatMap((items, y) =>\n        items.map((typeNumber, x) => {\n            const type = tileDict[typeNumber as keyof typeof tileDict]\n            return {\n                type,\n                xy: [x, y],\n                id: tileTypeDefinitions[type]!.getId(),\n                elevation: Math.random() / 1.5,\n                rotation: [0, 0],\n                zIndex: 1,\n                aIndex: 100,\n                data: {},\n            }\n        }),\n    )\n\n    const props = propsBitmap\n        .flatMap((items, y) =>\n            items.map((typeNumber, x) => {\n                const type = propDict[typeNumber as keyof typeof propDict]\n                if (!type) return\n                return {\n                    type,\n                    xy: [x, y],\n                    id: propTypeDefinitions[type]!.getId(),\n                    elevation: findByXY(tiles, [x, y])[0]?.elevation || 0,\n                    rotation: [0, 0],\n                    zIndex: 2,\n                    aIndex: 10,\n                    data: {},\n                }\n            }),\n        )\n        .filter(a => a) as ObjectInstance[]\n\n    return [...props, ...tiles]\n}\n","import { ObjectDefinition, ObjectTypes } from '../types/types'\nimport { tileTypeDefinitions } from './tileTypeDefinitions'\nimport { propTypeDefinitions } from './propTypeDefinitions'\n\nconst objectDefinitions: Partial<Record<ObjectTypes, ObjectDefinition>> = {\n    ...tileTypeDefinitions,\n    ...propTypeDefinitions,\n}\n\nexport const getDefinition = (type: ObjectTypes): ObjectDefinition => {\n    const def = objectDefinitions[type]\n\n    if (!def) throw new Error(`[getDefinition] Definition for ${type} not found`)\n\n    return def\n}\n","import { Action } from 'redux'\nimport { applyVector, asArray, findById, findByXY } from '../../helpers'\nimport { getDefinition } from '../../objects/definitions'\nimport { ActionEvent, Vector2, ObjectInstance } from '../../types/types'\nimport { GameState } from '../gameReducer'\nimport { ResolverResults } from './types'\n\nconst MAX_ELEVATION_DIFF = 0.5\n\nexport const moveResolver = (\n    state: GameState,\n    targetId: string,\n    vector: Vector2,\n): ResolverResults => {\n    let objects = state.objects\n    const actions: Action[] = []\n    const addActions = (a: Action | Action[] = []) => actions.push(...asArray(a))\n    const abortResults = { objects, actions }\n\n    const target = findById(objects, targetId)\n\n    if (!target) {\n        console.warn(`[move] Target ${targetId} not found`)\n        return abortResults\n    }\n\n    const newXY = applyVector(target.xy, vector)\n    const newXYObjects = findByXY(objects, newXY).sort((a, b) => b.aIndex - a.aIndex)\n\n    // Nothing there, don't go\n    if (!newXYObjects.length) {\n        return abortResults\n    }\n\n    // Can enter to this region?\n    for (const obj of newXYObjects) {\n        const objDef = getDefinition(obj.type)\n        const event: ActionEvent = { who: target, vector, state, self: obj }\n\n        if (obj.elevation + objDef.height - target.elevation > MAX_ELEVATION_DIFF) {\n            addActions(objDef.push?.(event))\n            return { objects, actions }\n        }\n    }\n\n    // Post enter events\n    for (const obj of newXYObjects) {\n        const objDef = getDefinition(obj.type)\n        const event: ActionEvent = { who: target, vector, state, self: obj }\n        addActions(objDef.enter?.(event))\n    }\n\n    objects = objects.map(obj => {\n        if (obj !== target) return obj\n        return { ...obj, xy: newXY, elevation: maxElevation(newXYObjects) }\n    })\n\n    return { objects, actions }\n}\n\nconst maxElevation = (objects: ObjectInstance[]): number =>\n    Math.max(\n        ...objects.map(obj => {\n            const objDef = getDefinition(obj.type)\n            return objDef.height + obj.elevation\n        }),\n    )\n","import actionCreatorFactory from 'typescript-fsa'\nimport { reducerWithInitialState } from 'typescript-fsa-reducers'\nimport { arrMerge, findById, findByXY } from '../helpers'\nimport { createMap } from '../mocks/mapMock'\nimport { Vector2, ObjectInstance, ObjectInstanceData, ActionEvent } from '../types/types'\nimport { Action } from 'redux'\nimport { rotateResolver } from './resolvers/rotateResolver'\nimport { moveResolver } from './resolvers/moveResolver'\nimport { ResolverResults } from './resolvers/types'\nimport { getDefinition } from '../objects/definitions'\n\nexport interface GameState {\n    queueStared: boolean\n    queue: Action[]\n    objects: ObjectInstance[]\n}\n\nexport interface GameStateAware {\n    game: GameState\n}\n\nexport const initialState: GameState = {\n    queueStared: false,\n    queue: [],\n    objects: createMap(),\n}\n\nconst action = actionCreatorFactory('GAME')\n\nexport const enqueue = action<Action | Action[]>('ENQUEUE')\nexport const tryNextAction = action('TRY_NEXT_ACTION')\nexport const nextAction = action<Action>('NEXT_ACTION')\nexport const queueEnd = action('QUEUE_END')\n\nexport const move = action<{ targetId: string; vector: Vector2 }>('MOVE')\nexport const rotate = action<{ targetId: string; rotation: Vector2 }>('ROTATE')\nexport const remove = action<string>('REMOVE')\nexport const equip = action<{ targetId: string }>('EQUIP')\nexport const setObjectData = action<{ targetId: string; data: Partial<ObjectInstanceData> }>(\n    'SET_OBJECT_DATA',\n)\n\nexport const gameReducer = reducerWithInitialState(initialState)\n    .case(\n        enqueue,\n        (state, action): GameState => ({\n            ...state,\n            queue: arrMerge(state.queue, action),\n        }),\n    )\n    .case(\n        nextAction,\n        (state, action): GameState => ({\n            ...state,\n            queueStared: true,\n            queue: state.queue.filter(a => a !== action),\n        }),\n    )\n    .case(queueEnd, (state): GameState => ({ ...state, queueStared: false }))\n    .case(\n        move,\n        (state, { targetId, vector }): GameState => {\n            const { actions, objects } = moveResolver(state, targetId, vector)\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n    .case(\n        rotate,\n        (state, { targetId, rotation }): GameState => {\n            const { actions, objects } = rotateResolver(state, targetId, rotation)\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n    .case(\n        remove,\n        (state, targetId): GameState => ({\n            ...state,\n            objects: state.objects.filter(obj => obj.id !== targetId),\n        }),\n    )\n    .case(\n        equip,\n        (state, { targetId }): GameState => {\n            const { actions, objects } = equipResolver(state, targetId)\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n    .case(\n        setObjectData,\n        (state, { targetId, data }): GameState => {\n            const { actions, objects } = setObjectDataResolver(state, targetId, data)\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n\nexport const equipResolver = (state: GameState, targetId: string): ResolverResults => {\n    const actions: Action[] = []\n    const target = findById(state.objects, targetId)\n    if (!target) return { objects: state.objects, actions: [] }\n\n    const myObjects = findByXY(state.objects, target.xy).sort((a, b) => b.aIndex - a.aIndex)\n\n    for (const obj of myObjects) {\n        const objDef = getDefinition(obj.type)\n        const event: ActionEvent = { who: target, vector: [0, 0], state, self: obj }\n        actions.push(...(objDef.equip?.(event) || []))\n    }\n\n    return {\n        actions,\n        objects: state.objects,\n    }\n}\n\nexport const setObjectDataResolver = (\n    { objects }: GameState,\n    targetId: string,\n    data: Partial<ObjectInstanceData>,\n): ResolverResults => {\n    const target = findById(objects, targetId)\n\n    return {\n        objects: objects.map(obj => {\n            if (obj !== target) return obj\n            return { ...obj, data: { ...obj.data, ...data } }\n        }),\n        actions: [],\n    }\n}\n","import { findById } from '../../helpers'\nimport { Vector2 } from '../../types/types'\nimport { ResolverResults } from './types'\nimport { GameState } from '../gameReducer'\n\nexport const rotateResolver = (\n    { objects }: GameState,\n    targetId: string,\n    rotation: Vector2,\n): ResolverResults => {\n    const target = findById(objects, targetId)\n\n    return {\n        objects: objects.map(obj => {\n            if (obj !== target) return obj\n            return { ...obj, rotation }\n        }),\n        actions: [],\n    }\n}\n","import { Action } from 'redux'\nimport { combineEpics, StateObservable } from 'redux-observable'\nimport { concat, from, Observable, of, Subject } from 'rxjs'\nimport {\n    concatMap,\n    delay,\n    distinctUntilChanged,\n    filter,\n    ignoreElements,\n    map,\n    mapTo,\n    startWith,\n    switchMap,\n    switchMapTo,\n    flatMap,\n    tap,\n} from 'rxjs/operators'\nimport { enqueue, GameStateAware, nextAction, tryNextAction, queueEnd, equip } from './gameReducer'\nimport { first } from 'lodash'\nimport { play } from '../audio/play'\n\nconst enqueueEpic = (\n    actions$: Observable<Action>,\n    state$: StateObservable<GameStateAware>,\n): Observable<Action> =>\n    actions$.pipe(\n        filter(enqueue.match),\n        filter(() => !state$.value.game.queueStared),\n        mapTo(tryNextAction()),\n    )\n\nconst tryNextEpic = (\n    actions$: Observable<Action>,\n    state$: StateObservable<GameStateAware>,\n): Observable<Action> =>\n    actions$.pipe(\n        filter(tryNextAction.match),\n        map(() => first(state$.value.game.queue)),\n        map(action => (action ? nextAction(action) : queueEnd())),\n    )\n\nconst nextActionEpic = (\n    actions$: Observable<Action>,\n    state$: StateObservable<GameStateAware>,\n): Observable<Action> =>\n    actions$.pipe(\n        filter(nextAction.match),\n        flatMap(action =>\n            concat(of(action.payload), of(tryNextAction()).pipe(delay(action.meta?.delay || 50))),\n        ),\n    )\n\nexport const gameEpics = combineEpics(enqueueEpic, tryNextEpic, nextActionEpic)\n","import { Action } from 'redux'\nimport { combineEpics } from 'redux-observable'\nimport { Observable } from 'rxjs'\nimport { filter, ignoreElements, tap } from 'rxjs/operators'\nimport { play, playEngine } from '../audio/play'\nimport { equip, move } from './gameReducer'\nimport { PLAYER_ID } from '../types/consts'\n\nconst moveSoundEpic = (actions$: Observable<Action>): Observable<Action> =>\n    actions$.pipe(\n        filter(move.match),\n        filter(action => action.payload.targetId === PLAYER_ID),\n        tap(() => playEngine(0.1)),\n        ignoreElements(),\n    )\n\nconst equipSoundEpic = (actions$: Observable<Action>): Observable<Action> =>\n    actions$.pipe(\n        filter(equip.match),\n        tap(() => play('Hero_2', 0.7)),\n        ignoreElements(),\n    )\n\nexport const soundEpics = combineEpics(moveSoundEpic, equipSoundEpic)\n","import { applyMiddleware, combineReducers, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { combineEpics, createEpicMiddleware } from 'redux-observable'\nimport { gameEpics } from './gameEpics'\nimport { gameReducer } from './gameReducer'\nimport { soundEpics } from './soundEpics'\n\nconst epicMiddleware = createEpicMiddleware()\n\nconst composeEnhancers = composeWithDevTools({\n    name: 'App',\n})\n\nconst rootReducer = combineReducers({\n    game: gameReducer,\n})\n\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(epicMiddleware)))\n\nepicMiddleware.run(combineEpics(soundEpics, gameEpics))\n","import { isEqual } from 'lodash'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Action } from 'redux'\nimport { findById } from '../helpers'\nimport { enqueue, equip, GameStateAware, move, rotate } from '../state/gameReducer'\nimport { PLAYER_ID } from '../types/consts'\nimport { Vector2 } from '../types/types'\n\nconst targetId = PLAYER_ID\n\nexport const useGame = () => {\n    const state = useSelector((state: GameStateAware) => state.game)\n    const dispatch = useDispatch()\n\n    const triggerMove = (vector: Vector2) => {\n        if (state.queueStared) return\n\n        const actions: Action[] = []\n        const who = findById(state.objects, PLAYER_ID)\n\n        if (!who) {\n            return console.warn(`Player don't exists [${PLAYER_ID}]`)\n        }\n\n        if (!isEqual(who.rotation, vector)) {\n            actions.push(rotate({ targetId: PLAYER_ID, rotation: vector }))\n        } else {\n            actions.push(move({ targetId: PLAYER_ID, vector }))\n        }\n\n        dispatch(enqueue(actions))\n    }\n\n    const triggerEquip = () => {\n        dispatch(enqueue(equip({ targetId: PLAYER_ID })))\n    }\n\n    return { ...state, move: triggerMove, equip: triggerEquip }\n}\n","import { useEffect } from 'react'\n\nexport const useKeyboardEvent = (key: string, callback: Function) => {\n    useEffect(() => {\n        const handler = (event: KeyboardEvent) => {\n            if (event.key === key) callback()\n        }\n\n        window.addEventListener('keydown', handler)\n\n        return () => window.removeEventListener('keydown', handler)\n    })\n}\n","import React from 'react'\nimport { useGame } from '../hooks/useGame'\nimport { useKeyboardEvent } from '../hooks/useKeyboardEvent'\nimport { getDefinition } from '../objects/definitions'\nimport { DOWN, LEFT, PLAYER_ID, RIGHT, UP } from '../types/consts'\nimport { ObjectInstance, ObjectTypes } from '../types/types'\nimport { isEmpty } from 'lodash'\n\ninterface DebugViewProps {\n    objects: ObjectInstance[]\n}\n\nconst size = 60\n\nexport const DebugView = ({ objects }: DebugViewProps) => {\n    const { move, equip } = useGame()\n\n    const left = () => move(LEFT)\n    const up = () => move(UP)\n    const down = () => move(DOWN)\n    const right = () => move(RIGHT)\n\n    useKeyboardEvent('ArrowLeft', left)\n    useKeyboardEvent('ArrowUp', up)\n    useKeyboardEvent('ArrowDown', down)\n    useKeyboardEvent('ArrowRight', right)\n    useKeyboardEvent('Enter', equip)\n\n    return (\n        <div\n            style={{\n                position: 'absolute',\n                zIndex: 100,\n                top: 0,\n                right: 0,\n                width: size * 8,\n                opacity: 0.8,\n            }}\n        >\n            <button onClick={left}>←</button>\n            <button onClick={up}>↑</button>\n            <button onClick={down}>↓</button>\n            <button onClick={right}>→</button>\n            <button onClick={equip}>equip</button>\n\n            <div style={{ position: 'relative' }}>\n                {objects.map(obj => {\n                    const { type, id, xy, rotation, elevation, zIndex, data } = obj\n                    const { Component } = getDefinition(type)\n                    return (\n                        <div\n                            key={id}\n                            style={{\n                                position: 'absolute',\n                                left: xy[0] * size,\n                                top: xy[1] * size,\n                                width: size,\n                                height: size,\n                                zIndex,\n                            }}\n                        >\n                            <Component instance={obj}>\n                                {type} <br />\n                                {isEmpty(data) ? '' : JSON.stringify(data, null, 1)}\n                            </Component>\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n\ninterface LabelProps {\n    text: string\n    bottom?: boolean\n}\n\nexport const Label = ({ text, bottom }: LabelProps) => (\n    <div\n        style={{\n            position: 'absolute',\n            left: 0,\n            top: bottom ? '80%' : 0,\n            fontSize: 10,\n            color: 'black',\n        }}\n    >\n        {text}\n    </div>\n)\n","import React from 'react'\nimport { Color } from 'three'\n\nconst d = 5\n\nexport const Environment = () => {\n    return (\n        <group>\n            <ambientLight intensity={2} />\n            <pointLight\n                position={[6, 7, 8]}\n                intensity={2.2}\n                color={new Color('#3a8dc2')}\n                shadow-mapSize-Height=\"1024\"\n                shadow-mapSize-width=\"1024\"\n                shadow-camera-far={30}\n                shadow-bias={-0.01}\n                castShadow\n                shadow-camera-left={-d}\n                shadow-camera-right={d}\n                shadow-camera-top={d}\n                shadow-camera-bottom={-d}\n            />\n            <pointLight position={[1, 3, 5]} intensity={2.2} color={new Color('#c86b6f')} />\n        </group>\n    )\n}\n","import React, { Suspense } from 'react'\nimport { Canvas, useThree } from 'react-three-fiber'\nimport { Color, PCFSoftShadowMap } from 'three'\nimport { useGame } from '../hooks/useGame'\nimport { getDefinition } from '../objects/definitions'\nimport { DebugView } from './DebugView'\nimport { play } from '../audio/play'\nimport { Environment } from './Environment'\n\nexport const GameInstance = () => {\n    const { objects } = useGame()\n    const { gl } = useThree()\n\n    return (\n        <>\n            <DebugView objects={objects} />\n            <Canvas\n                orthographic\n                camera={{ zoom: 100, fov: 1075, position: [-2 + 3, 7, 5 + 2] }}\n                onCreated={scene => {\n                    scene.camera.lookAt(3, 1, 2)\n                    scene.gl.shadowMap.type = PCFSoftShadowMap\n                    scene.gl.shadowMap.enabled = true\n                }}\n            >\n                <Environment />\n                <Suspense\n                    fallback={\n                        <mesh>\n                            <boxBufferGeometry attach=\"geometry\" args={[0.5, 0.5, 0.5]} />\n                            <meshStandardMaterial attach=\"material\" color=\"red\" />\n                        </mesh>\n                    }\n                >\n                    {objects.map(obj => {\n                        const { Component3d } = getDefinition(obj.type)\n                        return <Component3d key={obj.id} instance={obj} />\n                    })}\n                </Suspense>\n            </Canvas>\n        </>\n    )\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { store } from '../state/store'\nimport { GameInstance } from './GameInstance'\n\nexport const App = () => {\n    return (\n        <Provider store={store}>\n            <GameInstance />\n        </Provider>\n    )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './app/App'\nimport './styles/global.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}