{"version":3,"sources":["types/types.ts","helpers.ts","types/consts.ts","mocks/mapMock.ts","objects/models/Items.tsx","objects/tileTypeDefinitions.tsx","audio/play.ts","objects/propTypeDefinitions.tsx","objects/definitions.ts","state/resolvers/flyResolver.ts","state/resolvers/moveResolver.ts","config.ts","state/gameReducer.ts","state/resolvers/rotateResolver.ts","state/gameEpics.ts","state/soundEpics.ts","state/store.ts","hooks/useEditor.ts","hooks/useKeyboardEvent.tsx","app/DebugView.tsx","app/Environment.tsx","app/GameInstance.tsx","hooks/useGame.ts","app/App.tsx","index.tsx"],"names":["ObjectTypes","applyVector","x","y","findById","props","id","find","prop","findByXY","objects","xy","filter","tile","x1","y1","x2","y2","samePosition","asArray","item","Array","isArray","arrMerge","a","b","UP","RIGHT","DOWN","LEFT","color","tileDict","0","Grass","1","RockFloor","3","Ice","mapBitmap","propDict","Player","2","BigRock","Cannon","4","Crossbow","5","Fence","6","Dor","7","Button","8","Box","9","WinTrigger","propsBitmap","url","Asset","instance","elevation","rotation","castShadow","receiveShadow","elevationFix","anim","useSpring","pos","rot","vectorToThree","scene","useLoader","GLTFLoader","process","clone","children","scale","set","primitive","object","position","AnimatieAsset","data","gltf","gltfanimation","mixer","AnimationMixer","animations","forEach","clip","clipAction","play","useFrame","update","cannonInHeadScene","crossbowInHeadScene","group","visible","gun","AnimateSelfAsset","gltfScene","index","time","stopAllAction","vector","Math","PI","tileDebugComponent","style","width","height","backgroundColor","fontSize","tileTypeDefinitions","name","Component","Component3d","enter","who","move","targetId","push","force","self","soundList","button","music","Alert_NO","Alert_YES","Bazooka","Engine_start","Engine_LOOP_128","Engine_NO_1","Engine_NO_2","Engine_stop","Equip_1","Equip_2","Equip_3","Equip_4","Hero_1","Hero_2","Jump","volume","sound","Audio","playEquip","round","random","engineStart","propDebugComponent","margin","borderRadius","type","opacity","padding","propTypeDefinitions","remove","state","console","warn","toggle","open","setObjectData","win","attach","args","log","equip","Boom","RocketProjectile","projectileLaunch","map","v","delay","projectileHit","what","tmpSpawn","uniqueId","aIndex","zIndex","CrossbowProjectile","objectDefinitions","getDefinition","def","Error","isTooHight","ontoObj","flyer","objDef","maxElevation","max","obj","mockObjects","tiles","flatMap","items","typeNumber","sample","createMap","initialState","queueStared","queue","cleanObjectsState","action","actionCreatorFactory","loadMap","reset","enqueue","tryNextAction","nextAction","queueEnd","rotate","projectile","fly","flyEnd","updateObject","gameReducer","reducerWithInitialState","case","actions","addActions","abortResults","target","newXY","newXYObjects","sort","length","event","moveResolver","rotateResolver","equipResolver","byId","launchActions","limit","hitTargetId","flyResolver","undefined","hitActions","setObjectDataResolver","objectValues","myObjects","gameEpics","combineEpics","actions$","state$","pipe","match","value","game","mapTo","first","newActionDelay","payload","meta","concat","of","soundEpics","tap","ignoreElements","epicMiddleware","createEpicMiddleware","composeEnhancers","composeWithDevTools","rootReducer","combineReducers","store","createStore","applyMiddleware","run","useEditor","useSelector","useState","editMode","setEditMode","dispatch","useDispatch","edit","toggleEditMode","copyMap","serializedMap","JSON","stringify","navigator","clipboard","writeText","then","error","useKeyboardEvent","key","callback","useEffect","handler","window","addEventListener","removeEventListener","DebugView","editId","setEditId","top","right","size","onClick","min","step","onChange","parseInt","Object","keys","left","isEmpty","Environment","intensity","Color","shadow-mapSize-Height","shadow-mapSize-width","shadow-camera-far","shadow-bias","shadow-camera-left","shadow-camera-right","shadow-camera-top","shadow-camera-bottom","GameInstance","player","isEqual","fire","useGame","up","down","loadMap1","map1","loadMap2","map2","bottom","textAlign","orthographic","camera","zoom","fov","onCreated","lookAt","gl","shadowMap","PCFSoftShadowMap","enabled","fallback","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d0e886da.chunk.js","sourcesContent":["import { GameState } from '../state/gameReducer'\nimport { Action } from 'redux'\nimport { FC, ReactNode } from 'react'\n\nexport type XY = [number, number]\nexport type Vector2 = [number, number]\n\nexport enum ObjectTypes {\n    Player = 'Player',\n    WinTrigger = 'WinTrigger',\n\n    Grass = 'Grass',\n    RockFloor = 'RockFloor',\n    Box = 'Box',\n    BigRock = 'BigRock',\n\n    Fence = 'Fence',\n\n    Button = 'Button',\n    Dor = 'Dor',\n    Ice = 'Ice',\n\n    Crossbow = 'Crossbow',\n    Cannon = 'Cannon',\n    Boom = 'Boom',\n\n    CrossbowProjectile = 'CrossbowProjectile',\n    RocketProjectile = 'RocketProjectile',\n}\n\nexport interface ObjectInstance {\n    type: ObjectTypes\n    id: string\n    xy: XY\n    rotation: Vector2\n    elevation: number\n    zIndex: number\n    aIndex: number\n    data: Partial<ObjectInstanceData>\n}\n\nexport interface ObjectInstanceData {\n    gun: 'cannon' | 'crossbow'\n    info: string\n    open: boolean\n    targetId: string\n}\n\nexport interface ActionEvent {\n    who: ObjectInstance\n    self: ObjectInstance\n    what?: ObjectInstance\n    vector: Vector2\n    state: GameState\n    force?: number\n}\n\nexport interface ObjectDefinition {\n    name: string\n    height: (instance: ObjectInstance) => number\n    push?(event: ActionEvent): Action[] // triggered when elevation is to big\n    enter?(event: ActionEvent): Action[]\n    leave?(event: ActionEvent): Action[]\n    equip?(event: ActionEvent): Action[]\n    projectileLaunch?(event: ActionEvent): Action[] // eg. for projectile\n    projectileHit?(event: ActionEvent): Action[] // eg. for projectile\n    Component(props: RenderComponentProps & { children: ReactNode }): any\n    Component3d(props: RenderComponentProps): any\n}\n\nexport interface RenderComponentProps {\n    instance: ObjectInstance\n}\n","import { XY, Vector2 } from './types/types'\n\nexport const reverseVector = (vector: Vector2) => vector.map(v => v * -1) as Vector2\n\nexport const applyVector = ([x, y]: XY, [vx, vy]: Vector2): XY => [x + vx, y + vy]\n\nexport const samePosition = ([x1, y1]: XY, [x2, y2]: XY) => x1 === x2 && y1 === y2\n\nexport const findById = <T extends { id: string }>(props: T[], id: string) => {\n    return props.find(prop => prop.id === id)\n}\n\nexport const findByXY = <T extends { xy: XY }>(objects: T[], xy: XY) => {\n    return objects.filter(tile => samePosition(tile.xy, xy))\n}\n\nexport const asArray = <T>(item: T | T[]): T[] => (Array.isArray(item) ? item : [item])\nexport const arrMerge = <T>(a: T[], b: T | T[] = []): T[] => [...a, ...asArray(b)]\n","import { Vector2 } from './types'\n\nexport const PLAYER_ID = 'player'\n\nexport const UP: Vector2 = [0, -1]\nexport const RIGHT: Vector2 = [1, 0]\nexport const DOWN: Vector2 = [0, 1]\nexport const LEFT: Vector2 = [-1, 0]\n","import { sample, uniqueId } from 'lodash'\nimport { findByXY } from '../helpers'\nimport { DOWN, LEFT, RIGHT, UP, PLAYER_ID } from '../types/consts'\nimport { ObjectInstance, ObjectTypes } from '../types/types'\n\nconst tileDict = {\n    0: ObjectTypes.Grass,\n    1: ObjectTypes.RockFloor,\n    3: ObjectTypes.Ice,\n}\n\n// prettier-ignore\nconst mapBitmap = [\n    [1,1,1,1,1,1,1,],\n    [1,0,3,3,0,0,1,],\n    [1,0,0,1,1,0,1,],\n    [1,0,0,1,0,0,1,],\n    [1,1,1,1,1,1,1,],\n]\n\nconst propDict = {\n    1: ObjectTypes.Player,\n    2: ObjectTypes.BigRock,\n    3: ObjectTypes.Cannon,\n    4: ObjectTypes.Crossbow,\n    5: ObjectTypes.Fence,\n    6: ObjectTypes.Dor,\n    7: ObjectTypes.Button,\n    8: ObjectTypes.Box,\n    9: ObjectTypes.WinTrigger,\n}\n\n// prettier-ignore\nconst propsBitmap = [\n    [0,0,0,0,7,0,0,],\n    [0,1,0,8,0,0,0,],\n    [0,3,5,8,0,6,0,],\n    [0,2,0,5,4,2,0,],\n    [0,0,0,0,0,9,0,],\n]\n\n// TODO?\nconst randomRotation = () => {\n    return sample([UP, LEFT, RIGHT, DOWN])!\n}\n\nexport const createMap = (): ObjectInstance[] => {\n    const tiles: ObjectInstance[] = mapBitmap.flatMap((items, y) =>\n        items.map((typeNumber, x) => {\n            const type = tileDict[typeNumber as keyof typeof tileDict]\n            return {\n                type,\n                xy: [x, y],\n                id: uniqueId(type),\n                elevation: Math.random() / (type === ObjectTypes.RockFloor ? 1 : 3),\n                rotation: randomRotation(),\n                zIndex: 1,\n                aIndex: 100,\n                data: {},\n            }\n        }),\n    )\n\n    const props = propsBitmap\n        .flatMap((items, y) =>\n            items.map((typeNumber, x) => {\n                const type = propDict[typeNumber as keyof typeof propDict]\n                if (!type) return\n                return {\n                    type,\n                    xy: [x, y],\n                    id: type === ObjectTypes.Player ? PLAYER_ID : uniqueId(type),\n                    elevation: findByXY(tiles, [x, y])[0]?.elevation || 0,\n                    rotation: [0, 0],\n                    zIndex: 2,\n                    aIndex: 10,\n                    data: type === ObjectTypes.Button ? { targetId: 'Dor39' } : {},\n                }\n            }),\n        )\n        .filter(a => a) as ObjectInstance[]\n\n    return [...props, ...tiles]\n}\n","import React from 'react'\nimport { useLoader, useFrame } from 'react-three-fiber'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport { RenderComponentProps, Vector2 } from '../../types/types'\nimport { AnimationMixer, Group } from 'three'\nimport { setInterval } from 'timers'\nimport { useSpring, animated } from 'react-spring/three'\n\nexport const Player = (props: RenderComponentProps) => {\n    return <AnimatieAsset {...props} url=\"robot_model.gltf\" />\n}\n\nexport const Box = (props: RenderComponentProps) => {\n    return <Asset {...props} url=\"box.gltf\" />\n}\n\nexport const Rock = (props: RenderComponentProps) => {\n    return <Asset {...props} url=\"rock1.gltf\" />\n}\n\nexport const Fence = (props: RenderComponentProps) => {\n    return <Asset {...props} url=\"fence.gltf\" />\n}\n\nexport const Arrow = (props: RenderComponentProps) => {\n    return <Asset {...props} url=\"arrow.gltf\" />\n}\n\nexport const Boom = (props: RenderComponentProps) => {\n    return <AnimateSelfAsset {...props} url=\"boom.gltf\" />\n}\n\nexport const Cannon = (props: RenderComponentProps) => {\n    return <Asset {...props} url=\"rakietnica_srednia.gltf\" elevationFix={-0.8} />\n}\n\nexport const Rocket = (props: RenderComponentProps) => {\n    return <Asset {...props} url=\"rocket.gltf\" />\n}\n\nexport const Crossbow = (props: RenderComponentProps) => {\n    return <Asset {...props} url=\"kusza.gltf\" elevationFix={-0.8} />\n}\n\nexport const Ground = (props: RenderComponentProps) => {\n    return <Asset {...props} url=\"rock.gltf\" castShadow={false} receiveShadow={true} />\n}\n\nexport const Grass = (props: RenderComponentProps) => {\n    return (\n        <Asset\n            {...props}\n            url=\"grass_002_export_test_1_cube.gltf\" // INNY model\n            castShadow={false}\n            receiveShadow={true}\n        />\n    )\n}\n\nexport const Ice = (props: RenderComponentProps) => {\n    return (\n        <Asset\n            {...props}\n            url=\"ice_002_export_test_1_cube.gltf\" // INNY model\n            castShadow={false}\n            receiveShadow={true}\n        />\n    )\n}\n\nexport const Button = (props: RenderComponentProps) => {\n    return (\n        <Asset\n            {...props}\n            url=\"ground_002_export_test_1_cube.gltf\" // INNY model\n            castShadow={false}\n            receiveShadow={true}\n        />\n    )\n}\n\nexport const createTrigger = (color: string) => ({ instance }: RenderComponentProps) => {\n    const { xy, elevation, rotation } = instance\n\n    return (\n        <mesh position={[xy[0], elevation, xy[1]]} rotation={[0, vectorToThree(rotation), 0]}>\n            <boxBufferGeometry attach=\"geometry\" args={[0.5, 1, 0.5]} />\n            <meshStandardMaterial attach=\"material\" color={color} />\n        </mesh>\n    )\n}\n\ninterface AssetProps extends RenderComponentProps {\n    url: string\n    color?: string\n    castShadow?: boolean\n    receiveShadow?: boolean\n    elevationFix?: number\n}\n\nconst Asset = ({\n    url,\n    instance: { xy, elevation, rotation },\n    castShadow = true,\n    receiveShadow = true,\n    elevationFix = 0,\n}: AssetProps) => {\n    const anim = useSpring({\n        pos: [xy[0], elevation + elevationFix, xy[1]],\n        rot: [0, vectorToThree(rotation), 0],\n    })\n    const gltf = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/${url}`)\n    const scene = gltf.scene.clone()\n    if (castShadow) scene.children[0].castShadow = true\n    if (receiveShadow) scene.children[0].receiveShadow = true\n    scene.scale.set(0.5, 0.5, 0.5)\n    return <animated.primitive object={scene} position={anim.pos} rotation={anim.rot} />\n}\n\nconst AnimatieAsset = ({\n    url,\n    instance: { xy, elevation, rotation, data },\n    castShadow = true,\n    receiveShadow = true,\n}: AssetProps) => {\n    const anim = useSpring({\n        pos: [xy[0], elevation, xy[1]],\n        rot: [0, vectorToThree(rotation), 0],\n    })\n\n    const gltf = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/${url}`)\n    gltf.scene.scale.set(0.5, 0.5, 0.5)\n    if (castShadow) gltf.scene.children[0].castShadow = true\n    if (receiveShadow) gltf.scene.children[0].receiveShadow = true\n\n    // const gltfanimation = useLoader(GLTFLoader, `/assets/animations/jump.gltf`)\n    // const gltfanimation = useLoader(GLTFLoader, `/assets/animations/move.gltf`)\n    const gltfanimation = useLoader(\n        GLTFLoader,\n        `${process.env.PUBLIC_URL}/assets/animations/boring.gltf`,\n    )\n    const mixer = new AnimationMixer(gltfanimation.scene)\n    gltfanimation.animations.forEach(clip => {\n        mixer.clipAction(clip, gltf.scene).play()\n    })\n    useFrame(() => mixer.update(0.02))\n\n    const cannonInHead = useLoader(\n        GLTFLoader,\n        `${process.env.PUBLIC_URL}/assets/rakietnica_srednia.gltf`,\n    )\n    const cannonInHeadScene = cannonInHead.scene.clone()\n\n    const crossbowInHead = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/kusza.gltf`)\n    const crossbowInHeadScene = crossbowInHead.scene.clone()\n\n    return (\n        <animated.group position={anim.pos} rotation={anim.rot}>\n            <primitive object={gltf.scene}>\n                <primitive object={cannonInHeadScene} visible={data.gun == 'cannon'} />\n                <primitive object={crossbowInHeadScene} visible={data.gun == 'crossbow'} />\n            </primitive>\n        </animated.group>\n    )\n}\n\nconst AnimateSelfAsset = ({\n    url,\n    instance: { xy, elevation, rotation, data },\n    castShadow = true,\n    receiveShadow = true,\n}: AssetProps) => {\n    const anim = useSpring({\n        pos: [xy[0], elevation, xy[1]],\n        rot: [0, vectorToThree(rotation), 0],\n    })\n    const gltf = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/${url}`)\n    const gltfScene = gltf.scene.clone()\n    if (castShadow) gltfScene.children[0].castShadow = true\n    if (receiveShadow) gltfScene.children[0].receiveShadow = true\n\n    gltfScene.scale.set(0.5, 0.5, 0.5)\n\n    const mixer = new AnimationMixer(gltfScene)\n    gltf.animations.forEach((clip, index) => {\n        mixer.clipAction(clip, gltfScene.children[index]).play()\n    })\n    useFrame(() => {\n        mixer.update(0.03)\n        if (mixer.time > 0.8) {\n            mixer.stopAllAction()\n            gltfScene.visible = false\n        }\n    })\n\n    return (\n        <animated.group position={anim.pos} rotation={anim.rot}>\n            <primitive object={gltfScene} />\n        </animated.group>\n    )\n}\n\nconst vectorToThree = (vector: Vector2) => {\n    if (vector[0] === 1 && vector[1] === 0) return Math.PI / 2\n    if (vector[0] === 0 && vector[1] === -1) return (Math.PI / 2) * 2\n    if (vector[0] === -1 && vector[1] === 0) return (Math.PI / 2) * 3\n    // if (vector[0] === 0 && vector[1] === 1) return (Math.PI / 2) * 4\n    return 0\n}\n\n// export const box = (props: RenderComponentProps) => {\n//     return (\n//         <mesh>\n//             <boxBufferGeometry attach=\"geometry\" args={[0.5, 0.5, 0.5]} />\n//             <meshStandardMaterial attach=\"material\" color={props.color} />\n//         </mesh>\n//     )\n// }\n","import { sample, uniqueId } from 'lodash'\nimport React from 'react'\nimport { play } from '../audio/play'\nimport { move, remove, setObjectData } from '../state/gameReducer'\nimport { PLAYER_ID } from '../types/consts'\nimport { ObjectDefinition, ObjectTypes } from '../types/types'\nimport { Button, Grass, Ground, Ice } from './models/Items'\n\nconst tileDebugComponent = (color: string) => (props: any) => (\n    <div\n        style={{ width: '100%', height: '100%', backgroundColor: color, fontSize: 9 }}\n        {...props}\n    />\n)\n\nexport const tileTypeDefinitions: Partial<Record<ObjectTypes, ObjectDefinition>> = {\n    [ObjectTypes.Grass]: {\n        name: 'Grass',\n        height: () => 0,\n        Component: tileDebugComponent('green'),\n        Component3d: Grass,\n    },\n\n    [ObjectTypes.Ice]: {\n        name: 'Ice',\n        height: () => 0,\n        enter: ({ who, vector }) => [move({ targetId: who.id, vector })],\n        Component: tileDebugComponent('lightblue'),\n        Component3d: Ice,\n    },\n\n    [ObjectTypes.RockFloor]: {\n        name: 'Rock floor',\n        height: () => 0,\n        push: ({ force, self }) => {\n            // if (force && force >= 50) return [remove(self.id)]\n            // console.log(self)\n            return []\n        },\n        Component: tileDebugComponent('gray'),\n        Component3d: Ground,\n    },\n}\n","const soundList = {\n    button: `${process.env.PUBLIC_URL}/sounds/Button_gameplay.mp3`,\n    music: `${process.env.PUBLIC_URL}/sounds/elementary1.mp3`,\n    Alert_NO: `${process.env.PUBLIC_URL}/sounds/Alert_NO.mp3`,\n    Alert_YES: `${process.env.PUBLIC_URL}/sounds/Alert_YES.mp3`,\n    Bazooka: `${process.env.PUBLIC_URL}/sounds/Bazooka.mp3`,\n    Crossbow: `${process.env.PUBLIC_URL}/sounds/Crossbow.mp3`,\n    Engine_start: `${process.env.PUBLIC_URL}/sounds/Engine_start.mp3`,\n    Engine_LOOP_128: `${process.env.PUBLIC_URL}/sounds/Engine_LOOP_128.mp3`,\n    Engine_NO_1: `${process.env.PUBLIC_URL}/sounds/Engine_NO_1.mp3`,\n    Engine_NO_2: `${process.env.PUBLIC_URL}/sounds/Engine_NO_2.mp3`,\n    Engine_stop: `${process.env.PUBLIC_URL}/sounds/Engine_stop.mp3`,\n    Equip_1: `${process.env.PUBLIC_URL}/sounds/Equip_1.mp3`,\n    Equip_2: `${process.env.PUBLIC_URL}/sounds/Equip_2.mp3`,\n    Equip_3: `${process.env.PUBLIC_URL}/sounds/Equip_3.mp3`,\n    Equip_4: `${process.env.PUBLIC_URL}/sounds/Equip_4.mp3`,\n    Hero_1: `${process.env.PUBLIC_URL}/sounds/Hero_1.mp3`,\n    Hero_2: `${process.env.PUBLIC_URL}/sounds/Hero_2.mp3`,\n    Jump: `${process.env.PUBLIC_URL}/sounds/Jump.mp3`,\n}\n\nexport type SoundName = keyof typeof soundList\n\nexport const play = (name: SoundName, volume?: number) => {\n    const sound = new Audio(soundList[name])\n    if (volume) sound.volume = volume\n    sound.play()\n    // sound.addEventListener('ended', () => {\n    //     sound.play()\n    // })\n}\nexport const playEquip = (volume?: number) => {\n    const list = ['Equip_1', 'Equip_2', 'Equip_3', 'Equip_4']\n    play(list[Math.round(Math.random() * 4)] as SoundName, volume)\n}\n\nconst engineStart = new Audio(soundList['Engine_LOOP_128'])\n\nexport const playEngine = (volume?: number) => {\n    if (volume) engineStart.volume = volume\n    // const playEnd = () => {\n    //     play('Engine_stop', volume)\n    //     engineStart.removeEventListener('ended', playEnd)\n    // }\n    engineStart.play()\n    // engineStart.removeEventListener('ended', playEnd)\n    // engineStart.addEventListener('ended', playEnd)\n}\n","import React from 'react'\nimport { playEquip, play } from '../audio/play'\nimport { move, remove, setObjectData, tmpSpawn, win } from '../state/gameReducer'\nimport { ObjectDefinition, ObjectTypes } from '../types/types'\nimport {\n    Cannon,\n    Crossbow,\n    Player,\n    Rock,\n    Rocket,\n    Box,\n    Boom,\n    Fence,\n    Arrow,\n    Button,\n    createTrigger,\n} from './models/Items'\nimport { reverseVector } from '../helpers'\nimport { uniqueId, sample } from 'lodash'\nimport { PLAYER_ID } from '../types/consts'\n\nconst propDebugComponent = (color: string) => ({ instance, children }: any) => {\n    return (\n        <div\n            style={{\n                margin: '20%',\n                width: '60%',\n                height: '60%',\n                borderRadius: instance.type === ObjectTypes.Player ? 100 : 5,\n                backgroundColor: color,\n                color: 'black',\n                opacity: 0.7,\n            }}\n        >\n            <pre style={{ padding: 2, fontSize: 8 }}>{children}</pre>\n        </div>\n    )\n}\n\nexport const propTypeDefinitions: Partial<Record<ObjectTypes, ObjectDefinition>> = {\n    [ObjectTypes.Player]: {\n        name: 'Player',\n        height: () => 2,\n        Component: propDebugComponent('white'),\n        Component3d: Player,\n    },\n\n    [ObjectTypes.BigRock]: {\n        name: 'Big rock',\n        height: () => 0.55,\n        Component: propDebugComponent('gray'),\n        Component3d: Rock,\n    },\n    [ObjectTypes.Box]: {\n        name: 'Box',\n        height: () => 1,\n        push: ({ self, vector }) => [move({ targetId: self.id, vector })],\n        Component: propDebugComponent('brown'),\n        Component3d: Box,\n    },\n\n    [ObjectTypes.Fence]: {\n        name: 'Fence',\n        height: () => 1.5,\n        push: ({ force, self }) => {\n            if (force && force >= 50) return [remove(self.id)]\n            return []\n        },\n        Component: propDebugComponent('brown'),\n        Component3d: Fence,\n    },\n\n    [ObjectTypes.Button]: {\n        name: 'Button',\n        height: () => 2,\n        push: ({ state, self }) => {\n            play('button')\n            if (!self.data.targetId) {\n                console.warn('Missing Button data.targetId')\n                return []\n            }\n            const toggle = !self.data.open\n            return [\n                setObjectData({ targetId: self.id, data: { open: toggle } }),\n                setObjectData({ targetId: self.data.targetId, data: { open: toggle } }),\n            ]\n        },\n        Component: propDebugComponent('blue'),\n        Component3d: Fence,\n    },\n\n    [ObjectTypes.WinTrigger]: {\n        name: 'WinTrigger',\n        height: () => 0,\n        enter: ({ who, state, self }) => {\n            if (who.id === PLAYER_ID) {\n                play('Engine_start')\n                return [win()]\n            }\n            return []\n        },\n        Component: propDebugComponent('#ABC123'),\n        Component3d: createTrigger('#ABC123'),\n    },\n\n    [ObjectTypes.Dor]: {\n        name: 'Dor',\n        height: instance => {\n            console.log('instance', instance)\n            return instance.data.open ? 0 : 1.5\n        },\n        push: ({ force, self }) => {\n            if (force && force >= 50) return [remove(self.id)]\n            return []\n        },\n        Component: propDebugComponent('purple'),\n        Component3d: Fence,\n    },\n\n    [ObjectTypes.Cannon]: {\n        name: 'Cannon',\n        height: () => 0,\n        equip: ({ who, self }) => {\n            playEquip(0.8)\n            return [setObjectData({ targetId: who.id, data: { gun: 'cannon' } }), remove(self.id)]\n        },\n        Component: propDebugComponent('red'),\n        Component3d: Cannon,\n    },\n\n    [ObjectTypes.Boom]: {\n        name: 'Boom',\n        height: () => 0,\n        Component: propDebugComponent('yellow'),\n        Component3d: Boom,\n    },\n\n    [ObjectTypes.Crossbow]: {\n        name: 'Crossbow',\n        height: () => 0,\n        equip: ({ who, self }) => {\n            playEquip(0.8)\n            return [setObjectData({ targetId: who.id, data: { gun: 'crossbow' } }), remove(self.id)]\n        },\n        Component: propDebugComponent('red'),\n        Component3d: Crossbow,\n    },\n\n    [ObjectTypes.RocketProjectile]: {\n        name: 'RocketProjectile',\n        height: () => 0,\n        projectileLaunch: ({ who }) => {\n            play('Bazooka')\n            return [\n                move(\n                    { targetId: who.id, vector: reverseVector(who.rotation) },\n                    { delay: 250 }, // delay remove from projectileHit\n                ),\n            ]\n        },\n        projectileHit: ({ self, what, who }) => {\n            if (!what) {\n                return [remove(self.id)]\n            }\n\n            play('Alert_YES') // TODO Boom!\n            return [\n                remove(self.id),\n                tmpSpawn({\n                    instance: {\n                        type: ObjectTypes.Boom,\n                        id: uniqueId(),\n                        xy: self.xy,\n                        elevation: self.elevation,\n                        rotation: self.rotation,\n                        aIndex: 0,\n                        zIndex: 20,\n                        data: {},\n                    },\n                }),\n            ]\n        },\n        Component: propDebugComponent('yellow'),\n        Component3d: Rocket,\n    },\n\n    [ObjectTypes.CrossbowProjectile]: {\n        name: 'Projectile',\n        height: () => 0,\n        projectileLaunch: ({ who }) => {\n            play('Crossbow')\n            return [\n                move(\n                    { targetId: who.id, vector: [0, 0] },\n                    { delay: 250 }, // delay remove from projectileHit\n                ),\n            ]\n        },\n        projectileHit: ({ self, what, who }) => {\n            if (what) {\n                play('Alert_YES') // TODO Hit!\n            }\n            return [remove(self.id)]\n        },\n        Component: propDebugComponent('pink'),\n        Component3d: Arrow,\n    },\n}\n","import { ObjectDefinition, ObjectTypes } from '../types/types'\nimport { tileTypeDefinitions } from './tileTypeDefinitions'\nimport { propTypeDefinitions } from './propTypeDefinitions'\n\nexport const objectDefinitions: Partial<Record<ObjectTypes, ObjectDefinition>> = {\n    ...tileTypeDefinitions,\n    ...propTypeDefinitions,\n}\n\nexport const getDefinition = (type: ObjectTypes): ObjectDefinition => {\n    const def = objectDefinitions[type]\n\n    if (!def) throw new Error(`[getDefinition] Definition for ${type} not found`)\n\n    return def\n}\n","import { Action } from 'redux'\nimport { applyVector, asArray, findById, findByXY } from '../../helpers'\nimport { getDefinition } from '../../objects/definitions'\nimport { ActionEvent, ObjectInstance } from '../../types/types'\nimport { GameState, flyEnd } from '../gameReducer'\nimport { ResolverResults } from './types'\n\nexport const flyResolver = (state: GameState, targetId: string): ResolverResults => {\n    let objects = state.objects\n    const actions: Action[] = []\n    const addActions = (a: Action | Action[] = []) => actions.push(...asArray(a))\n    const abortResults = { objects, actions }\n\n    const target = findById(objects, targetId)\n\n    if (!target) {\n        console.warn(`[move] Target ${targetId} not found`)\n        return abortResults\n    }\n\n    const vector = target.rotation\n    let xy = target.xy\n\n    let limit = 15\n\n    while (limit) {\n        limit--\n\n        xy = applyVector(xy, vector)\n        const newXYObjects = findByXY(objects, xy).sort((a, b) => b.aIndex - a.aIndex)\n\n        for (const obj of newXYObjects) {\n            const objDef = getDefinition(obj.type)\n            const event: ActionEvent = { who: target, vector, state, self: obj, force: 100 }\n\n            if (isTooHight(obj, target)) {\n                objects = objects.map(obj => {\n                    if (obj !== target) return obj\n                    return { ...obj, xy }\n                })\n\n                addActions(flyEnd({ targetId, hitTargetId: obj.id }))\n                addActions(objDef.push?.(event))\n                return { objects, actions }\n            }\n        }\n    }\n\n    addActions(flyEnd({ targetId }))\n\n    objects = objects.map(obj => {\n        if (obj !== target) return obj\n        return { ...obj, xy }\n    })\n\n    return { objects, actions }\n}\n\nconst isTooHight = (ontoObj: ObjectInstance, flyer: ObjectInstance) => {\n    const objDef = getDefinition(ontoObj.type)\n    return ontoObj.elevation + objDef.height(ontoObj) > flyer.elevation\n}\n","import { Action } from 'redux'\nimport { MAX_ELEVATION_DIFF } from '../../config'\nimport { applyVector, asArray, findById, findByXY } from '../../helpers'\nimport { getDefinition } from '../../objects/definitions'\nimport { ActionEvent, ObjectInstance, Vector2 } from '../../types/types'\nimport { GameState } from '../gameReducer'\nimport { ResolverResults } from './types'\n\nexport const moveResolver = (\n    state: GameState,\n    targetId: string,\n    vector: Vector2,\n): ResolverResults => {\n    let objects = state.objects\n    const actions: Action[] = []\n    const addActions = (a: Action | Action[] = []) => actions.push(...asArray(a))\n    const abortResults = { objects, actions }\n\n    const target = findById(objects, targetId)\n\n    if (!target) {\n        console.warn(`[move] Target ${targetId} not found`)\n        return abortResults\n    }\n\n    const newXY = applyVector(target.xy, vector)\n    const newXYObjects = findByXY(objects, newXY).sort((a, b) => b.aIndex - a.aIndex)\n\n    // Nothing there, don't go\n    if (!newXYObjects.length) {\n        return abortResults\n    }\n\n    // Can enter to this region?\n    for (const obj of newXYObjects) {\n        const objDef = getDefinition(obj.type)\n        const event: ActionEvent = { who: target, vector, state, self: obj }\n\n        if (isTooHight(obj, target)) {\n            addActions(objDef.push?.(event))\n            return { objects, actions }\n        }\n    }\n\n    // Post enter events\n    for (const obj of newXYObjects) {\n        const objDef = getDefinition(obj.type)\n        const event: ActionEvent = { who: target, vector, state, self: obj }\n        addActions(objDef.enter?.(event))\n    }\n\n    objects = objects.map(obj => {\n        if (obj !== target) return obj\n        return { ...obj, xy: newXY, elevation: maxElevation(newXYObjects) }\n    })\n\n    return { objects, actions }\n}\n\nconst maxElevation = (objects: ObjectInstance[]): number =>\n    Math.max(\n        ...objects.map(obj => {\n            const objDef = getDefinition(obj.type)\n            return objDef.height(obj) + obj.elevation\n        }),\n    )\n\nconst isTooHight = (ontoObj: ObjectInstance, who: ObjectInstance) => {\n    const objDef = getDefinition(ontoObj.type)\n    return ontoObj.elevation + objDef.height(ontoObj) - who.elevation > MAX_ELEVATION_DIFF\n}\n","export const MAX_ELEVATION_DIFF = 0.5\nexport const PROJECTILE_ELEVATION = 0.8\nexport const DEFAULT_ACTION_DELAY = 65\n","import { uniqueId } from 'lodash'\nimport { Action } from 'redux'\nimport actionCreatorFactory from 'typescript-fsa'\nimport { reducerWithInitialState } from 'typescript-fsa-reducers'\nimport { PROJECTILE_ELEVATION } from '../config'\nimport { arrMerge, findById, findByXY } from '../helpers'\nimport { createMap } from '../mocks/mapMock'\nimport { getDefinition } from '../objects/definitions'\nimport {\n    ActionEvent,\n    ObjectInstance,\n    ObjectInstanceData,\n    ObjectTypes,\n    Vector2,\n    XY,\n} from '../types/types'\nimport { flyResolver } from './resolvers/flyResolver'\nimport { moveResolver } from './resolvers/moveResolver'\nimport { rotateResolver } from './resolvers/rotateResolver'\nimport { ResolverResults } from './resolvers/types'\n\nexport interface GameState {\n    queueStared: boolean\n    queue: Action[]\n    objects: ObjectInstance[]\n    cleanObjectsState: ObjectInstance[]\n}\n\nexport interface GameStateAware {\n    game: GameState\n}\n\nconst mockObjects = createMap()\n\nexport const initialState: GameState = {\n    queueStared: false,\n    queue: [],\n    objects: mockObjects,\n    cleanObjectsState: mockObjects,\n}\n\nconst action = actionCreatorFactory('GAME')\n\nexport const loadMap = action<ObjectInstance[]>('LOAD_MAP')\nexport const reset = action('RESET')\nexport const win = action('WIN')\n\nexport const enqueue = action<Action | Action[]>('ENQUEUE')\nexport const tryNextAction = action('TRY_NEXT_ACTION')\nexport const nextAction = action<Action>('NEXT_ACTION')\nexport const queueEnd = action('QUEUE_END')\n\nexport const move = action<{ targetId: string; vector: Vector2 }>('MOVE')\nexport const rotate = action<{ targetId: string; rotation: Vector2 }>('ROTATE')\nexport const equip = action<{ targetId: string }>('EQUIP')\n\nexport const projectile = action<{ instance: ObjectInstance; byId: string }>('PROJECTILE')\nexport const fly = action<{ targetId: string }>('FLY')\nexport const flyEnd = action<{ targetId: string; hitTargetId?: string }>('FLY_END')\n\nexport const updateObject = action<{\n    targetId: string\n    objectValues: Partial<ObjectInstance>\n}>('UPDATE_OBJECT')\nexport const setObjectData = action<{\n    targetId: string\n    data: Partial<ObjectInstanceData>\n}>('SET_OBJECT_DATA')\nexport const remove = action<string>('REMOVE')\nexport const tmpSpawn = action<{ instance: ObjectInstance }>('TMP_SPAWN')\n\nexport const gameReducer = reducerWithInitialState(initialState)\n    /*\n     * Loading\n     */\n    .case(\n        loadMap,\n        (state, objects): GameState => ({\n            ...initialState,\n            objects,\n        }),\n    )\n    .case(\n        reset,\n        (state): GameState => ({\n            ...initialState,\n            objects: state.cleanObjectsState,\n            cleanObjectsState: state.cleanObjectsState,\n        }),\n    )\n    .case(\n        win,\n        (state): GameState => ({\n            ...initialState,\n        }),\n    )\n\n    /*\n     * Queue\n     */\n    .case(\n        enqueue,\n        (state, action): GameState => ({\n            ...state,\n            queue: arrMerge(state.queue, action),\n        }),\n    )\n    .case(\n        nextAction,\n        (state, action): GameState => ({\n            ...state,\n            queueStared: true,\n            queue: state.queue.filter(a => a !== action),\n        }),\n    )\n    .case(queueEnd, (state): GameState => ({ ...state, queueStared: false }))\n\n    /*\n     * User actions\n     */\n    .case(\n        move,\n        (state, { targetId, vector }): GameState => {\n            const { actions, objects } = moveResolver(state, targetId, vector)\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n    .case(\n        rotate,\n        (state, { targetId, rotation }): GameState => {\n            const { actions, objects } = rotateResolver(state, targetId, rotation)\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n    .case(\n        equip,\n        (state, { targetId }): GameState => {\n            const { actions, objects } = equipResolver(state, targetId)\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n\n    /*\n     * Projectiles\n     */\n    .case(\n        projectile,\n        (state, { instance, byId }): GameState => {\n            const objDef = getDefinition(instance.type)\n            const objects = [...state.objects, instance]\n\n            const who = findById(state.objects, byId)!\n            const event: ActionEvent = { who, vector: instance.rotation, state, self: instance }\n\n            const launchActions = objDef.projectileLaunch?.(event) || []\n            const actions = [fly({ targetId: instance.id }), ...launchActions]\n\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n    .case(\n        fly,\n        (state, { targetId }): GameState => {\n            const { actions, objects } = flyResolver(state, targetId)\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n    .case(\n        flyEnd,\n        (state, { targetId, hitTargetId }): GameState => {\n            const obj = findById(state.objects, targetId)\n            const what = hitTargetId ? findById(state.objects, hitTargetId) : undefined\n\n            const actions: Action[] = []\n            if (obj) {\n                const objDef = getDefinition(obj.type)\n                const event: ActionEvent = {\n                    who: null as any, // TODO,\n                    what,\n                    vector: obj.rotation,\n                    state,\n                    self: obj,\n                }\n                const hitActions = objDef.projectileHit?.(event) || []\n                actions.push(...hitActions)\n            }\n            return { ...state, queue: arrMerge(state.queue, actions) }\n        },\n    )\n\n    /*\n     * Edit and internal actions\n     */\n    .case(\n        setObjectData,\n        (state, { targetId, data }): GameState => {\n            const { actions, objects } = setObjectDataResolver(state, targetId, data)\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n    .case(\n        updateObject,\n        (state, { targetId, objectValues }): GameState => {\n            return {\n                ...state,\n                objects: state.objects.map(obj =>\n                    obj.id === targetId ? { ...obj, ...objectValues } : obj,\n                ),\n            }\n        },\n    )\n    .case(\n        remove,\n        (state, targetId): GameState => ({\n            ...state,\n            objects: state.objects.filter(obj => obj.id !== targetId),\n        }),\n    )\n    .case(\n        tmpSpawn,\n        (state, { instance }): GameState => ({\n            ...state,\n            objects: [...state.objects, instance],\n        }),\n    )\n\nexport const equipResolver = (state: GameState, targetId: string): ResolverResults => {\n    const actions: Action[] = []\n    const target = findById(state.objects, targetId)\n    if (!target) return { objects: state.objects, actions: [] }\n\n    const myObjects = findByXY(state.objects, target.xy).sort((a, b) => b.aIndex - a.aIndex)\n\n    for (const obj of myObjects) {\n        const objDef = getDefinition(obj.type)\n        const event: ActionEvent = { who: target, vector: [0, 0], state, self: obj }\n        actions.push(...(objDef.equip?.(event) || []))\n    }\n\n    return {\n        actions,\n        objects: state.objects,\n    }\n}\n\nexport const setObjectDataResolver = (\n    { objects }: GameState,\n    targetId: string,\n    data: Partial<ObjectInstanceData>,\n): ResolverResults => {\n    const target = findById(objects, targetId)\n\n    return {\n        objects: objects.map(obj => {\n            if (obj !== target) return obj\n            return { ...obj, data: { ...obj.data, ...data } }\n        }),\n        actions: [],\n    }\n}\n","import { findById } from '../../helpers'\nimport { Vector2 } from '../../types/types'\nimport { ResolverResults } from './types'\nimport { GameState } from '../gameReducer'\n\nexport const rotateResolver = (\n    { objects }: GameState,\n    targetId: string,\n    rotation: Vector2,\n): ResolverResults => {\n    const target = findById(objects, targetId)\n\n    return {\n        objects: objects.map(obj => {\n            if (obj !== target) return obj\n            return { ...obj, rotation }\n        }),\n        actions: [],\n    }\n}\n","import { first } from 'lodash'\nimport { Action } from 'redux'\nimport { combineEpics, StateObservable } from 'redux-observable'\nimport { concat, Observable, of } from 'rxjs'\nimport { delay, filter, flatMap, map, mapTo } from 'rxjs/operators'\nimport { DEFAULT_ACTION_DELAY } from '../config'\nimport {\n    enqueue,\n    GameStateAware,\n    nextAction,\n    queueEnd,\n    tryNextAction,\n    tmpSpawn,\n    remove,\n} from './gameReducer'\n\nconst enqueueEpic = (\n    actions$: Observable<Action>,\n    state$: StateObservable<GameStateAware>,\n): Observable<Action> =>\n    actions$.pipe(\n        filter(enqueue.match),\n        filter(() => !state$.value.game.queueStared),\n        mapTo(tryNextAction()),\n    )\n\nconst tryNextEpic = (\n    actions$: Observable<Action>,\n    state$: StateObservable<GameStateAware>,\n): Observable<Action> =>\n    actions$.pipe(\n        filter(tryNextAction.match),\n        map(() => first(state$.value.game.queue)),\n        map(action => (action ? nextAction(action) : queueEnd())),\n    )\n\nconst nextActionEpic = (\n    actions$: Observable<Action>,\n    state$: StateObservable<GameStateAware>,\n): Observable<Action> =>\n    actions$.pipe(\n        filter(nextAction.match),\n        flatMap(action => {\n            const newActionDelay = (action.payload as any).meta?.delay || DEFAULT_ACTION_DELAY\n            return concat(of(action.payload), of(tryNextAction()).pipe(delay(newActionDelay)))\n        }),\n    )\n\nconst tmpSpawnEpic = (\n    actions$: Observable<Action>,\n    state$: StateObservable<GameStateAware>,\n): Observable<Action> =>\n    actions$.pipe(\n        filter(tmpSpawn.match),\n        delay(1000),\n        map(action => remove(action.payload.instance.id)),\n    )\n\nexport const gameEpics = combineEpics(enqueueEpic, tryNextEpic, nextActionEpic, tmpSpawnEpic)\n","import { Action } from 'redux'\nimport { combineEpics } from 'redux-observable'\nimport { Observable } from 'rxjs'\nimport { filter, ignoreElements, tap } from 'rxjs/operators'\nimport { play, playEngine } from '../audio/play'\nimport { equip, move } from './gameReducer'\nimport { PLAYER_ID } from '../types/consts'\n\nconst moveSoundEpic = (actions$: Observable<Action>): Observable<Action> =>\n    actions$.pipe(\n        filter(move.match),\n        filter(action => action.payload.targetId === PLAYER_ID),\n        tap(() => playEngine(0.1)),\n        ignoreElements(),\n    )\n\nconst equipSoundEpic = (actions$: Observable<Action>): Observable<Action> =>\n    actions$.pipe(\n        filter(equip.match),\n        tap(target => play('Hero_2', 0.7)),\n        ignoreElements(),\n    )\n\nexport const soundEpics = combineEpics(moveSoundEpic, equipSoundEpic)\n","import { applyMiddleware, combineReducers, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { combineEpics, createEpicMiddleware } from 'redux-observable'\nimport { gameEpics } from './gameEpics'\nimport { gameReducer } from './gameReducer'\nimport { soundEpics } from './soundEpics'\n\nconst epicMiddleware = createEpicMiddleware()\n\nconst composeEnhancers = composeWithDevTools({\n    name: 'App',\n})\n\nconst rootReducer = combineReducers({\n    game: gameReducer,\n})\n\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(epicMiddleware)))\n\nepicMiddleware.run(combineEpics(soundEpics, gameEpics))\n","import { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { GameStateAware, updateObject } from '../state/gameReducer'\nimport { ObjectInstance } from '../types/types'\n\nexport const useEditor = () => {\n    const state = useSelector((state: GameStateAware) => state.game)\n    const [editMode, setEditMode] = useState(false)\n    const dispatch = useDispatch()\n\n    const toggleEditMode = () => {\n        setEditMode(!editMode)\n    }\n\n    const edit = (targetId: string, objectValues: Partial<ObjectInstance>) => {\n        dispatch(updateObject({ targetId, objectValues }))\n    }\n\n    const copyMap = () => {\n        const serializedMap = JSON.stringify(state.objects)\n\n        navigator.clipboard.writeText(serializedMap).then(() => {\n            console.log('Copied to clipboard')\n        }, console.error)\n    }\n\n    return { edit, toggleEditMode, editMode, copyMap }\n}\n","import { useEffect } from 'react'\n\nexport const useKeyboardEvent = (key: string, callback: Function) => {\n    useEffect(() => {\n        const handler = (event: KeyboardEvent) => {\n            if (event.key === key) callback()\n        }\n\n        window.addEventListener('keydown', handler)\n\n        return () => window.removeEventListener('keydown', handler)\n    })\n}\n","import { isEmpty } from 'lodash'\nimport React, { useState } from 'react'\nimport { findById } from '../helpers'\nimport { useEditor } from '../hooks/useEditor'\nimport { getDefinition, objectDefinitions } from '../objects/definitions'\nimport { ObjectInstance, ObjectTypes } from '../types/types'\n\ninterface DebugViewProps {\n    objects: ObjectInstance[]\n}\n\nconst size = 60\n\nexport const DebugView = ({ objects }: DebugViewProps) => {\n    const [editId, setEditId] = useState<string>()\n    const { edit, copyMap } = useEditor()\n    const obj = editId && findById(objects, editId)\n    const update = (value: Partial<ObjectInstance>) => {\n        if (obj) edit(obj.id, value)\n    }\n\n    return (\n        <div\n            style={{\n                position: 'absolute',\n                zIndex: 100,\n                top: 0,\n                right: 0,\n                width: size * 8,\n                opacity: 0.8,\n            }}\n        >\n            <button onClick={copyMap}>Copy map</button>\n            {obj && (\n                <>\n                    <input\n                        type=\"range\"\n                        min={-1}\n                        max={5}\n                        step={0.01}\n                        value={obj.elevation}\n                        onChange={event => update({ elevation: parseInt(event.target.value, 10) })}\n                    />\n                    <select\n                        value={obj.type}\n                        onChange={event => update({ type: event.target.value as ObjectTypes })}\n                    >\n                        {Object.keys(objectDefinitions).map(item => (\n                            <option>{item}</option>\n                        ))}\n                    </select>\n                </>\n            )}\n            <div style={{ position: 'relative' }}>\n                {objects.map(obj => {\n                    const { type, id, xy, rotation, elevation, zIndex, data } = obj\n                    const { Component } = getDefinition(type)\n                    return (\n                        <div\n                            key={id}\n                            style={{\n                                position: 'absolute',\n                                left: xy[0] * size,\n                                top: xy[1] * size,\n                                width: size,\n                                height: size,\n                                zIndex,\n                            }}\n                            onClick={() => setEditId(id)}\n                        >\n                            <Component instance={obj}>\n                                {id} - {type} <br />\n                                {isEmpty(data) ? '' : JSON.stringify(data, null, 1)}\n                            </Component>\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n\ninterface LabelProps {\n    text: string\n    bottom?: boolean\n}\n\nexport const Label = ({ text, bottom }: LabelProps) => (\n    <div\n        style={{\n            position: 'absolute',\n            left: 0,\n            top: bottom ? '80%' : 0,\n            fontSize: 10,\n            color: 'black',\n        }}\n    >\n        {text}\n    </div>\n)\n","import React from 'react'\nimport { Color } from 'three'\n\nconst d = 5\n\nexport const Environment = () => {\n    return (\n        <group>\n            <ambientLight intensity={2} />\n            <pointLight\n                position={[6, 7, 8]}\n                intensity={2.2}\n                color={new Color('#3a8dc2')}\n                shadow-mapSize-Height=\"1024\"\n                shadow-mapSize-width=\"1024\"\n                shadow-camera-far={30}\n                shadow-bias={-0.01}\n                castShadow\n                shadow-camera-left={-d}\n                shadow-camera-right={d}\n                shadow-camera-top={d}\n                shadow-camera-bottom={-d}\n            />\n            <pointLight position={[1, 3, 5]} intensity={2.2} color={new Color('#c86b6f')} />\n        </group>\n    )\n}\n","import React, { Suspense } from 'react'\nimport { Canvas } from 'react-three-fiber'\nimport { PCFSoftShadowMap } from 'three'\nimport { useEditor } from '../hooks/useEditor'\nimport { useGame } from '../hooks/useGame'\nimport { useKeyboardEvent } from '../hooks/useKeyboardEvent'\nimport { getDefinition } from '../objects/definitions'\nimport { DOWN, LEFT, RIGHT, UP } from '../types/consts'\nimport { DebugView } from './DebugView'\nimport { Environment } from './Environment'\nimport map1 from '../data/map1.json'\nimport map2 from '../data/map2.json'\nimport { ObjectInstance } from '../types/types'\n\nexport const GameInstance = () => {\n    const { objects, move, equip, fire, loadMap, reset } = useGame()\n\n    const { editMode, toggleEditMode } = useEditor()\n    useKeyboardEvent('e', toggleEditMode)\n\n    const left = () => move(LEFT)\n    const up = () => move(UP)\n    const down = () => move(DOWN)\n    const right = () => move(RIGHT)\n\n    const loadMap1 = () => loadMap(map1 as ObjectInstance[])\n    const loadMap2 = () => loadMap(map2 as ObjectInstance[])\n\n    useKeyboardEvent('1', loadMap1)\n    useKeyboardEvent('2', loadMap2)\n    useKeyboardEvent('r', reset)\n\n    useKeyboardEvent('ArrowLeft', left)\n    useKeyboardEvent('ArrowUp', up)\n    useKeyboardEvent('ArrowDown', down)\n    useKeyboardEvent('ArrowRight', right)\n    useKeyboardEvent('Enter', equip)\n    useKeyboardEvent(' ', fire)\n\n    return (\n        <>\n            {editMode && <DebugView objects={objects} />}\n            <div\n                style={{\n                    position: 'absolute',\n                    zIndex: 5,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    textAlign: 'center',\n                }}\n            >\n                <button onClick={left}>\n                    <strong>←</strong>\n                </button>\n                <button onClick={up}>\n                    <strong>↑</strong>\n                </button>\n                <button onClick={down}>\n                    <strong>↓</strong>\n                </button>\n                <button onClick={right}>\n                    <strong>→</strong>\n                </button>\n                <button onClick={equip}>\n                    Equip <small>{`[enter]`}</small>\n                </button>\n                <button onClick={fire}>\n                    Fire <small>{'[space]'}</small>\n                </button>\n                <button onClick={reset}>\n                    Restart <small>{`[R]`}</small>\n                </button>\n                <button onClick={loadMap1}>\n                    Map 1 <small>{`[1]`}</small>\n                </button>\n                <button onClick={loadMap2}>\n                    Map 2 <small>{`[2]`}</small>\n                </button>\n            </div>\n            <Canvas\n                orthographic\n                camera={{ zoom: 100, fov: 1075, position: [-2 + 3, 7, 5 + 2] }}\n                onCreated={scene => {\n                    scene.camera.lookAt(3, 1, 2)\n                    // scene.camera.lookAt(findById(objects, PLAYER_ID))\n                    scene.gl.shadowMap.type = PCFSoftShadowMap\n                    scene.gl.shadowMap.enabled = true\n                }}\n            >\n                <Environment />\n                <Suspense\n                    fallback={\n                        <mesh>\n                            <boxBufferGeometry attach=\"geometry\" args={[0.5, 0.5, 0.5]} />\n                            <meshStandardMaterial attach=\"material\" color=\"red\" />\n                        </mesh>\n                    }\n                >\n                    {objects.map(obj => {\n                        const { Component3d } = getDefinition(obj.type)\n                        return <Component3d key={obj.id} instance={obj} />\n                    })}\n                </Suspense>\n            </Canvas>\n        </>\n    )\n}\n","import { isEqual, uniqueId } from 'lodash'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Action } from 'redux'\nimport { play } from '../audio/play'\nimport { PROJECTILE_ELEVATION } from '../config'\nimport { findById } from '../helpers'\nimport {\n    enqueue,\n    equip,\n    GameStateAware,\n    loadMap,\n    move,\n    projectile,\n    rotate,\n    reset,\n} from '../state/gameReducer'\nimport { PLAYER_ID } from '../types/consts'\nimport { ObjectInstance, ObjectTypes, Vector2 } from '../types/types'\n\nexport const useGame = () => {\n    const state = useSelector((state: GameStateAware) => state.game)\n    const dispatch = useDispatch()\n    const player = findById(state.objects, PLAYER_ID)!\n\n    if (!player) console.warn(`Player don't exists`)\n\n    const triggerMove = (vector: Vector2) => {\n        if (state.queueStared) return\n\n        const actions: Action[] = []\n\n        if (!player) {\n            return console.warn(`Player don't exists`)\n        }\n\n        if (!isEqual(player.rotation, vector)) {\n            actions.push(rotate({ targetId: player.id, rotation: vector }))\n        } else {\n            actions.push(move({ targetId: player.id, vector }))\n        }\n\n        dispatch(enqueue(actions))\n    }\n\n    const triggerEquip = () => {\n        if (state.queueStared) return\n        dispatch(enqueue(equip({ targetId: player.id })))\n    }\n\n    const triggerFire = () => {\n        if (state.queueStared) return\n        const { id, xy, rotation, elevation, data } = player\n\n        if (!data?.gun) {\n            play('Alert_NO')\n            return\n        }\n\n        let instance: ObjectInstance\n\n        if (data.gun === 'cannon') {\n            instance = {\n                type: ObjectTypes.RocketProjectile,\n                id: uniqueId(),\n                xy,\n                rotation,\n                elevation: elevation + PROJECTILE_ELEVATION,\n                aIndex: 100,\n                zIndex: 10,\n                data,\n            }\n        } else {\n            instance = {\n                type: ObjectTypes.CrossbowProjectile,\n                id: uniqueId(),\n                xy,\n                rotation,\n                elevation: elevation + PROJECTILE_ELEVATION,\n                aIndex: 100,\n                zIndex: 10,\n                data,\n            }\n        }\n\n        dispatch(enqueue(projectile({ byId: id, instance })))\n    }\n\n    const triggerLoadMap = (object: ObjectInstance[]) => {\n        dispatch(loadMap(object))\n    }\n\n    const triggerReset = () => {\n        dispatch(reset())\n    }\n\n    return {\n        ...state,\n        player,\n\n        loadMap: triggerLoadMap,\n        reset: triggerReset,\n\n        move: triggerMove,\n        equip: triggerEquip,\n        fire: triggerFire,\n    }\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { store } from '../state/store'\nimport { GameInstance } from './GameInstance'\n\nexport const App = () => {\n    return (\n        <Provider store={store}>\n            <GameInstance />\n        </Provider>\n    )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './app/App'\nimport './styles/global.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}