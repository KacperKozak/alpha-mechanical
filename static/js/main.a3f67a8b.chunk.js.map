{"version":3,"sources":["types/types.ts","helpers.ts","objects/models/Items.tsx","types/consts.ts","objects/tileTypeDefinitions.tsx","objects/propTypeDefinitions.tsx","mocks/mapMock.ts","objects/definitions.ts","state/resolvers/moveResolver.ts","state/gameReducer.ts","state/resolvers/rotateResolver.ts","state/gameEpics.ts","state/store.ts","hooks/useGame.tsx","hooks/useKeyboardEvent.tsx","app/DebugView.tsx","app/Environment.tsx","app/GameInstance.tsx","app/App.tsx","index.tsx"],"names":["ObjectTypes","findById","props","id","find","prop","findByXY","objects","xy","filter","tile","x1","y1","x2","y2","samePosition","asArray","item","Array","isArray","arrMerge","a","b","Item","url","Asset","instance","elevation","rotation","castShadow","receiveShadow","gltf","useLoader","GLTFLoader","process","scene","children","scale","set","clone","object","dispose","position","vectorToThree","AnimatieAsset","anim","useSpring","pos","rot","gltfanimation","mixer","AnimationMixer","animations","forEach","clip","clipAction","play","useFrame","update","primitive","vector","Math","PI","UP","RIGHT","DOWN","LEFT","tileDebugComponent","color","style","width","height","backgroundColor","fontSize","tileTypeDefinitions","Grass","name","getId","uniqueId","canEnter","Component","Component3d","Ice","enter","who","move","targetId","RockFloor","Button","push","state","randomProp","sample","p","remove","propDebugComponent","margin","borderRadius","type","Player","opacity","padding","propTypeDefinitions","BigRock","self","setObjectData","data","info","Cannon","equip","gun","tileDict","0","1","2","3","mapBitmap","propDict","propsBitmap","objectDefinitions","getDefinition","def","Error","moveResolver","actions","addActions","abortResults","target","console","warn","newXY","x","y","applyVector","newXYObjects","sort","aIndex","length","obj","objDef","event","map","initialState","queueStared","queue","tiles","flatMap","items","typeNumber","random","zIndex","createMap","action","actionCreatorFactory","enqueue","tryNextAction","nextAction","queueEnd","rotate","gameReducer","reducerWithInitialState","case","rotateResolver","equipResolver","setObjectDataResolver","myObjects","gameEpics","combineEpics","actions$","state$","pipe","match","value","game","mapTo","first","concat","of","payload","delay","meta","epicMiddleware","createEpicMiddleware","composeEnhancers","composeWithDevTools","rootReducer","combineReducers","store","createStore","applyMiddleware","run","useGame","useSelector","dispatch","useDispatch","isEqual","useKeyboardEvent","key","callback","useEffect","handler","window","addEventListener","removeEventListener","DebugView","left","up","down","right","top","size","onClick","isEmpty","JSON","stringify","Environment","intensity","Color","shadow-mapSize-Height","shadow-mapSize-width","shadow-camera-far","shadow-bias","shadow-camera-left","shadow-camera-right","shadow-camera-top","shadow-camera-bottom","GameInstance","useThree","gl","orthographic","camera","zoom","fov","onCreated","lookAt","shadowMap","PCFSoftShadowMap","enabled","fallback","attach","args","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a3f67a8b.chunk.js","sourcesContent":["import { GameState } from '../state/gameReducer'\nimport { Action } from 'redux'\nimport { FC, ReactNode } from 'react'\n\nexport type XY = [number, number]\nexport type Vector2 = [number, number]\n\nexport enum ObjectTypes {\n    Grass = 'Grass',\n    Ice = 'Ice',\n    RockFloor = 'RockFloor',\n    Button = 'Button',\n    Player = 'Player',\n    BigRock = 'BigRock',\n    Cannon = 'Cannon',\n}\n\nexport interface ObjectInstance {\n    type: ObjectTypes\n    id: string\n    xy: XY\n    rotation: Vector2\n    elevation: number\n    zIndex: number\n    aIndex: number\n    data: Partial<ObjectInstanceData>\n}\n\nexport interface ObjectInstanceData {\n    gun: 'cannon'\n    info: string\n}\n\nexport interface ActionEvent {\n    who: ObjectInstance // who triggered this @TODO better name!\n    self: ObjectInstance\n    vector: Vector2\n    state: GameState\n}\n\nexport interface ObjectDefinition {\n    name: string\n    getId(): string\n    canEnter(event: ActionEvent): boolean\n    push?(event: ActionEvent): Action[] // triggered when !canEnter\n    enter?(event: ActionEvent): Action[]\n    leave?(event: ActionEvent): Action[]\n    equip?(event: ActionEvent): Action[]\n    Component(props: RenderComponentProps & { children: ReactNode }): any\n    Component3d(props: RenderComponentProps): any\n}\n\nexport interface RenderComponentProps {\n    instance: ObjectInstance\n}\n","import { XY, Vector2 } from './types/types'\n\nexport const reverseVector = (vector: Vector2) => vector.map(v => v * -1) as Vector2\n\nexport const applyVector = ([x, y]: XY, [vx, vy]: Vector2): XY => [x + vx, y + vy]\n\nexport const samePosition = ([x1, y1]: XY, [x2, y2]: XY) => x1 === x2 && y1 === y2\n\nexport const findById = <T extends { id: string }>(props: T[], id: string) => {\n    return props.find(prop => prop.id === id)\n}\n\nexport const findByXY = <T extends { xy: XY }>(objects: T[], xy: XY) => {\n    return objects.filter(tile => samePosition(tile.xy, xy))\n}\n\nexport const asArray = <T>(item: T | T[]): T[] => (Array.isArray(item) ? item : [item])\nexport const arrMerge = <T>(a: T[], b: T | T[] = []): T[] => [...a, ...asArray(b)]\n","import React from 'react'\nimport { useLoader, useFrame } from 'react-three-fiber'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport { RenderComponentProps, Vector2 } from '../../types/types'\nimport { AnimationMixer } from 'three'\nimport { setInterval } from 'timers'\nimport { useSpring, animated } from 'react-spring/three'\n\nexport const Player = (props: RenderComponentProps) => {\n    return <AnimatieAsset {...props} url=\"robot_model.gltf\" />\n}\n\nexport const Item = (props: RenderComponentProps) => {\n    return <Asset {...props} url=\"rock1.gltf\" />\n}\n\nexport const Ground = (props: RenderComponentProps) => {\n    return (\n        <Asset\n            {...props}\n            url=\"ground_002_export_test_1_cube.gltf\"\n            castShadow={false}\n            receiveShadow={true}\n        />\n    )\n}\n\nexport const Grass = (props: RenderComponentProps) => {\n    return (\n        <Asset\n            {...props}\n            url=\"grass_002_export_test_1_cube.gltf\" // INNY model\n            castShadow={false}\n            receiveShadow={true}\n        />\n    )\n}\n\nexport const Ice = (props: RenderComponentProps) => {\n    return (\n        <Asset\n            {...props}\n            url=\"ice_002_export_test_1_cube.gltf\" // INNY model\n            castShadow={false}\n            receiveShadow={true}\n        />\n    )\n}\nexport const Button = (props: RenderComponentProps) => {\n    return (\n        <Asset\n            {...props}\n            url=\"ground_002_export_test_1_cube.gltf\" // INNY model\n            castShadow={false}\n            receiveShadow={true}\n        />\n    )\n}\n\ninterface AssetProps extends RenderComponentProps {\n    url: string\n    color?: string\n    castShadow?: boolean\n    receiveShadow?: boolean\n}\n\nconst Asset = ({\n    url,\n    instance: { xy, elevation, rotation },\n    castShadow = true,\n    receiveShadow = true,\n}: AssetProps) => {\n    const gltf = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/${url}`)\n    if (castShadow) gltf.scene.children[0].castShadow = true\n    if (receiveShadow) gltf.scene.children[0].receiveShadow = true\n    gltf.scene.scale.set(0.5, 0.5, 0.5)\n    gltf.scene = gltf.scene.clone()\n    return (\n        <primitive\n            object={gltf.scene}\n            dispose={null}\n            position={[xy[0], elevation, xy[1]]}\n            rotation={[0, vectorToThree(rotation), 0]}\n        />\n    )\n}\n\nconst AnimatieAsset = ({\n    url,\n    instance: { xy, elevation, rotation },\n    castShadow = true,\n    receiveShadow = true,\n}: AssetProps) => {\n    const anim = useSpring({\n        pos: [xy[0], elevation, xy[1]],\n        rot: [0, vectorToThree(rotation), 0],\n    })\n\n    const gltf = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/${url}`)\n    // const gltfanimation = useLoader(GLTFLoader, `/assets/animations/jump.gltf`)\n    // const gltfanimation = useLoader(GLTFLoader, `/assets/animations/move.gltf`)\n    const gltfanimation = useLoader(\n        GLTFLoader,\n        `${process.env.PUBLIC_URL}/assets/animations/boring.gltf`,\n    )\n    if (castShadow) gltf.scene.children[0].castShadow = true\n    if (receiveShadow) gltf.scene.children[0].receiveShadow = true\n    gltf.scene.scale.set(0.5, 0.5, 0.5)\n    gltf.scene = gltf.scene.clone()\n    const mixer = new AnimationMixer(gltfanimation.scene)\n    gltfanimation.animations.forEach(clip => {\n        // console.log(clip, mixer)\n        mixer.clipAction(clip, gltf.scene.children[0]).play()\n        // mixer.setTime(0.5)\n    })\n\n    useFrame(() => {\n        // console.log(mixer)\n        mixer.update(0.02)\n        // mixer.time = 5\n    })\n    // useFrame(() => (mixer.existingAction))\n\n    return (\n        <animated.primitive\n            object={gltf.scene}\n            dispose={null}\n            position={anim.pos}\n            rotation={anim.rot}\n        />\n    )\n}\n\nconst vectorToThree = (vector: Vector2) => {\n    if (vector[0] === 1 && vector[1] === 0) return Math.PI / 2\n    if (vector[0] === 0 && vector[1] === -1) return (Math.PI / 2) * 2\n    if (vector[0] === -1 && vector[1] === 0) return (Math.PI / 2) * 3\n    if (vector[0] === 0 && vector[1] === 1) return (Math.PI / 2) * 4\n    return 0\n}\n\n// export const box = (props: RenderComponentProps) => {\n//     return (\n//         <mesh>\n//             <boxBufferGeometry attach=\"geometry\" args={[0.5, 0.5, 0.5]} />\n//             <meshStandardMaterial attach=\"material\" color={props.color} />\n//         </mesh>\n//     )\n// }\n","import { Vector2 } from './types'\n\nexport const PLAYER_ID = 'player'\n\nexport const UP: Vector2 = [0, -1]\nexport const RIGHT: Vector2 = [1, 0]\nexport const DOWN: Vector2 = [0, 1]\nexport const LEFT: Vector2 = [-1, 0]\n","import { uniqueId, sample } from 'lodash'\nimport React, { FC } from 'react'\nimport { ObjectDefinition, ObjectTypes } from '../types/types'\nimport { Button, Grass, Ground, Ice } from './models/Items'\nimport { remove, move } from '../state/gameReducer'\nimport { PLAYER_ID } from '../types/consts'\n\nconst tileDebugComponent = (color: string) => (props: any) => (\n    <div\n        style={{ width: '100%', height: '100%', backgroundColor: color, fontSize: 9 }}\n        {...props}\n    />\n)\n\nexport const tileTypeDefinitions: Partial<Record<ObjectTypes, ObjectDefinition>> = {\n    [ObjectTypes.Grass]: {\n        name: 'Grass',\n        getId: () => uniqueId('grass'),\n        canEnter: () => true,\n        Component: tileDebugComponent('green'),\n        Component3d: Grass,\n    },\n\n    [ObjectTypes.Ice]: {\n        name: 'Ice',\n        getId: () => uniqueId('ice'),\n        canEnter: () => true,\n        enter: ({ who, vector }) => [move({ targetId: who.id, vector })],\n        Component: tileDebugComponent('lightblue'),\n        Component3d: Ice,\n    },\n\n    [ObjectTypes.RockFloor]: {\n        name: 'Rock floor',\n        getId: () => uniqueId('rock-floor'),\n        canEnter: () => false,\n        Component: tileDebugComponent('gray'),\n        Component3d: Ground,\n    },\n\n    [ObjectTypes.Button]: {\n        name: 'Button',\n        getId: () => uniqueId('button'),\n        canEnter: () => false,\n        push: ({ state }) => {\n            const randomProp = sample(state.objects.filter(p => p.id !== PLAYER_ID))\n            if (!randomProp) return []\n            return [remove(randomProp.id)]\n        },\n        Component: tileDebugComponent('blue'),\n        Component3d: Button,\n    },\n}\n","import { uniqueId } from 'lodash'\nimport React from 'react'\nimport { remove, setObjectData } from '../state/gameReducer'\nimport { PLAYER_ID } from '../types/consts'\nimport { ObjectDefinition, ObjectTypes } from '../types/types'\nimport { Item, Player } from './models/Items'\n\nconst propDebugComponent = (color: string) => ({ instance, children }: any) => {\n    return (\n        <div\n            style={{\n                margin: '20%',\n                width: '60%',\n                height: '60%',\n                borderRadius: instance.type === ObjectTypes.Player ? 100 : 5,\n                backgroundColor: color,\n                color: 'black',\n                opacity: 0.7,\n            }}\n        >\n            <pre style={{ padding: 2, fontSize: 8 }}>{children}</pre>\n        </div>\n    )\n}\n\nexport const propTypeDefinitions: Partial<Record<ObjectTypes, ObjectDefinition>> = {\n    [ObjectTypes.Player]: {\n        name: 'Player',\n        getId: () => PLAYER_ID,\n        canEnter: () => true,\n        Component: propDebugComponent('white'),\n        Component3d: Player,\n    },\n    [ObjectTypes.BigRock]: {\n        name: 'Big rock',\n        getId: () => uniqueId('big-rock'),\n        canEnter: () => false,\n        push: ({ self }) => [\n            setObjectData({ targetId: self.id, data: { info: uniqueId('Too big! ') } }),\n        ],\n        Component: propDebugComponent('brown'),\n        Component3d: Item,\n    },\n    [ObjectTypes.Cannon]: {\n        name: 'Cannon',\n        getId: () => uniqueId('cannon'),\n        canEnter: () => true,\n        equip: ({ who, self }) => [\n            setObjectData({ targetId: who.id, data: { gun: 'cannon' } }),\n            remove(self.id),\n        ],\n        Component: propDebugComponent('red'),\n        Component3d: Item,\n    },\n}\n","import { tileTypeDefinitions } from '../objects/tileTypeDefinitions'\nimport { propTypeDefinitions } from '../objects/propTypeDefinitions'\nimport { ObjectInstance, ObjectTypes } from '../types/types'\nimport { findByXY } from '../helpers'\n\nconst tileDict = {\n    0: ObjectTypes.Grass,\n    1: ObjectTypes.RockFloor,\n    2: ObjectTypes.Button,\n    3: ObjectTypes.Ice,\n}\n\n// prettier-ignore\nconst mapBitmap = [\n    [1,1,1,1,2,1,1,],\n    [1,0,3,3,0,0,1,],\n    [1,0,0,1,1,0,1,],\n    [1,0,0,1,0,0,1,],\n    [1,1,1,1,1,1,1,],\n]\n\nconst propDict = {\n    1: ObjectTypes.Player,\n    2: ObjectTypes.BigRock,\n    3: ObjectTypes.Cannon,\n}\n\n// prettier-ignore\nconst propsBitmap = [\n    [0,0,0,0,0,0,0,],\n    [0,1,0,0,0,0,0,],\n    [0,0,0,0,0,0,0,],\n    [0,2,0,0,3,0,2,],\n    [0,0,0,0,0,0,0,],\n]\n\n// TODO?\nconst randomRotation = () => {\n    return (Math.PI / 2) * Math.round(Math.random() * 4)\n}\n\nexport const createMap = (): ObjectInstance[] => {\n    const tiles: ObjectInstance[] = mapBitmap.flatMap((items, y) =>\n        items.map((typeNumber, x) => {\n            const type = tileDict[typeNumber as keyof typeof tileDict]\n            return {\n                type,\n                xy: [x, y],\n                id: tileTypeDefinitions[type]!.getId(),\n                elevation: Math.random() / 7,\n                rotation: [0, 0],\n                zIndex: 1,\n                aIndex: 100,\n                data: {},\n            }\n        }),\n    )\n\n    const props = propsBitmap\n        .flatMap((items, y) =>\n            items.map((typeNumber, x) => {\n                const type = propDict[typeNumber as keyof typeof propDict]\n                if (!type) return\n                return {\n                    type,\n                    xy: [x, y],\n                    id: propTypeDefinitions[type]!.getId(),\n                    elevation: findByXY(tiles, [x, y])[0]?.elevation || 0,\n                    rotation: [0, 0],\n                    zIndex: 2,\n                    aIndex: 10,\n                    data: {},\n                }\n            }),\n        )\n        .filter(a => a) as ObjectInstance[]\n\n    return [...props, ...tiles]\n}\n","import { ObjectDefinition, ObjectTypes } from '../types/types'\nimport { tileTypeDefinitions } from './tileTypeDefinitions'\nimport { propTypeDefinitions } from './propTypeDefinitions'\n\nconst objectDefinitions: Partial<Record<ObjectTypes, ObjectDefinition>> = {\n    ...tileTypeDefinitions,\n    ...propTypeDefinitions,\n}\n\nexport const getDefinition = (type: ObjectTypes): ObjectDefinition => {\n    const def = objectDefinitions[type]\n\n    if (!def) throw new Error(`[getDefinition] Definition for ${type} not found`)\n\n    return def\n}\n","import { Action } from 'redux'\nimport { applyVector, asArray, findById, findByXY } from '../../helpers'\nimport { getDefinition } from '../../objects/definitions'\nimport { ActionEvent, Vector2 } from '../../types/types'\nimport { GameState } from '../gameReducer'\nimport { ResolverResults } from '../types'\n\nexport const moveResolver = (\n    state: GameState,\n    targetId: string,\n    vector: Vector2,\n): ResolverResults => {\n    let objects = state.objects\n    const actions: Action[] = []\n    const addActions = (a: Action | Action[] = []) => actions.push(...asArray(a))\n    const abortResults = { objects, actions }\n\n    const target = findById(objects, targetId)\n\n    if (!target) {\n        console.warn(`[move] Target ${targetId} not found`)\n        return abortResults\n    }\n\n    const newXY = applyVector(target.xy, vector)\n    const newXYObjects = findByXY(objects, newXY).sort((a, b) => b.aIndex - a.aIndex)\n\n    // Nothing there, don't go\n    if (!newXYObjects.length) {\n        return abortResults\n    }\n\n    // Can enter to this region?\n    for (const obj of newXYObjects) {\n        const objDef = getDefinition(obj.type)\n        const event: ActionEvent = { who: target, vector, state, self: obj }\n        if (!objDef.canEnter(event)) {\n            addActions(objDef.push?.(event))\n            return { objects, actions }\n        }\n    }\n\n    // Post enter events\n    for (const obj of newXYObjects) {\n        const objDef = getDefinition(obj.type)\n        const event: ActionEvent = { who: target, vector, state, self: obj }\n        addActions(objDef.enter?.(event))\n    }\n\n    objects = objects.map(obj => {\n        if (obj !== target) return obj\n        return { ...obj, xy: newXY }\n    })\n\n    return { objects, actions }\n}\n","import actionCreatorFactory from 'typescript-fsa'\nimport { reducerWithInitialState } from 'typescript-fsa-reducers'\nimport { arrMerge, findById, findByXY } from '../helpers'\nimport { createMap } from '../mocks/mapMock'\nimport { Vector2, ObjectInstance, ObjectInstanceData, ActionEvent } from '../types/types'\nimport { Action } from 'redux'\nimport { rotateResolver } from './resolvers/rotateResolver'\nimport { moveResolver } from './resolvers/moveResolver'\nimport { ResolverResults } from './types'\nimport { getDefinition } from '../objects/definitions'\n\nexport interface GameState {\n    queueStared: boolean\n    queue: Action[]\n    objects: ObjectInstance[]\n}\n\nexport interface GameStateAware {\n    game: GameState\n}\n\nexport const initialState: GameState = {\n    queueStared: false,\n    queue: [],\n    objects: createMap(),\n}\n\nconst action = actionCreatorFactory('GAME')\n\nexport const enqueue = action<Action | Action[]>('ENQUEUE')\nexport const tryNextAction = action('TRY_NEXT_ACTION')\nexport const nextAction = action<Action>('NEXT_ACTION')\nexport const queueEnd = action('QUEUE_END')\n\nexport const move = action<{ targetId: string; vector: Vector2 }>('MOVE')\nexport const rotate = action<{ targetId: string; rotation: Vector2 }>('ROTATE')\nexport const remove = action<string>('REMOVE')\nexport const equip = action<{ targetId: string }>('EQUIP')\nexport const setObjectData = action<{ targetId: string; data: Partial<ObjectInstanceData> }>(\n    'SET_OBJECT_DATA',\n)\n\nexport const gameReducer = reducerWithInitialState(initialState)\n    .case(\n        enqueue,\n        (state, action): GameState => ({\n            ...state,\n            queue: arrMerge(state.queue, action),\n        }),\n    )\n    .case(\n        nextAction,\n        (state, action): GameState => ({\n            ...state,\n            queueStared: true,\n            queue: state.queue.filter(a => a !== action),\n        }),\n    )\n    .case(queueEnd, (state): GameState => ({ ...state, queueStared: false }))\n    .case(\n        move,\n        (state, { targetId, vector }): GameState => {\n            const { actions, objects } = moveResolver(state, targetId, vector)\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n    .case(\n        rotate,\n        (state, { targetId, rotation }): GameState => {\n            const { actions, objects } = rotateResolver(state, targetId, rotation)\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n    .case(\n        remove,\n        (state, targetId): GameState => ({\n            ...state,\n            objects: state.objects.filter(obj => obj.id !== targetId),\n        }),\n    )\n    .case(\n        equip,\n        (state, { targetId }): GameState => {\n            const { actions, objects } = equipResolver(state, targetId)\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n    .case(\n        setObjectData,\n        (state, { targetId, data }): GameState => {\n            const { actions, objects } = setObjectDataResolver(state, targetId, data)\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n\nexport const equipResolver = (state: GameState, targetId: string): ResolverResults => {\n    const actions: Action[] = []\n    const target = findById(state.objects, targetId)\n    if (!target) return { objects: state.objects, actions: [] }\n\n    const myObjects = findByXY(state.objects, target.xy).sort((a, b) => b.aIndex - a.aIndex)\n\n    for (const obj of myObjects) {\n        const objDef = getDefinition(obj.type)\n        const event: ActionEvent = { who: target, vector: [0, 0], state, self: obj }\n        actions.push(...(objDef.equip?.(event) || []))\n    }\n\n    return {\n        actions,\n        objects: state.objects,\n    }\n}\n\nexport const setObjectDataResolver = (\n    { objects }: GameState,\n    targetId: string,\n    data: Partial<ObjectInstanceData>,\n): ResolverResults => {\n    const target = findById(objects, targetId)\n\n    return {\n        objects: objects.map(obj => {\n            if (obj !== target) return obj\n            return { ...obj, data: { ...obj.data, ...data } }\n        }),\n        actions: [],\n    }\n}\n","import { findById } from '../../helpers'\nimport { Vector2 } from '../../types/types'\nimport { ResolverResults } from '../types'\nimport { GameState } from '../gameReducer'\n\nexport const rotateResolver = (\n    { objects }: GameState,\n    targetId: string,\n    rotation: Vector2,\n): ResolverResults => {\n    const target = findById(objects, targetId)\n\n    return {\n        objects: objects.map(obj => {\n            if (obj !== target) return obj\n            return { ...obj, rotation }\n        }),\n        actions: [],\n    }\n}\n","import { Action } from 'redux'\nimport { combineEpics, StateObservable } from 'redux-observable'\nimport { concat, from, Observable, of, Subject } from 'rxjs'\nimport {\n    concatMap,\n    delay,\n    distinctUntilChanged,\n    filter,\n    ignoreElements,\n    map,\n    mapTo,\n    startWith,\n    switchMap,\n    switchMapTo,\n    flatMap,\n} from 'rxjs/operators'\nimport { enqueue, GameStateAware, nextAction, tryNextAction, queueEnd } from './gameReducer'\nimport { first } from 'lodash'\n\nconst enqueueEpic = (\n    actions$: Observable<Action>,\n    state$: StateObservable<GameStateAware>,\n): Observable<Action> =>\n    actions$.pipe(\n        filter(enqueue.match),\n        filter(() => !state$.value.game.queueStared),\n        mapTo(tryNextAction()),\n    )\n\nconst tryNextEpic = (\n    actions$: Observable<Action>,\n    state$: StateObservable<GameStateAware>,\n): Observable<Action> =>\n    actions$.pipe(\n        filter(tryNextAction.match),\n        map(() => first(state$.value.game.queue)),\n        map(action => (action ? nextAction(action) : queueEnd())),\n    )\n\nconst nextActionEpic = (\n    actions$: Observable<Action>,\n    state$: StateObservable<GameStateAware>,\n): Observable<Action> =>\n    actions$.pipe(\n        filter(nextAction.match),\n        flatMap(action =>\n            concat(of(action.payload), of(tryNextAction()).pipe(delay(action.meta?.delay || 50))),\n        ),\n    )\n\nexport const gameEpics = combineEpics(enqueueEpic, tryNextEpic, nextActionEpic)\n","import { applyMiddleware, combineReducers, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { createEpicMiddleware } from 'redux-observable'\nimport { gameReducer } from './gameReducer'\nimport { gameEpics } from './gameEpics'\n\nconst epicMiddleware = createEpicMiddleware()\n\nconst composeEnhancers = composeWithDevTools({\n    name: 'App',\n})\n\nconst rootReducer = combineReducers({\n    game: gameReducer,\n})\n\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(epicMiddleware)))\n\nepicMiddleware.run(gameEpics as any)\n","import { isEqual } from 'lodash'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Action } from 'redux'\nimport { findById } from '../helpers'\nimport { enqueue, equip, GameStateAware, move, rotate } from '../state/gameReducer'\nimport { PLAYER_ID } from '../types/consts'\nimport { Vector2 } from '../types/types'\n\nconst targetId = PLAYER_ID\n\nexport const useGame = () => {\n    const state = useSelector((state: GameStateAware) => state.game)\n    const dispatch = useDispatch()\n\n    const triggerMove = (vector: Vector2) => {\n        if (state.queueStared) return\n\n        const actions: Action[] = []\n        const who = findById(state.objects, PLAYER_ID)\n\n        if (!who) {\n            return console.warn(`Player don't exists [${PLAYER_ID}]`)\n        }\n\n        if (!isEqual(who.rotation, vector)) {\n            actions.push(rotate({ targetId: PLAYER_ID, rotation: vector }))\n        } else {\n            actions.push(move({ targetId: PLAYER_ID, vector }))\n        }\n\n        dispatch(enqueue(actions))\n    }\n\n    const triggerEquip = () => {\n        dispatch(enqueue(equip({ targetId: PLAYER_ID })))\n    }\n\n    return { ...state, move: triggerMove, equip: triggerEquip }\n}\n","import { useEffect } from 'react'\n\nexport const useKeyboardEvent = (key: string, callback: Function) => {\n    useEffect(() => {\n        const handler = (event: KeyboardEvent) => {\n            if (event.key === key) callback()\n        }\n\n        window.addEventListener('keydown', handler)\n\n        return () => window.removeEventListener('keydown', handler)\n    })\n}\n","import React from 'react'\nimport { useGame } from '../hooks/useGame'\nimport { useKeyboardEvent } from '../hooks/useKeyboardEvent'\nimport { getDefinition } from '../objects/definitions'\nimport { DOWN, LEFT, PLAYER_ID, RIGHT, UP } from '../types/consts'\nimport { ObjectInstance, ObjectTypes } from '../types/types'\nimport { isEmpty } from 'lodash'\n\ninterface DebugViewProps {\n    objects: ObjectInstance[]\n}\n\nconst size = 60\n\nexport const DebugView = ({ objects }: DebugViewProps) => {\n    const { move, equip } = useGame()\n\n    const left = () => move(LEFT)\n    const up = () => move(UP)\n    const down = () => move(DOWN)\n    const right = () => move(RIGHT)\n\n    useKeyboardEvent('ArrowLeft', left)\n    useKeyboardEvent('ArrowUp', up)\n    useKeyboardEvent('ArrowDown', down)\n    useKeyboardEvent('ArrowRight', right)\n    useKeyboardEvent(' ', equip)\n\n    return (\n        <div\n            style={{\n                position: 'absolute',\n                zIndex: 100,\n                top: 0,\n                right: 0,\n                width: size * 8,\n                opacity: 0.8,\n            }}\n        >\n            <button onClick={left}>←</button>\n            <button onClick={up}>↑</button>\n            <button onClick={down}>↓</button>\n            <button onClick={right}>→</button>\n            <button onClick={equip}>equip</button>\n\n            <div style={{ position: 'relative' }}>\n                {objects.map(obj => {\n                    const { type, id, xy, rotation, elevation, zIndex, data } = obj\n                    const { Component } = getDefinition(type)\n                    return (\n                        <div\n                            key={id}\n                            style={{\n                                position: 'absolute',\n                                left: xy[0] * size,\n                                top: xy[1] * size,\n                                width: size,\n                                height: size,\n                                zIndex,\n                            }}\n                        >\n                            <Component instance={obj}>\n                                {type} <br />\n                                {isEmpty(data) ? '' : JSON.stringify(data, null, 1)}\n                            </Component>\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n\ninterface LabelProps {\n    text: string\n    bottom?: boolean\n}\n\nexport const Label = ({ text, bottom }: LabelProps) => (\n    <div\n        style={{\n            position: 'absolute',\n            left: 0,\n            top: bottom ? '80%' : 0,\n            fontSize: 10,\n            color: 'black',\n        }}\n    >\n        {text}\n    </div>\n)\n","import React from 'react'\nimport { Color } from 'three'\n\nconst d = 5\n\nexport const Environment = () => {\n    return (\n        <group>\n            <ambientLight intensity={2} />\n            <pointLight\n                position={[6, 7, 8]}\n                intensity={2.2}\n                color={new Color('#3a8dc2')}\n                shadow-mapSize-Height=\"1024\"\n                shadow-mapSize-width=\"1024\"\n                shadow-camera-far={30}\n                shadow-bias={-0.01}\n                castShadow\n                shadow-camera-left={-d}\n                shadow-camera-right={d}\n                shadow-camera-top={d}\n                shadow-camera-bottom={-d}\n            />\n            <pointLight\n                position={[1, 3, 5]}\n                intensity={2.2}\n                color={new Color('#c86b6f')}\n                shadow-mapSize-Height=\"1024\"\n                shadow-mapSize-width=\"1024\"\n                shadow-camera-far={30}\n                shadow-bias={-0.01}\n                castShadow\n                shadow-camera-left={-d}\n                shadow-camera-right={d}\n                shadow-camera-top={d}\n                shadow-camera-bottom={-d}\n            />\n        </group>\n    )\n}\n","import React, { Suspense } from 'react'\nimport { Canvas, useThree } from 'react-three-fiber'\nimport { Color, PCFSoftShadowMap } from 'three'\nimport { useGame } from '../hooks/useGame'\nimport { getDefinition } from '../objects/definitions'\nimport { DebugView } from './DebugView'\nimport { play } from '../audio/play'\nimport { Environment } from './Environment'\n\nexport const GameInstance = () => {\n    const { objects } = useGame()\n    const { gl } = useThree()\n\n    return (\n        <>\n            <DebugView objects={objects} />\n            <Canvas\n                orthographic\n                camera={{ zoom: 100, fov: 1075, position: [-3 + 3, 5, 5 + 2] }}\n                onCreated={scene => {\n                    scene.camera.lookAt(3, 1, 2)\n                    scene.gl.shadowMap.type = PCFSoftShadowMap\n                    scene.gl.shadowMap.enabled = true\n                }}\n            >\n                <Environment />\n                <Suspense\n                    fallback={\n                        <mesh>\n                            <boxBufferGeometry attach=\"geometry\" args={[0.5, 0.5, 0.5]} />\n                            <meshStandardMaterial attach=\"material\" color=\"red\" />\n                        </mesh>\n                    }\n                >\n                    {objects.map(obj => {\n                        const { Component3d } = getDefinition(obj.type)\n                        return <Component3d key={obj.id} instance={obj} />\n                    })}\n                </Suspense>\n            </Canvas>\n        </>\n    )\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { store } from '../state/store'\nimport { GameInstance } from './GameInstance'\n\nexport const App = () => {\n    return (\n        <Provider store={store}>\n            <GameInstance />\n        </Provider>\n    )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './app/App'\nimport './styles/global.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}