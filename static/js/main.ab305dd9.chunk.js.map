{"version":3,"sources":["types/types.ts","config.ts","helpers.ts","objects/models/Items.tsx","objects/tileTypeDefinitions.tsx","audio/play.ts","types/consts.ts","objects/propTypeDefinitions.tsx","objects/definitions.ts","state/resolvers/flyResolver.ts","state/resolvers/moveResolver.ts","state/resolvers/grappleResolver.ts","state/gameReducer.ts","state/resolvers/rotateResolver.ts","state/gameEpics.ts","state/soundEpics.ts","state/store.ts","hooks/useEditor.ts","hooks/useKeyboardEvent.tsx","app/DebugView.tsx","app/Environment.tsx","data/maps.ts","app/GameInstance.tsx","hooks/useGame.ts","app/App.tsx","index.tsx"],"names":["ObjectTypes","CAMERA_OFFSET","applyVector","x","y","findById","props","id","find","prop","findByXY","objects","xy","filter","tile","x1","y1","x2","y2","samePosition","asArray","item","Array","isArray","arrMerge","a","b","limitVector","vector","min","max","map","v","value","Math","limit","vectorDiff","v1","v2","i","color","useMyLoader","rocket","useLoader","GLTFLoader","process","cannon","boom","box","rock","fence","arrow","crossbow","graund","wall","grass","ice","button","scene","clone","Fence","model","AssetPreload","instance","elevation","rotation","castShadow","receiveShadow","elevationFix","anim","useSpring","pos","rot","vectorToThree","children","scale","set","primitive","object","position","AnimatieAsset","url","data","gltf","boring","boringMixer","AnimationMixer","animations","forEach","clip","clipAction","play","useFrame","update","group","visible","hasCannon","hasGrapple","AnimateSelfAsset","gltfScene","mixer","index","animation","setLoop","LoopOnce","PI","tileDebugComponent","style","width","height","backgroundColor","fontSize","tileTypeDefinitions","Grass","name","Component","Component3d","Ice","enter","who","move","targetId","RockFloor","Wall","push","force","self","soundList","music","Alert_NO","Alert_YES","Bazooka","Crossbow","Engine_start","Engine_LOOP_128","Engine_NO_1","Engine_NO_2","Engine_stop","Equip_1","Equip_2","Equip_3","Equip_4","Hero_1","Hero_2","Jump","volume","sound","Audio","playEquip","round","random","engineStart","UP","RIGHT","DOWN","LEFT","propDebugComponent","margin","borderRadius","type","Player","opacity","padding","propTypeDefinitions","BigRock","Box","remove","Button","state","console","warn","toggle","open","setObjectData","WinTrigger","win","attach","args","Dor","Cannon","equip","Boom","RocketProjectile","projectileLaunch","delay","projectileHit","what","tmpSpawn","uniqueId","aIndex","zIndex","CrossbowProjectile","objectDefinitions","getDefinition","def","Error","isTooHight","ontoObj","flyer","objDef","maxElevation","obj","initialState","queueStared","queue","mapId","mapName","cleanObjectsState","gameAction","actionCreatorFactory","queueAction","loadMap","reset","lose","enqueue","tryNextAction","nextAction","queueEnd","rotate","fall","projectile","fly","flyEnd","grapple","updateObject","gameReducer","reducerWithInitialState","case","cases","action","actions","addActions","target","newXY","newXYObjects","sort","length","objectValues","event","moveResolver","rotateResolver","equipResolver","byId","launchActions","abortResults","hitTargetId","flyResolver","undefined","hitActions","projectileInstance","prevXY","grappleResolver","setObjectDataResolver","myObjects","gameEpics","combineEpics","actions$","state$","pipe","match","game","mapTo","first","flatMap","newActionDelay","payload","meta","concat","of","soundEpics","tap","ignoreElements","epicMiddleware","createEpicMiddleware","composeEnhancers","composeWithDevTools","rootReducer","combineReducers","store","createStore","applyMiddleware","run","useEditor","useSelector","useState","editMode","setEditMode","dispatch","useDispatch","edit","toggleEditMode","copyMap","serializedMap","JSON","stringify","navigator","clipboard","writeText","then","log","error","useKeyboardEvent","key","callback","useEffect","handler","window","addEventListener","removeEventListener","DebugView","editId","setEditId","top","right","size","onClick","step","onChange","parseInt","Object","keys","left","isEmpty","Environment","objectsList","useThree","camera","xValues","yValues","mapCenterX","mapCenterY","offsetX","offsetY","offsetZ","lookAt","intensity","Color","shadow-mapSize-Height","shadow-mapSize-width","shadow-camera-far","shadow-bias","shadow-camera-left","shadow-camera-right","shadow-camera-top","shadow-camera-bottom","maps","GameInstance","player","isEqual","fire","useGame","up","down","mapCenter","el","bottom","textAlign","zoom","onCreated","gl","shadowMap","PCFSoftShadowMap","enabled","fallback","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ab305dd9.chunk.js","sourcesContent":["import { GameState } from '../state/gameReducer'\nimport { Action } from 'redux'\nimport { FC, ReactNode } from 'react'\n\nexport type XY = [number, number]\nexport type Vector2 = [number, number]\n\nexport enum ObjectTypes {\n    Player = 'Player',\n    WinTrigger = 'WinTrigger',\n\n    Grass = 'Grass',\n    RockFloor = 'RockFloor',\n    Wall = 'Wall',\n    Box = 'Box',\n    BigRock = 'BigRock',\n    Fence = 'Fence',\n\n    Button = 'Button',\n    Dor = 'Dor',\n    Ice = 'Ice',\n\n    Crossbow = 'Crossbow',\n    Cannon = 'Cannon',\n    Boom = 'Boom',\n\n    CrossbowProjectile = 'CrossbowProjectile',\n    RocketProjectile = 'RocketProjectile',\n}\n\nexport interface ObjectInstance {\n    type: ObjectTypes\n    id: string\n    xy: XY\n    rotation: Vector2\n    elevation: number\n    zIndex: number\n    aIndex: number\n    data: Partial<ObjectInstanceData>\n}\n\nexport interface ObjectInstanceData {\n    hasCannon: boolean\n    hasGrapple: boolean\n    info: string\n    open: boolean\n    targetId: string\n}\n\nexport interface ActionEvent {\n    who: ObjectInstance\n    self: ObjectInstance\n    what?: ObjectInstance\n    vector: Vector2\n    state: GameState\n    force?: number\n}\n\nexport interface ObjectDefinition {\n    name: string\n    height: (instance: ObjectInstance) => number\n    push?(event: ActionEvent): Action[] // triggered when elevation is to big\n    enter?(event: ActionEvent): Action[]\n    leave?(event: ActionEvent): Action[]\n    equip?(event: ActionEvent): Action[]\n    projectileLaunch?(event: ActionEvent): Action[] // eg. for projectile\n    projectileHit?(event: ActionEvent): Action[] // eg. for projectile\n    Component(props: RenderComponentProps & { children: ReactNode }): any\n    Component3d(props: RenderComponentProps): any\n}\n\nexport interface RenderComponentProps {\n    instance: ObjectInstance\n}\n\nexport interface MapData {\n    id: string\n    name: string\n    objects: ObjectInstance[]\n}\n","export const CAMERA_OFFSET = [-2, 4, 6]\n\nexport const MAX_MOVE_ELEVATION = 0.5\n\nexport const PROJECTILE_ELEVATION = 0.8\n\nexport const GRAPPLE_RANGE = 5\nexport const GRAPPLE_ELEVATION = 0.5\nexport const GRAPPLE_MOVE_DELAY = 300\n\nexport const DEFAULT_ACTION_DELAY = 65\n\nexport const FALL_TRIGGER_DELAY = 400\nexport const FALL_REMOVE_DELAY = 800\nexport const FALL_ELEVATION = -5\n","import { XY, Vector2 } from './types/types'\n\nexport const reverseVector = (vector: Vector2) => vector.map(v => v * -1) as Vector2\n\nexport const applyVector = ([x, y]: XY, [vx, vy]: Vector2): XY => [x + vx, y + vy]\n\nexport const samePosition = ([x1, y1]: XY, [x2, y2]: XY) => x1 === x2 && y1 === y2\n\nexport const findById = <T extends { id: string }>(props: T[], id: string) => {\n    return props.find(prop => prop.id === id)\n}\n\nexport const findByXY = <T extends { xy: XY }>(objects: T[], xy: XY) => {\n    return objects.filter(tile => samePosition(tile.xy, xy))\n}\n\nexport const asArray = <T>(item: T | T[]): T[] => (Array.isArray(item) ? item : [item])\nexport const arrMerge = <T>(a: T[], b: T | T[] = []): T[] => [...a, ...asArray(b)]\n\nexport const limit = (value: number, min: number, max: number) =>\n    Math.min(max, Math.max(min, value))\n\nexport const limitVector = (vector: Vector2, min: number, max: number) =>\n    vector.map(v => limit(v, min, max)) as Vector2\n\nexport const vectorDiff = (v1: Vector2, v2: Vector2) => v1.map((v, i) => v2[i] - v) as Vector2\n","import React, { useEffect } from 'react'\nimport { useLoader, useFrame } from 'react-three-fiber'\nimport { GLTFLoader, GLTF } from 'three/examples/jsm/loaders/GLTFLoader'\nimport { RenderComponentProps, Vector2 } from '../../types/types'\nimport { AnimationMixer, Group, LoopOnce } from 'three'\nimport { setInterval } from 'timers'\nimport { useSpring, animated } from 'react-spring/three'\nimport { timeInterval } from 'rxjs/operators'\n\nconst useMyLoader = () => {\n    const rocket = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/rocket.gltf`)\n    const cannon = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/cannon.gltf`)\n    const boom = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/boom.gltf`)\n    const box = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/box.gltf`)\n    const rock = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/rock1.gltf`)\n    const fence = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/fence.gltf`)\n    const arrow = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/arrow.gltf`)\n    const crossbow = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/crossbow.gltf`)\n    const graund = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/graund.gltf`)\n    const wall = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/wall.gltf`)\n    const grass = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/grass.gltf`)\n    const ice = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/ice.gltf`)\n    const button = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/box.gltf`) //TODO MODEL\n    return {\n        rocket: rocket.scene.clone(),\n        cannon: cannon.scene.clone(),\n        boom: boom.scene.clone(),\n        box: box.scene.clone(),\n        rock: rock.scene.clone(),\n        fence: fence.scene.clone(),\n        arrow: arrow.scene.clone(),\n        crossbow: crossbow.scene.clone(),\n        graund: graund.scene.clone(),\n        wall: wall.scene.clone(),\n        grass: grass.scene.clone(),\n        ice: ice.scene.clone(),\n        button: button.scene.clone(),\n    }\n}\nconst useAnimationLoader = () => {\n    // const jump = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/animations/jump.gltf`)\n    const boring = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/animations/boring.gltf`)\n    // const push = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/animations/move.gltf`)\n\n    return {\n        // jump,\n        boring,\n        // push,\n    }\n}\nexport const Player = (props: RenderComponentProps) => {\n    return <AnimatieAsset {...props} url=\"robot_model.gltf\" />\n}\n\nexport const Box = (props: RenderComponentProps) => {\n    const { box } = useMyLoader()\n    return <AssetPreload {...props} model={box} />\n}\n\nexport const Rock = (props: RenderComponentProps) => {\n    const { rock } = useMyLoader()\n    return <AssetPreload {...props} model={rock} />\n}\n\nexport const Fence = (props: RenderComponentProps) => {\n    const { fence } = useMyLoader()\n    return <AssetPreload {...props} model={fence} />\n}\n\nexport const Arrow = (props: RenderComponentProps) => {\n    const { arrow } = useMyLoader()\n    return <AssetPreload {...props} model={arrow} />\n}\n\nexport const Boom = (props: RenderComponentProps) => {\n    return <AnimateSelfAsset {...props} url=\"boom.gltf\" />\n}\n\nexport const Cannon = (props: RenderComponentProps) => {\n    // return <Asset {...props} url=\"rakietnica_srednia.gltf\" elevationFix={-0.8} />\n\n    const { cannon } = useMyLoader()\n    return <AssetPreload {...props} model={cannon} elevationFix={-0.8} />\n}\n\nexport const Rocket = (props: RenderComponentProps) => {\n    const { rocket } = useMyLoader()\n    return <AssetPreload {...props} model={rocket} />\n}\n\nexport const Crossbow = (props: RenderComponentProps) => {\n    const { crossbow } = useMyLoader()\n    return <AssetPreload {...props} model={crossbow} elevationFix={-0.8} />\n}\n\nexport const Ground = (props: RenderComponentProps) => {\n    const { graund } = useMyLoader()\n    return <AssetPreload {...props} model={graund} castShadow={true} receiveShadow={true} />\n}\nexport const Wall = (props: RenderComponentProps) => {\n    const { wall } = useMyLoader()\n    return <AssetPreload {...props} model={wall} castShadow={true} receiveShadow={true} />\n}\n\nexport const Grass = (props: RenderComponentProps) => {\n    const { grass } = useMyLoader()\n    return <AssetPreload {...props} model={grass} castShadow={true} receiveShadow={true} />\n}\n\nexport const Ice = (props: RenderComponentProps) => {\n    const { ice } = useMyLoader()\n    return <AssetPreload {...props} model={ice} castShadow={false} receiveShadow={true} />\n}\n\nexport const Button = (props: RenderComponentProps) => {\n    const { button } = useMyLoader()\n    return <AssetPreload {...props} model={button} castShadow={false} receiveShadow={true} />\n}\n\nexport const createTrigger = (color: string) => ({ instance }: RenderComponentProps) => {\n    const { xy, elevation, rotation } = instance\n\n    return (\n        <mesh position={[xy[0], elevation, xy[1]]} rotation={[0, vectorToThree(rotation), 0]}>\n            <boxBufferGeometry attach=\"geometry\" args={[0.5, 1, 0.5]} />\n            <meshStandardMaterial attach=\"material\" color={color} />\n        </mesh>\n    )\n}\n\ninterface AssetProps extends RenderComponentProps {\n    url: string\n    color?: string\n    castShadow?: boolean\n    receiveShadow?: boolean\n    elevationFix?: number\n}\n\ninterface PreloadAssetProps extends RenderComponentProps {\n    model: GLTF['scene']\n    color?: string\n    castShadow?: boolean\n    receiveShadow?: boolean\n    elevationFix?: number\n}\n\nconst AssetPreload = ({\n    model,\n    instance: { xy, elevation, rotation },\n    castShadow = true,\n    receiveShadow = true,\n    elevationFix = 0,\n}: PreloadAssetProps) => {\n    const anim = useSpring({\n        pos: [xy[0], elevation + elevationFix, xy[1]],\n        rot: [0, vectorToThree(rotation), 0],\n    })\n\n    if (castShadow) model.children[0].castShadow = true\n    if (receiveShadow) model.children[0].receiveShadow = true\n    model.scale.set(0.5, 0.5, 0.5)\n    return <animated.primitive object={model} position={anim.pos} rotation={anim.rot} />\n}\n\nconst AnimatieAsset = ({\n    url,\n    instance: { xy, elevation, rotation, data },\n    castShadow = true,\n    receiveShadow = true,\n}: AssetProps) => {\n    const anim = useSpring({\n        pos: [xy[0], elevation, xy[1]],\n        rot: [0, vectorToThree(rotation), 0],\n    })\n\n    const gltf = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/${url}`)\n    gltf.scene.scale.set(0.5, 0.5, 0.5)\n    if (castShadow) gltf.scene.children[0].castShadow = true\n    if (receiveShadow) gltf.scene.children[0].receiveShadow = true\n\n    const gltfanimationBoring = useLoader(\n        GLTFLoader,\n        `${process.env.PUBLIC_URL}/assets/animations/boring.gltf`,\n    )\n\n    // const { jump } = useAnimationLoader()\n    const { boring } = useAnimationLoader()\n    // const { push } = useAnimationLoader()\n\n    const boringMixer = new AnimationMixer(boring.scene)\n    boring.animations.forEach(clip => {\n        boringMixer.clipAction(clip, gltf.scene).play()\n    })\n\n    useFrame(() => {\n        boringMixer.update(0.02)\n    })\n\n    const { cannon } = useMyLoader()\n    const { crossbow } = useMyLoader()\n\n    return (\n        <animated.group position={anim.pos} rotation={anim.rot}>\n            <primitive object={gltf.scene}>\n                <primitive object={cannon} visible={!!data.hasCannon} />\n                <primitive object={crossbow} visible={!!data.hasGrapple} />\n            </primitive>\n        </animated.group>\n    )\n}\n\nconst AnimateSelfAsset = ({\n    url,\n    instance: { xy, elevation, rotation, data },\n    castShadow = true,\n    receiveShadow = true,\n}: AssetProps) => {\n    const anim = useSpring({\n        pos: [xy[0], elevation, xy[1]],\n        rot: [0, vectorToThree(rotation), 0],\n    })\n    const gltf = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/${url}`)\n\n    const gltfScene = gltf.scene.clone()\n    // useEffect(() => {\n    if (castShadow) gltfScene.children[0].castShadow = true\n    if (receiveShadow) gltfScene.children[0].receiveShadow = true\n\n    gltfScene.scale.set(0.6, 0.6, 0.6)\n\n    const mixer = new AnimationMixer(gltfScene)\n\n    gltf.animations.forEach((clip, index) => {\n        const animation = mixer.clipAction(clip, gltfScene.children[index])\n        animation.setLoop(LoopOnce, 1)\n        animation.play()\n    })\n    // }, [xy])\n    useFrame(() => {\n        mixer.update(0.03)\n    })\n\n    return (\n        <animated.group position={anim.pos} rotation={anim.rot}>\n            <primitive object={gltfScene} />\n        </animated.group>\n    )\n}\n\nconst vectorToThree = (vector: Vector2) => {\n    if (vector[0] === 1 && vector[1] === 0) return Math.PI / 2\n    if (vector[0] === 0 && vector[1] === -1) return (Math.PI / 2) * 2\n    if (vector[0] === -1 && vector[1] === 0) return (Math.PI / 2) * 3\n    if (vector[0] === 0 && vector[1] === 1) return (Math.PI / 2) * 4\n    // return (Math.PI / 2) * 4\n    return 0\n}\n","import React from 'react'\nimport { limitVector } from '../helpers'\nimport { move } from '../state/gameReducer'\nimport { ObjectDefinition, ObjectTypes } from '../types/types'\nimport { Button, Grass, Ground, Ice, Wall } from './models/Items'\n\nconst tileDebugComponent = (color: string) => (props: any) => (\n    <div\n        style={{ width: '100%', height: '100%', backgroundColor: color, fontSize: 9 }}\n        {...props}\n    />\n)\n\nexport const tileTypeDefinitions: Partial<Record<ObjectTypes, ObjectDefinition>> = {\n    [ObjectTypes.Grass]: {\n        name: 'Grass',\n        height: () => 0,\n        Component: tileDebugComponent('green'),\n        Component3d: Grass,\n    },\n\n    [ObjectTypes.Ice]: {\n        name: 'Ice',\n        height: () => 0,\n        enter: ({ who, vector }) => [\n            move({ targetId: who.id, vector: limitVector(vector, -1, 1) }),\n        ],\n        Component: tileDebugComponent('lightblue'),\n        Component3d: Ice,\n    },\n    [ObjectTypes.RockFloor]: {\n        name: 'Rock floor',\n        height: () => 0,\n        Component: tileDebugComponent('gray'),\n        Component3d: Ground,\n    },\n    [ObjectTypes.Wall]: {\n        name: 'Wall',\n        height: () => 0,\n        push: ({ force, self }) => {\n            // if (force && force >= 50) return [remove(self.id)]\n            // console.log(self)\n            return []\n        },\n        Component: tileDebugComponent('gray'),\n        Component3d: Wall,\n    },\n}\n","const soundList = {\n    button: `${process.env.PUBLIC_URL}/sounds/Button_gameplay.mp3`,\n    music: `${process.env.PUBLIC_URL}/sounds/elementary1.mp3`,\n    Alert_NO: `${process.env.PUBLIC_URL}/sounds/Alert_NO.mp3`,\n    Alert_YES: `${process.env.PUBLIC_URL}/sounds/Alert_YES.mp3`,\n    Bazooka: `${process.env.PUBLIC_URL}/sounds/Bazooka.mp3`,\n    Crossbow: `${process.env.PUBLIC_URL}/sounds/Crossbow.mp3`,\n    Engine_start: `${process.env.PUBLIC_URL}/sounds/Engine_start.mp3`,\n    Engine_LOOP_128: `${process.env.PUBLIC_URL}/sounds/Engine_LOOP_128.mp3`,\n    Engine_NO_1: `${process.env.PUBLIC_URL}/sounds/Engine_NO_1.mp3`,\n    Engine_NO_2: `${process.env.PUBLIC_URL}/sounds/Engine_NO_2.mp3`,\n    Engine_stop: `${process.env.PUBLIC_URL}/sounds/Engine_stop.mp3`,\n    Equip_1: `${process.env.PUBLIC_URL}/sounds/Equip_1.mp3`,\n    Equip_2: `${process.env.PUBLIC_URL}/sounds/Equip_2.mp3`,\n    Equip_3: `${process.env.PUBLIC_URL}/sounds/Equip_3.mp3`,\n    Equip_4: `${process.env.PUBLIC_URL}/sounds/Equip_4.mp3`,\n    Hero_1: `${process.env.PUBLIC_URL}/sounds/Hero_1.mp3`,\n    Hero_2: `${process.env.PUBLIC_URL}/sounds/Hero_2.mp3`,\n    Jump: `${process.env.PUBLIC_URL}/sounds/Jump.mp3`,\n}\n\nexport type SoundName = keyof typeof soundList\n\nexport const play = (name: SoundName, volume?: number) => {\n    const sound = new Audio(soundList[name])\n    if (volume) sound.volume = volume\n    sound.play()\n    // sound.addEventListener('ended', () => {\n    //     sound.play()\n    // })\n}\nexport const playEquip = (volume?: number) => {\n    const list = ['Equip_1', 'Equip_2', 'Equip_3', 'Equip_4']\n    play(list[Math.round(Math.random() * 4)] as SoundName, volume)\n}\n\nconst engineStart = new Audio(soundList['Engine_LOOP_128'])\n\nexport const playEngine = (volume?: number) => {\n    if (volume) engineStart.volume = volume\n    // const playEnd = () => {\n    //     play('Engine_stop', volume)\n    //     engineStart.removeEventListener('ended', playEnd)\n    // }\n    engineStart.play()\n    // engineStart.removeEventListener('ended', playEnd)\n    // engineStart.addEventListener('ended', playEnd)\n}\n","import { Vector2 } from './types'\n\nexport const PLAYER_ID = 'player'\n\nexport const UP: Vector2 = [0, -1]\nexport const RIGHT: Vector2 = [1, 0]\nexport const DOWN: Vector2 = [0, 1]\nexport const LEFT: Vector2 = [-1, 0]\n","import React from 'react'\nimport { playEquip, play } from '../audio/play'\nimport { move, remove, setObjectData, tmpSpawn, win } from '../state/gameReducer'\nimport { ObjectDefinition, ObjectTypes } from '../types/types'\nimport {\n    Cannon,\n    Crossbow,\n    Player,\n    Rock,\n    Rocket,\n    Box,\n    Boom,\n    Fence,\n    Arrow,\n    Button,\n    createTrigger,\n} from './models/Items'\nimport { reverseVector } from '../helpers'\nimport { uniqueId, sample } from 'lodash'\nimport { PLAYER_ID } from '../types/consts'\n\nconst propDebugComponent = (color: string) => ({ instance, children }: any) => {\n    return (\n        <div\n            style={{\n                margin: '20%',\n                width: '60%',\n                height: '60%',\n                borderRadius: instance.type === ObjectTypes.Player ? 100 : 5,\n                backgroundColor: color,\n                color: 'black',\n                opacity: 0.7,\n            }}\n        >\n            <pre style={{ padding: 2, fontSize: 8 }}>{children}</pre>\n        </div>\n    )\n}\n\nexport const propTypeDefinitions: Partial<Record<ObjectTypes, ObjectDefinition>> = {\n    [ObjectTypes.Player]: {\n        name: 'Player',\n        height: () => 2,\n        Component: propDebugComponent('white'),\n        Component3d: Player,\n    },\n\n    [ObjectTypes.BigRock]: {\n        name: 'Big rock',\n        height: () => 0.55,\n        Component: propDebugComponent('gray'),\n        Component3d: Rock,\n    },\n    [ObjectTypes.Box]: {\n        name: 'Box',\n        height: () => 1,\n        push: ({ self, vector }) => [move({ targetId: self.id, vector })],\n        Component: propDebugComponent('brown'),\n        Component3d: Box,\n    },\n\n    [ObjectTypes.Fence]: {\n        name: 'Fence',\n        height: () => 1.5,\n        push: ({ force, self }) => {\n            if (force && force >= 50) return [remove(self.id)]\n            return []\n        },\n        Component: propDebugComponent('brown'),\n        Component3d: Fence,\n    },\n\n    [ObjectTypes.Button]: {\n        name: 'Button',\n        height: () => 2,\n        push: ({ state, self }) => {\n            play('button')\n            if (!self.data.targetId) {\n                console.warn('Missing Button data.targetId')\n                return []\n            }\n            const toggle = !self.data.open\n            return [\n                setObjectData({ targetId: self.id, data: { open: toggle } }),\n                setObjectData({ targetId: self.data.targetId, data: { open: toggle } }),\n            ]\n        },\n        Component: propDebugComponent('blue'),\n        Component3d: Button,\n    },\n\n    [ObjectTypes.WinTrigger]: {\n        name: 'WinTrigger',\n        height: () => 0,\n        enter: ({ who, state, self }) => {\n            if (who.id === PLAYER_ID) {\n                play('Engine_start')\n                return [win()]\n            }\n            return []\n        },\n        Component: propDebugComponent('#ABC123'),\n        Component3d: createTrigger('#ABC123'),\n    },\n\n    [ObjectTypes.Dor]: {\n        name: 'Dor',\n        height: instance => {\n            return instance.data.open ? 0 : 1.5\n        },\n        push: ({ force, self }) => {\n            if (force && force >= 50) return [remove(self.id)]\n            return []\n        },\n        Component: propDebugComponent('purple'),\n        Component3d: Fence,\n    },\n\n    [ObjectTypes.Cannon]: {\n        name: 'Cannon',\n        height: () => 0,\n        equip: ({ who, self }) => {\n            playEquip(0.8)\n            return [setObjectData({ targetId: who.id, data: { hasCannon: true } }), remove(self.id)]\n        },\n        Component: propDebugComponent('red'),\n        Component3d: Cannon,\n    },\n\n    [ObjectTypes.Boom]: {\n        name: 'Boom',\n        height: () => 0,\n        Component: propDebugComponent('yellow'),\n        Component3d: Boom,\n    },\n\n    [ObjectTypes.Crossbow]: {\n        name: 'Crossbow',\n        height: () => 0,\n        equip: ({ who, self }) => {\n            playEquip(0.8)\n            return [\n                setObjectData({ targetId: who.id, data: { hasGrapple: true } }),\n                remove(self.id),\n            ]\n        },\n        Component: propDebugComponent('red'),\n        Component3d: Crossbow,\n    },\n\n    [ObjectTypes.RocketProjectile]: {\n        name: 'RocketProjectile',\n        height: () => 0,\n        projectileLaunch: ({ who }) => {\n            play('Bazooka')\n            return [\n                move(\n                    { targetId: who.id, vector: reverseVector(who.rotation) },\n                    { delay: 250 }, // delay remove from projectileHit\n                ),\n            ]\n        },\n        projectileHit: ({ self, what, who }) => {\n            if (!what) {\n                return [remove(self.id)]\n            }\n\n            play('Alert_YES') // TODO Boom!\n            return [\n                remove(self.id),\n                tmpSpawn({\n                    instance: {\n                        type: ObjectTypes.Boom,\n                        id: uniqueId(),\n                        xy: self.xy,\n                        elevation: self.elevation,\n                        rotation: self.rotation,\n                        aIndex: 0,\n                        zIndex: 20,\n                        data: {},\n                    },\n                }),\n            ]\n        },\n        Component: propDebugComponent('yellow'),\n        Component3d: Rocket,\n    },\n\n    [ObjectTypes.CrossbowProjectile]: {\n        name: 'Projectile',\n        height: () => 0,\n        projectileLaunch: ({ who }) => {\n            play('Crossbow')\n            return [\n                move(\n                    { targetId: who.id, vector: [0, 0] },\n                    { delay: 250 }, // delay remove from projectileHit\n                ),\n            ]\n        },\n        projectileHit: ({ self, what, who }) => {\n            if (what) {\n                play('Alert_YES') // TODO Hit!\n            }\n            return [remove(self.id)]\n        },\n        Component: propDebugComponent('pink'),\n        Component3d: Arrow,\n    },\n}\n","import { ObjectDefinition, ObjectTypes } from '../types/types'\nimport { tileTypeDefinitions } from './tileTypeDefinitions'\nimport { propTypeDefinitions } from './propTypeDefinitions'\n\nexport const objectDefinitions: Partial<Record<ObjectTypes, ObjectDefinition>> = {\n    ...tileTypeDefinitions,\n    ...propTypeDefinitions,\n}\n\nexport const getDefinition = (type: ObjectTypes): ObjectDefinition => {\n    const def = objectDefinitions[type]\n\n    if (!def) throw new Error(`[getDefinition] Definition for ${type} not found`)\n\n    return def\n}\n","import { Action } from 'redux'\nimport { applyVector, asArray, findById, findByXY } from '../../helpers'\nimport { getDefinition } from '../../objects/definitions'\nimport { ActionEvent, ObjectInstance } from '../../types/types'\nimport { GameState, flyEnd } from '../gameReducer'\nimport { ResolverResults } from './types'\n\nexport const flyResolver = (state: GameState, targetId: string): ResolverResults => {\n    let objects = state.objects\n    const actions: Action[] = []\n    const addActions = (a: Action | Action[] = []) => actions.push(...asArray(a))\n    const abortResults = { objects, actions }\n\n    const target = findById(objects, targetId)\n\n    if (!target) {\n        console.warn(`[move] Target ${targetId} not found`)\n        return abortResults\n    }\n\n    const vector = target.rotation\n    let xy = target.xy\n\n    let limit = 15\n\n    while (limit) {\n        limit--\n\n        xy = applyVector(xy, vector)\n        const newXYObjects = findByXY(objects, xy).sort((a, b) => b.aIndex - a.aIndex)\n\n        for (const obj of newXYObjects) {\n            const objDef = getDefinition(obj.type)\n            const event: ActionEvent = { who: target, vector, state, self: obj, force: 100 }\n\n            if (isTooHight(obj, target)) {\n                objects = objects.map(obj => {\n                    if (obj !== target) return obj\n                    return { ...obj, xy }\n                })\n\n                addActions(flyEnd({ targetId, hitTargetId: obj.id }))\n                addActions(objDef.push?.(event))\n                return { objects, actions }\n            }\n        }\n    }\n\n    addActions(flyEnd({ targetId }))\n\n    objects = objects.map(obj => {\n        if (obj !== target) return obj\n        return { ...obj, xy }\n    })\n\n    return { objects, actions }\n}\n\nconst isTooHight = (ontoObj: ObjectInstance, flyer: ObjectInstance) => {\n    const objDef = getDefinition(ontoObj.type)\n    return ontoObj.elevation + objDef.height(ontoObj) > flyer.elevation\n}\n","import { Action } from 'redux'\nimport { FALL_REMOVE_DELAY, FALL_TRIGGER_DELAY, MAX_MOVE_ELEVATION } from '../../config'\nimport { applyVector, asArray, findById, findByXY } from '../../helpers'\nimport { getDefinition } from '../../objects/definitions'\nimport { PLAYER_ID } from '../../types/consts'\nimport { ActionEvent, ObjectInstance, Vector2 } from '../../types/types'\nimport { fall, GameState, lose, remove, updateObject } from '../gameReducer'\nimport { ResolverResults } from './types'\n\nexport const moveResolver = (\n    state: GameState,\n    targetId: string,\n    vector: Vector2,\n): ResolverResults => {\n    let objects = state.objects\n    const actions: Action[] = []\n    const addActions = (a: Action | Action[] = []) => actions.push(...asArray(a))\n\n    const target = findById(objects, targetId)\n\n    if (!target) {\n        console.warn(`[move] Target ${targetId} not found`)\n        return { objects, actions }\n    }\n\n    const newXY = applyVector(target.xy, vector)\n    const newXYObjects = findByXY(objects, newXY).sort((a, b) => b.aIndex - a.aIndex)\n\n    // Nothing there, fall and die\n    if (!newXYObjects.length) {\n        addActions([\n            updateObject({ targetId, objectValues: { xy: newXY } }, { delay: FALL_TRIGGER_DELAY }),\n            fall({ targetId }, { delay: FALL_REMOVE_DELAY }),\n            targetId === PLAYER_ID ? lose() : remove(targetId),\n        ])\n        return { objects, actions }\n    }\n\n    // Can enter to this region?\n    for (const obj of newXYObjects) {\n        const objDef = getDefinition(obj.type)\n        const event: ActionEvent = { who: target, vector, state, self: obj }\n\n        if (isTooHight(obj, target)) {\n            addActions(objDef.push?.(event))\n            return { objects, actions }\n        }\n    }\n\n    // Move target to new location\n    objects = objects.map(obj => {\n        if (obj !== target) return obj\n        return { ...obj, xy: newXY, elevation: maxElevation(newXYObjects) }\n    })\n\n    // Post enter events\n    for (const obj of newXYObjects) {\n        const objDef = getDefinition(obj.type)\n        const event: ActionEvent = { who: target, vector, state, self: obj }\n        addActions(objDef.enter?.(event))\n    }\n\n    return { objects, actions }\n}\n\nconst maxElevation = (objects: ObjectInstance[]): number =>\n    Math.max(\n        ...objects.map(obj => {\n            const objDef = getDefinition(obj.type)\n            return objDef.height(obj) + obj.elevation\n        }),\n    )\n\nconst isTooHight = (ontoObj: ObjectInstance, who: ObjectInstance) => {\n    const objDef = getDefinition(ontoObj.type)\n    return ontoObj.elevation + objDef.height(ontoObj) - who.elevation > MAX_MOVE_ELEVATION\n}\n","import { uniqueId } from 'lodash'\nimport { Action } from 'redux'\nimport {\n    GRAPPLE_ELEVATION,\n    PROJECTILE_ELEVATION,\n    GRAPPLE_MOVE_DELAY,\n    GRAPPLE_RANGE,\n} from '../../config'\nimport { applyVector, asArray, findById, findByXY, vectorDiff } from '../../helpers'\nimport { getDefinition } from '../../objects/definitions'\nimport { ObjectInstance, ObjectTypes, Vector2 } from '../../types/types'\nimport { GameState, move, tmpSpawn, updateObject } from '../gameReducer'\nimport { ResolverResults } from './types'\n\nexport const grappleResolver = (state: GameState, targetId: string): ResolverResults => {\n    let objects = state.objects\n    const actions: Action[] = []\n    const addActions = (a: Action | Action[] = []) => actions.push(...asArray(a))\n    const abortResults = { objects, actions }\n\n    const target = findById(objects, targetId)\n\n    if (!target) {\n        console.warn(`[grappleResolver] Target ${targetId} not found`)\n        return abortResults\n    }\n\n    const projectileInstance: ObjectInstance = {\n        type: ObjectTypes.CrossbowProjectile,\n        id: uniqueId(),\n        xy: target.xy,\n        rotation: target.rotation,\n        elevation: target.elevation + PROJECTILE_ELEVATION,\n        aIndex: 100,\n        zIndex: 10,\n        data: {},\n    }\n\n    const vector = target.rotation\n    let xy = target.xy\n\n    let limit = GRAPPLE_RANGE\n\n    while (limit) {\n        limit--\n\n        const prevXY = xy\n        xy = applyVector(xy, vector)\n        const newXYObjects = findByXY(objects, xy).sort((a, b) => b.aIndex - a.aIndex)\n\n        for (const obj of newXYObjects) {\n            if (isTooHight(obj, target)) {\n                addActions(tmpSpawn({ instance: projectileInstance }))\n                addActions(\n                    updateObject(\n                        { targetId: projectileInstance.id, objectValues: { xy } },\n                        { delay: GRAPPLE_MOVE_DELAY },\n                    ),\n                )\n                addActions(\n                    move({\n                        targetId,\n                        vector: vectorDiff(target.xy, prevXY),\n                    }),\n                )\n\n                return { objects, actions }\n            }\n        }\n    }\n\n    return abortResults\n}\n\nconst isTooHight = (ontoObj: ObjectInstance, flyer: ObjectInstance) => {\n    const objDef = getDefinition(ontoObj.type)\n    return ontoObj.elevation + objDef.height(ontoObj) > flyer.elevation + GRAPPLE_ELEVATION\n}\n","import { uniqueId } from 'lodash'\nimport { Action } from 'redux'\nimport actionCreatorFactory from 'typescript-fsa'\nimport { reducerWithInitialState } from 'typescript-fsa-reducers'\nimport { PROJECTILE_ELEVATION, FALL_ELEVATION } from '../config'\nimport { arrMerge, findById, findByXY } from '../helpers'\nimport { createMap } from '../mocks/mapMock'\nimport { getDefinition } from '../objects/definitions'\nimport {\n    ActionEvent,\n    ObjectInstance,\n    ObjectInstanceData,\n    ObjectTypes,\n    Vector2,\n    XY,\n    MapData,\n} from '../types/types'\nimport { flyResolver } from './resolvers/flyResolver'\nimport { moveResolver } from './resolvers/moveResolver'\nimport { rotateResolver } from './resolvers/rotateResolver'\nimport { ResolverResults } from './resolvers/types'\nimport { grappleResolver } from './resolvers/grappleResolver'\n\nexport interface GameState {\n    queueStared: boolean\n    queue: Action[]\n    mapId: string | null\n    mapName: string | null\n    objects: ObjectInstance[]\n    cleanObjectsState: ObjectInstance[]\n}\n\nexport interface GameStateAware {\n    game: GameState\n}\n\n// const mockObjects = createMap()\n\nexport const initialState: GameState = {\n    queueStared: false,\n    queue: [],\n    mapId: null,\n    mapName: null,\n    objects: [],\n    cleanObjectsState: [],\n}\n\nconst gameAction = actionCreatorFactory('GG')\nconst queueAction = actionCreatorFactory('QUEUE')\n\nexport const loadMap = gameAction<MapData>('LOAD_MAP')\nexport const reset = gameAction('RESET')\nexport const win = gameAction('WIN')\nexport const lose = gameAction('LOSE')\n\nexport const enqueue = queueAction<Action | Action[]>('ENQUEUE')\nexport const tryNextAction = queueAction('TRY_NEXT_ACTION')\nexport const nextAction = queueAction<Action>('NEXT_ACTION')\nexport const queueEnd = queueAction('QUEUE_END')\n\nexport const move = gameAction<{ targetId: string; vector: Vector2 }>('MOVE')\nexport const rotate = gameAction<{ targetId: string; rotation: Vector2 }>('ROTATE')\nexport const equip = gameAction<{ targetId: string }>('EQUIP')\nexport const fall = gameAction<{ targetId: string }>('FALL')\n\nexport const projectile = gameAction<{ instance: ObjectInstance; byId: string }>('PROJECTILE')\nexport const fly = gameAction<{ targetId: string }>('FLY')\nexport const flyEnd = gameAction<{ targetId: string; hitTargetId?: string }>('FLY_END')\nexport const grapple = gameAction<{ targetId: string }>('GRAPPLE')\n\nexport const updateObject = gameAction<{\n    targetId: string\n    objectValues: Partial<ObjectInstance>\n}>('UPDATE_OBJECT')\nexport const setObjectData = gameAction<{\n    targetId: string\n    data: Partial<ObjectInstanceData>\n}>('SET_OBJECT_DATA')\nexport const remove = gameAction<string>('REMOVE')\nexport const tmpSpawn = gameAction<{ instance: ObjectInstance }>('TMP_SPAWN')\n\nexport const gameReducer = reducerWithInitialState(initialState)\n    /*\n     * Loading\n     */\n    .case(\n        loadMap,\n        (state, { id, name, objects }): GameState => ({\n            ...initialState,\n            mapId: id,\n            mapName: name,\n            objects,\n            cleanObjectsState: objects,\n        }),\n    )\n    .cases(\n        [reset, lose],\n        (state): GameState => ({\n            ...state,\n            queue: [],\n            queueStared: false,\n            objects: state.cleanObjectsState,\n            cleanObjectsState: state.cleanObjectsState,\n        }),\n    )\n    .case(\n        win,\n        (state): GameState => ({\n            ...initialState,\n        }),\n    )\n\n    /*\n     * Queue\n     */\n    .case(\n        enqueue,\n        (state, action): GameState => ({\n            ...state,\n            queue: arrMerge(state.queue, action),\n        }),\n    )\n    .case(\n        nextAction,\n        (state, action): GameState => ({\n            ...state,\n            queueStared: true,\n            queue: state.queue.filter(a => a !== action),\n        }),\n    )\n    .case(queueEnd, (state): GameState => ({ ...state, queueStared: false }))\n\n    /*\n     * User actions\n     */\n    .case(\n        move,\n        (state, { targetId, vector }): GameState => {\n            const { actions, objects } = moveResolver(state, targetId, vector)\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n    .case(\n        rotate,\n        (state, { targetId, rotation }): GameState => {\n            const { actions, objects } = rotateResolver(state, targetId, rotation)\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n    .case(\n        equip,\n        (state, { targetId }): GameState => {\n            const { actions, objects } = equipResolver(state, targetId)\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n\n    /*\n     * Projectiles\n     */\n    .case(\n        projectile,\n        (state, { instance, byId }): GameState => {\n            const objDef = getDefinition(instance.type)\n            const objects = [...state.objects, instance]\n\n            const who = findById(state.objects, byId)!\n            const event: ActionEvent = { who, vector: instance.rotation, state, self: instance }\n\n            const launchActions = objDef.projectileLaunch?.(event) || []\n            const actions = [fly({ targetId: instance.id }), ...launchActions]\n\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n    .case(\n        fly,\n        (state, { targetId }): GameState => {\n            const { actions, objects } = flyResolver(state, targetId)\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n    .case(\n        flyEnd,\n        (state, { targetId, hitTargetId }): GameState => {\n            const obj = findById(state.objects, targetId)\n            const what = hitTargetId ? findById(state.objects, hitTargetId) : undefined\n\n            const actions: Action[] = []\n            if (obj) {\n                const objDef = getDefinition(obj.type)\n                const event: ActionEvent = {\n                    who: null as any, // TODO,\n                    what,\n                    vector: obj.rotation,\n                    state,\n                    self: obj,\n                }\n                const hitActions = objDef.projectileHit?.(event) || []\n                actions.push(...hitActions)\n            }\n            return { ...state, queue: arrMerge(state.queue, actions) }\n        },\n    )\n\n    /*\n     * Grapple\n     */\n    .case(\n        grapple,\n        (state, { targetId }): GameState => {\n            const { actions, objects } = grappleResolver(state, targetId)\n            return {\n                ...state,\n                objects,\n                queue: arrMerge(state.queue, actions),\n            }\n        },\n    )\n\n    /*\n     * Edit and internal actions\n     */\n    .case(\n        setObjectData,\n        (state, { targetId, data }): GameState => {\n            const { actions, objects } = setObjectDataResolver(state, targetId, data)\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n    .case(\n        updateObject,\n        (state, { targetId, objectValues }): GameState => {\n            return {\n                ...state,\n                objects: state.objects.map(obj =>\n                    obj.id === targetId ? { ...obj, ...objectValues } : obj,\n                ),\n            }\n        },\n    )\n    .case(\n        fall,\n        (state, { targetId }): GameState => {\n            return {\n                ...state,\n                objects: state.objects.map(obj =>\n                    obj.id === targetId ? { ...obj, elevation: FALL_ELEVATION } : obj,\n                ),\n            }\n        },\n    )\n    .case(\n        remove,\n        (state, targetId): GameState => ({\n            ...state,\n            objects: state.objects.filter(obj => obj.id !== targetId),\n        }),\n    )\n    .case(\n        tmpSpawn,\n        (state, { instance }): GameState => ({\n            ...state,\n            objects: [...state.objects, instance],\n        }),\n    )\n\nexport const equipResolver = (state: GameState, targetId: string): ResolverResults => {\n    const actions: Action[] = []\n    const target = findById(state.objects, targetId)\n    if (!target) return { objects: state.objects, actions: [] }\n\n    const myObjects = findByXY(state.objects, target.xy).sort((a, b) => b.aIndex - a.aIndex)\n\n    for (const obj of myObjects) {\n        const objDef = getDefinition(obj.type)\n        const event: ActionEvent = { who: target, vector: [0, 0], state, self: obj }\n        actions.push(...(objDef.equip?.(event) || []))\n    }\n\n    return {\n        actions,\n        objects: state.objects,\n    }\n}\n\nexport const setObjectDataResolver = (\n    { objects }: GameState,\n    targetId: string,\n    data: Partial<ObjectInstanceData>,\n): ResolverResults => {\n    const target = findById(objects, targetId)\n\n    return {\n        objects: objects.map(obj => {\n            if (obj !== target) return obj\n            return { ...obj, data: { ...obj.data, ...data } }\n        }),\n        actions: [],\n    }\n}\n","import { findById } from '../../helpers'\nimport { Vector2 } from '../../types/types'\nimport { ResolverResults } from './types'\nimport { GameState } from '../gameReducer'\n\nexport const rotateResolver = (\n    { objects }: GameState,\n    targetId: string,\n    rotation: Vector2,\n): ResolverResults => {\n    const target = findById(objects, targetId)\n\n    return {\n        objects: objects.map(obj => {\n            if (obj !== target) return obj\n            return { ...obj, rotation }\n        }),\n        actions: [],\n    }\n}\n","import { first } from 'lodash'\nimport { Action } from 'redux'\nimport { combineEpics, StateObservable } from 'redux-observable'\nimport { concat, Observable, of } from 'rxjs'\nimport { delay, filter, flatMap, map, mapTo } from 'rxjs/operators'\nimport { DEFAULT_ACTION_DELAY } from '../config'\nimport {\n    enqueue,\n    GameStateAware,\n    nextAction,\n    queueEnd,\n    remove,\n    tmpSpawn,\n    tryNextAction,\n} from './gameReducer'\n\nconst enqueueEpic = (\n    actions$: Observable<Action>,\n    state$: StateObservable<GameStateAware>,\n): Observable<Action> =>\n    actions$.pipe(\n        filter(enqueue.match),\n        filter(() => !state$.value.game.queueStared),\n        mapTo(tryNextAction()),\n    )\n\nconst tryNextEpic = (\n    actions$: Observable<Action>,\n    state$: StateObservable<GameStateAware>,\n): Observable<Action> =>\n    actions$.pipe(\n        filter(tryNextAction.match),\n        map(() => first(state$.value.game.queue)),\n        map(action => (action ? nextAction(action) : queueEnd())),\n    )\n\nconst nextActionEpic = (\n    actions$: Observable<Action>,\n    state$: StateObservable<GameStateAware>,\n): Observable<Action> =>\n    actions$.pipe(\n        filter(nextAction.match),\n        flatMap(action => {\n            const newActionDelay = (action.payload as any).meta?.delay || DEFAULT_ACTION_DELAY\n            return concat(of(action.payload), of(tryNextAction()).pipe(delay(newActionDelay)))\n        }),\n    )\n\nconst tmpSpawnEpic = (\n    actions$: Observable<Action>,\n    state$: StateObservable<GameStateAware>,\n): Observable<Action> =>\n    actions$.pipe(\n        filter(tmpSpawn.match),\n        delay(600),\n        map(action => remove(action.payload.instance.id)),\n    )\n\nexport const gameEpics = combineEpics(enqueueEpic, tryNextEpic, nextActionEpic, tmpSpawnEpic)\n","import { Action } from 'redux'\nimport { combineEpics } from 'redux-observable'\nimport { Observable } from 'rxjs'\nimport { filter, ignoreElements, tap } from 'rxjs/operators'\nimport { play, playEngine } from '../audio/play'\nimport { equip, move, lose, grapple } from './gameReducer'\nimport { PLAYER_ID } from '../types/consts'\n\nconst moveSoundEpic = (actions$: Observable<Action>): Observable<Action> =>\n    actions$.pipe(\n        filter(move.match),\n        filter(action => action.payload.targetId === PLAYER_ID),\n        tap(() => playEngine(0.1)),\n        ignoreElements(),\n    )\n\nconst equipSoundEpic = (actions$: Observable<Action>): Observable<Action> =>\n    actions$.pipe(\n        filter(equip.match),\n        tap(target => play('Hero_2', 0.7)),\n        ignoreElements(),\n    )\n\nconst loseSoundEpic = (actions$: Observable<Action>): Observable<Action> =>\n    actions$.pipe(\n        filter(lose.match),\n        tap(target => play('Engine_NO_2', 0.7)),\n        ignoreElements(),\n    )\n\nconst grappleSoundEpic = (actions$: Observable<Action>): Observable<Action> =>\n    actions$.pipe(\n        filter(grapple.match),\n        tap(target => play('Crossbow', 0.7)),\n        ignoreElements(),\n    )\n\nexport const soundEpics = combineEpics(\n    moveSoundEpic,\n    equipSoundEpic,\n    loseSoundEpic,\n    grappleSoundEpic,\n)\n","import { applyMiddleware, combineReducers, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { combineEpics, createEpicMiddleware } from 'redux-observable'\nimport { gameEpics } from './gameEpics'\nimport { gameReducer } from './gameReducer'\nimport { soundEpics } from './soundEpics'\n\nconst epicMiddleware = createEpicMiddleware()\n\nconst composeEnhancers = composeWithDevTools({\n    name: 'App',\n})\n\nconst rootReducer = combineReducers({\n    game: gameReducer,\n})\n\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(epicMiddleware)))\n\nepicMiddleware.run(combineEpics(soundEpics, gameEpics))\n","import { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { GameStateAware, updateObject } from '../state/gameReducer'\nimport { ObjectInstance } from '../types/types'\n\nexport const useEditor = () => {\n    const state = useSelector((state: GameStateAware) => state.game)\n    const [editMode, setEditMode] = useState(false)\n    const dispatch = useDispatch()\n\n    const toggleEditMode = () => {\n        setEditMode(!editMode)\n    }\n\n    const edit = (targetId: string, objectValues: Partial<ObjectInstance>) => {\n        dispatch(updateObject({ targetId, objectValues }))\n    }\n\n    const copyMap = () => {\n        const serializedMap = JSON.stringify(state.objects)\n\n        navigator.clipboard.writeText(serializedMap).then(() => {\n            console.log('Copied to clipboard')\n        }, console.error)\n    }\n\n    return { edit, toggleEditMode, editMode, copyMap }\n}\n","import { useEffect } from 'react'\n\nexport const useKeyboardEvent = (key: string, callback: Function) => {\n    useEffect(() => {\n        const handler = (event: KeyboardEvent) => {\n            if (event.key === key) callback()\n        }\n\n        window.addEventListener('keydown', handler)\n\n        return () => window.removeEventListener('keydown', handler)\n    })\n}\n","import { isEmpty } from 'lodash'\nimport React, { useState } from 'react'\nimport { findById } from '../helpers'\nimport { useEditor } from '../hooks/useEditor'\nimport { getDefinition, objectDefinitions } from '../objects/definitions'\nimport { ObjectInstance, ObjectTypes } from '../types/types'\n\ninterface DebugViewProps {\n    objects: ObjectInstance[]\n}\n\nconst size = 60\n\nexport const DebugView = ({ objects }: DebugViewProps) => {\n    const [editId, setEditId] = useState<string>()\n    const { edit, copyMap } = useEditor()\n    const obj = editId && findById(objects, editId)\n    const update = (value: Partial<ObjectInstance>) => {\n        if (obj) edit(obj.id, value)\n    }\n\n    return (\n        <div\n            style={{\n                position: 'absolute',\n                zIndex: 100,\n                top: 0,\n                right: 0,\n                width: size * 8,\n                opacity: 0.8,\n            }}\n        >\n            <button onClick={copyMap}>Copy map</button>\n            {obj && (\n                <>\n                    <input\n                        type=\"range\"\n                        min={-1}\n                        max={5}\n                        step={0.01}\n                        value={obj.elevation}\n                        onChange={event => update({ elevation: parseInt(event.target.value, 10) })}\n                    />\n                    <select\n                        value={obj.type}\n                        onChange={event => update({ type: event.target.value as ObjectTypes })}\n                    >\n                        {Object.keys(objectDefinitions).map(item => (\n                            <option>{item}</option>\n                        ))}\n                    </select>\n                </>\n            )}\n            <div style={{ position: 'relative' }}>\n                {objects.map(obj => {\n                    const { type, id, xy, rotation, elevation, zIndex, data } = obj\n                    const { Component } = getDefinition(type)\n                    return (\n                        <div\n                            key={id}\n                            style={{\n                                position: 'absolute',\n                                left: xy[0] * size,\n                                top: xy[1] * size,\n                                width: size,\n                                height: size,\n                                zIndex,\n                            }}\n                            onClick={() => setEditId(id)}\n                        >\n                            <Component instance={obj}>\n                                {id} - {type} <br />\n                                {isEmpty(data) ? '' : JSON.stringify(data, null, 1)}\n                            </Component>\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n\ninterface LabelProps {\n    text: string\n    bottom?: boolean\n}\n\nexport const Label = ({ text, bottom }: LabelProps) => (\n    <div\n        style={{\n            position: 'absolute',\n            left: 0,\n            top: bottom ? '80%' : 0,\n            fontSize: 10,\n            color: 'black',\n        }}\n    >\n        {text}\n    </div>\n)\n","import React, { useEffect } from 'react'\nimport { Color } from 'three'\nimport { useGame } from '../hooks/useGame'\nimport { useThree } from 'react-three-fiber'\nimport { ObjectInstance } from '../types/types'\nimport { CAMERA_OFFSET } from '../config'\n\nconst d = 5\n\ninterface EnvironmentProps {\n    // player: ObjectInstance,\n    mapId: string | null\n    objectsList: ObjectInstance[]\n}\n\nexport const Environment = ({ objectsList, mapId }: EnvironmentProps) => {\n    const { camera, size } = useThree()\n\n    useEffect(() => {\n        const xValues = objectsList.map(obj => obj.xy[0])\n        const yValues = objectsList.map(obj => obj.xy[1])\n\n        const mapCenterX = Math.max(...xValues) / 2\n        const mapCenterY = Math.max(...yValues) / 2\n\n        const offsetX =\n            (CAMERA_OFFSET[0] * Math.max(mapCenterX, mapCenterY) * 7) /\n            (size.width / size.height) /\n            0.9\n        const offsetY =\n            (CAMERA_OFFSET[1] * Math.max(mapCenterX, mapCenterY) * 7) /\n            (size.width / size.height) /\n            0.9\n        const offsetZ =\n            (CAMERA_OFFSET[2] * Math.max(mapCenterX, mapCenterY) * 7) /\n            (size.width / size.height) /\n            0.9\n\n        camera.position.set(mapCenterX + offsetX, offsetZ, mapCenterY + offsetY)\n        camera.lookAt(mapCenterX, 0, mapCenterY)\n    }, [mapId, size])\n\n    return (\n        <group>\n            <ambientLight intensity={2} color={new Color('#dbab93')} />\n            <pointLight\n                position={[6, 7, 8]}\n                intensity={2.2}\n                color={new Color('#c86b6f')}\n                shadow-mapSize-Height=\"1024\"\n                shadow-mapSize-width=\"1024\"\n                shadow-camera-far={30}\n                shadow-bias={-0.01}\n                castShadow\n                shadow-camera-left={-d}\n                shadow-camera-right={d}\n                shadow-camera-top={d}\n                shadow-camera-bottom={-d}\n            />\n            <pointLight position={[1, 3, 5]} intensity={2.2} color={new Color('#3a8dc2')} />\n        </group>\n    )\n}\n","import { ObjectInstance, MapData } from '../types/types'\nimport map0 from './map0.json'\nimport map1 from './map1.json'\nimport map2 from './map2.json'\n\nexport const maps: MapData[] = [\n    { id: 'map-0', name: 'Test 0', objects: map0 as any },\n    { id: 'map-1', name: 'Test 1', objects: map1 as any },\n    { id: 'map-2', name: 'Test 2', objects: map2 as any },\n]\n","import React, { Suspense, useEffect } from 'react'\nimport { Canvas } from 'react-three-fiber'\nimport { PCFSoftShadowMap } from 'three'\nimport { useEditor } from '../hooks/useEditor'\nimport { useGame } from '../hooks/useGame'\nimport { useKeyboardEvent } from '../hooks/useKeyboardEvent'\nimport { getDefinition } from '../objects/definitions'\nimport { DOWN, LEFT, RIGHT, UP } from '../types/consts'\nimport { DebugView } from './DebugView'\nimport { Environment } from './Environment'\nimport map1 from '../data/map1.json'\nimport map2 from '../data/map2.json'\nimport { ObjectInstance } from '../types/types'\nimport { CAMERA_OFFSET } from '../config'\nimport { maps } from '../data/maps'\n\nexport const GameInstance = () => {\n    const { objects, mapId, mapName, move, equip, grapple, fire, loadMap, reset } = useGame()\n    // a ja szukam jakiegos objaect map :(\n    const { editMode, toggleEditMode } = useEditor()\n    useKeyboardEvent('e', toggleEditMode)\n\n    const left = () => move(LEFT)\n    const up = () => move(UP)\n    const down = () => move(DOWN)\n    const right = () => move(RIGHT)\n\n    useKeyboardEvent('r', reset)\n\n    useKeyboardEvent('ArrowLeft', left)\n    useKeyboardEvent('ArrowUp', up)\n    useKeyboardEvent('ArrowDown', down)\n    useKeyboardEvent('ArrowRight', right)\n    useKeyboardEvent('Enter', equip)\n    useKeyboardEvent('Shift', grapple)\n    useKeyboardEvent(' ', fire)\n\n    let mapCenter = [0, 0]\n    objects.forEach(el => {\n        if (el.xy[0] > mapCenter[0]) mapCenter[0] = el.xy[0]\n        if (el.xy[1] > mapCenter[1]) mapCenter[1] = el.xy[0]\n    })\n    mapCenter = mapCenter.map(el => el / 2)\n    // TODO remove when menu will be added\n    useEffect(() => {\n        loadMap(maps[0])\n    }, [])\n\n    return (\n        <>\n            {editMode && <DebugView objects={objects} />}\n            <div\n                style={{\n                    position: 'absolute',\n                    zIndex: 5,\n                    top: 0,\n                    left: 0,\n                }}\n            >\n                {maps.map(map => (\n                    <button key={map.id} onClick={() => loadMap(map)}>\n                        Map {map.name}\n                    </button>\n                ))}\n            </div>\n            {mapName && (\n                <div\n                    style={{\n                        position: 'absolute',\n                        zIndex: 5,\n                        top: 0,\n                        right: 10,\n                    }}\n                >\n                    <h1>Map: {mapName}</h1>\n                </div>\n            )}\n            <div\n                style={{\n                    position: 'absolute',\n                    zIndex: 5,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    textAlign: 'center',\n                }}\n            >\n                <button onClick={left}>\n                    <strong>←</strong>\n                </button>\n                <button onClick={up}>\n                    <strong>↑</strong>\n                </button>\n                <button onClick={down}>\n                    <strong>↓</strong>\n                </button>\n                <button onClick={right}>\n                    <strong>→</strong>\n                </button>\n                <button onClick={equip}>\n                    Equip <small>{`[enter]`}</small>\n                </button>\n                <button onClick={grapple}>\n                    Grapple <small>{`[shift]`}</small>\n                </button>\n                <button onClick={fire}>\n                    Fire <small>{'[space]'}</small>\n                </button>\n                <button onClick={reset}>\n                    Restart <small>{`[R]`}</small>\n                </button>\n            </div>\n            {mapId && (\n                <Canvas\n                    // orthographic\n                    camera={{\n                        zoom: 20,\n                    }}\n                    onCreated={scene => {\n                        scene.gl.shadowMap.type = PCFSoftShadowMap\n                        scene.gl.shadowMap.enabled = true\n                    }}\n                >\n                    <group>\n                        <Environment objectsList={objects} mapId={mapId} />\n                        <Suspense\n                            fallback={\n                                <mesh>\n                                    <boxBufferGeometry attach=\"geometry\" args={[0.5, 0.5, 0.5]} />\n                                    <meshStandardMaterial attach=\"material\" color=\"red\" />\n                                </mesh>\n                            }\n                        >\n                            {objects.map(obj => {\n                                const { Component3d } = getDefinition(obj.type)\n                                return <Component3d key={obj.id} instance={obj} />\n                            })}\n                        </Suspense>\n                    </group>\n                </Canvas>\n            )}\n        </>\n    )\n}\n","import { isEqual, uniqueId } from 'lodash'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Action } from 'redux'\nimport { play } from '../audio/play'\nimport { PROJECTILE_ELEVATION } from '../config'\nimport { findById } from '../helpers'\nimport {\n    enqueue,\n    equip,\n    GameStateAware,\n    grapple,\n    loadMap,\n    move,\n    projectile,\n    reset,\n    rotate,\n} from '../state/gameReducer'\nimport { PLAYER_ID } from '../types/consts'\nimport { MapData, ObjectInstance, ObjectTypes, Vector2 } from '../types/types'\n\nexport const useGame = () => {\n    const state = useSelector((state: GameStateAware) => state.game)\n    const dispatch = useDispatch()\n    const player = findById(state.objects, PLAYER_ID)!\n\n    if (!player) console.warn(`Player don't exists`)\n\n    const triggerMove = (vector: Vector2) => {\n        if (state.queueStared) return\n\n        const actions: Action[] = []\n\n        if (!player) {\n            return console.warn(`Player don't exists`)\n        }\n\n        if (!isEqual(player.rotation, vector)) {\n            actions.push(rotate({ targetId: player.id, rotation: vector }))\n        } else {\n            actions.push(move({ targetId: player.id, vector }))\n        }\n\n        dispatch(enqueue(actions))\n    }\n\n    const triggerEquip = () => {\n        if (state.queueStared) return\n        dispatch(enqueue(equip({ targetId: player.id })))\n    }\n\n    const triggerGrapple = () => {\n        if (state.queueStared) return\n\n        if (!player.data.hasGrapple) {\n            play('Alert_NO')\n            return\n        }\n\n        dispatch(enqueue(grapple({ targetId: player.id })))\n    }\n\n    const triggerFire = () => {\n        if (state.queueStared) return\n        const { id, xy, rotation, elevation, data } = player\n\n        if (!data.hasCannon) {\n            play('Alert_NO')\n            return\n        }\n\n        const instance: ObjectInstance = {\n            type: ObjectTypes.RocketProjectile,\n            id: uniqueId(),\n            xy,\n            rotation,\n            elevation: elevation + PROJECTILE_ELEVATION,\n            aIndex: 100,\n            zIndex: 10,\n            data,\n        }\n\n        dispatch(enqueue(projectile({ byId: id, instance })))\n    }\n\n    const triggerLoadMap = (map: MapData) => {\n        dispatch(loadMap(map))\n    }\n\n    const triggerReset = () => {\n        dispatch(reset())\n    }\n\n    return {\n        ...state,\n        player,\n\n        loadMap: triggerLoadMap,\n        reset: triggerReset,\n\n        move: triggerMove,\n        equip: triggerEquip,\n        fire: triggerFire,\n        grapple: triggerGrapple,\n    }\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { store } from '../state/store'\nimport { GameInstance } from './GameInstance'\n\nexport const App = () => {\n    return (\n        <Provider store={store}>\n            <GameInstance />\n        </Provider>\n    )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './app/App'\nimport './styles/global.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}