{"version":3,"sources":["types/types.ts","config.ts","helpers.ts","objects/models/Items.tsx","objects/tileTypeDefinitions.tsx","audio/play.ts","types/consts.ts","objects/propTypeDefinitions.tsx","objects/definitions.ts","state/resolvers/flyResolver.ts","state/resolvers/moveResolver.ts","state/gameReducer.ts","state/resolvers/rotateResolver.ts","state/gameEpics.ts","state/soundEpics.ts","state/store.ts","hooks/useEditor.ts","hooks/useKeyboardEvent.tsx","app/DebugView.tsx","app/Environment.tsx","data/maps.ts","app/GameInstance.tsx","hooks/useGame.ts","app/App.tsx","index.tsx"],"names":["ObjectTypes","CAMERA_OFFSET","applyVector","x","y","findById","props","id","find","prop","findByXY","objects","xy","filter","tile","x1","y1","x2","y2","samePosition","asArray","item","Array","isArray","arrMerge","a","b","color","Fence","url","Asset","instance","elevation","rotation","castShadow","receiveShadow","elevationFix","anim","useSpring","pos","rot","vectorToThree","scene","useLoader","GLTFLoader","process","clone","children","scale","set","primitive","object","position","AnimatieAsset","data","gltf","gltfanimation","mixer","AnimationMixer","animations","forEach","clip","clipAction","play","useFrame","update","cannonInHeadScene","crossbowInHeadScene","group","visible","gun","AnimateSelfAsset","gltfScene","index","animation","setLoop","LoopOnce","vector","Math","PI","tileDebugComponent","style","width","height","backgroundColor","fontSize","tileTypeDefinitions","Grass","name","Component","Component3d","Ice","enter","who","move","targetId","RockFloor","push","force","self","console","log","soundList","button","music","Alert_NO","Alert_YES","Bazooka","Crossbow","Engine_start","Engine_LOOP_128","Engine_NO_1","Engine_NO_2","Engine_stop","Equip_1","Equip_2","Equip_3","Equip_4","Hero_1","Hero_2","Jump","volume","sound","Audio","playEquip","round","random","engineStart","UP","RIGHT","DOWN","LEFT","propDebugComponent","margin","borderRadius","type","Player","opacity","padding","propTypeDefinitions","BigRock","Box","remove","Button","state","warn","toggle","open","setObjectData","WinTrigger","win","attach","args","Dor","Cannon","equip","Boom","RocketProjectile","projectileLaunch","map","v","delay","projectileHit","what","tmpSpawn","uniqueId","aIndex","zIndex","CrossbowProjectile","objectDefinitions","getDefinition","def","Error","isTooHight","ontoObj","flyer","objDef","maxElevation","max","obj","initialState","queueStared","queue","mapId","mapName","cleanObjectsState","gameAction","actionCreatorFactory","queueAction","loadMap","reset","lose","enqueue","tryNextAction","nextAction","queueEnd","enqueueAfter","rotate","fall","projectile","fly","flyEnd","updateObject","gameReducer","reducerWithInitialState","case","cases","action","actions","addActions","target","newXY","newXYObjects","sort","length","fallObjects","timeout","event","moveResolver","rotateResolver","equipResolver","byId","launchActions","abortResults","limit","hitTargetId","flyResolver","undefined","hitActions","setObjectDataResolver","objectValues","myObjects","gameEpics","combineEpics","actions$","state$","pipe","match","value","game","mapTo","first","flatMap","newActionDelay","payload","meta","concat","of","timer","ignoreElements","soundEpics","tap","epicMiddleware","createEpicMiddleware","composeEnhancers","composeWithDevTools","rootReducer","combineReducers","store","createStore","applyMiddleware","run","useEditor","useSelector","useState","editMode","setEditMode","dispatch","useDispatch","edit","toggleEditMode","copyMap","serializedMap","JSON","stringify","navigator","clipboard","writeText","then","error","useKeyboardEvent","key","callback","useEffect","handler","window","addEventListener","removeEventListener","DebugView","editId","setEditId","top","right","size","onClick","min","step","onChange","parseInt","Object","keys","left","isEmpty","Environment","objectsList","useThree","camera","xValues","yValues","mapCenterX","mapCenterY","offsetX","offsetY","offsetZ","lookAt","intensity","Color","shadow-mapSize-Height","shadow-mapSize-width","shadow-camera-far","shadow-bias","shadow-camera-left","shadow-camera-right","shadow-camera-top","shadow-camera-bottom","maps","GameInstance","player","isEqual","fire","useGame","up","down","mapCenter","el","bottom","textAlign","zoom","onCreated","gl","shadowMap","PCFSoftShadowMap","enabled","fallback","App","ReactDOM","render","document","getElementById"],"mappings":"i3iBAOYA,E,iKCPCC,EAAgB,EAAE,EAAG,EAAG,G,+CCIxBC,EAAc,SAAC,EAAD,0BAAEC,EAAF,KAAKC,EAAL,8BAAuC,CAACD,EAAxC,KAAgDC,EAAhD,OAIdC,EAAW,SAA2BC,EAAYC,GAC3D,OAAOD,EAAME,MAAK,SAAAC,GAAI,OAAIA,EAAKF,KAAOA,MAG7BG,EAAW,SAAuBC,EAAcC,GACzD,OAAOD,EAAQE,QAAO,SAAAC,GAAI,OAPF,SAAC,EAAD,0BAAEC,EAAF,KAAMC,EAAN,wBAAgBC,EAAhB,KAAoBC,EAApB,YAAgCH,IAAOE,GAAMD,IAAOE,EAO9CC,CAAaL,EAAKF,GAAIA,OAG3CQ,EAAU,SAAIC,GAAJ,OAA4BC,MAAMC,QAAQF,GAAQA,EAAO,CAACA,IACpEG,EAAW,SAAIC,GAAJ,IAAYC,EAAZ,uDAAyB,GAAzB,4BAAyCD,GAAzC,YAA+CL,EAAQM,M,iBFVnE1B,K,gBAAAA,E,wBAAAA,E,cAAAA,E,sBAAAA,E,UAAAA,E,kBAAAA,E,cAAAA,E,gBAAAA,E,UAAAA,E,UAAAA,E,oBAAAA,E,gBAAAA,E,YAAAA,E,wCAAAA,E,qCAAAA,M,aG2EkB2B,E,+BA7DjBC,EAAQ,SAACtB,GAClB,OAAO,kBAAC,EAAD,iBAAWA,EAAX,CAAkBuB,IAAI,iBA+E3BC,EAAQ,SAAC,GAMI,IALfD,EAKc,EALdA,IAKc,IAJdE,SAAYnB,EAIE,EAJFA,GAAIoB,EAIF,EAJEA,UAAWC,EAIb,EAJaA,SAIb,IAHdC,kBAGc,aAFdC,qBAEc,aADdC,oBACc,MADC,EACD,EACRC,EAAOC,YAAU,CACnBC,IAAK,CAAC3B,EAAG,GAAIoB,EAAYI,EAAcxB,EAAG,IAC1C4B,IAAK,CAAC,EAAGC,EAAcR,GAAW,KAGhCS,EADOC,YAAUC,IAAD,UAAgBC,oBAAhB,mBAAiDhB,IACpDa,MAAMI,QAIzB,OAHIZ,IAAYQ,EAAMK,SAAS,GAAGb,YAAa,GAC3CC,IAAeO,EAAMK,SAAS,GAAGZ,eAAgB,GACrDO,EAAMM,MAAMC,IAAI,GAAK,GAAK,IACnB,kBAAC,IAASC,UAAV,CAAoBC,OAAQT,EAAOU,SAAUf,EAAKE,IAAKN,SAAUI,EAAKG,OAG3Ea,EAAgB,SAAC,GAKJ,IAJfxB,EAIc,EAJdA,IAIc,IAHdE,SAAYnB,EAGE,EAHFA,GAAIoB,EAGF,EAHEA,UAAWC,EAGb,EAHaA,SAAUqB,EAGvB,EAHuBA,KAGvB,IAFdpB,kBAEc,aADdC,qBACc,SACRE,EAAOC,YAAU,CACnBC,IAAK,CAAC3B,EAAG,GAAIoB,EAAWpB,EAAG,IAC3B4B,IAAK,CAAC,EAAGC,EAAcR,GAAW,KAGhCsB,EAAOZ,YAAUC,IAAD,UAAgBC,oBAAhB,mBAAiDhB,IACvE0B,EAAKb,MAAMM,MAAMC,IAAI,GAAK,GAAK,IAC3Bf,IAAYqB,EAAKb,MAAMK,SAAS,GAAGb,YAAa,GAChDC,IAAeoB,EAAKb,MAAMK,SAAS,GAAGZ,eAAgB,GAI1D,IAAMqB,EAAgBb,YAClBC,IAD2B,UAExBC,oBAFwB,mCAIzBY,EAAQ,IAAIC,iBAAeF,EAAcd,OAC/Cc,EAAcG,WAAWC,SAAQ,SAAAC,GAC7BJ,EAAMK,WAAWD,EAAMN,EAAKb,OAAOqB,UAEvCC,aAAS,kBAAMP,EAAMQ,OAAO,QAE5B,IAIMC,EAJevB,YACjBC,IAD0B,UAEvBC,oBAFuB,oCAISH,MAAMI,QAGvCqB,EADiBxB,YAAUC,IAAD,UAAgBC,oBAAhB,uBACWH,MAAMI,QAEjD,OACI,kBAAC,IAASsB,MAAV,CAAgBhB,SAAUf,EAAKE,IAAKN,SAAUI,EAAKG,KAC/C,+BAAWW,OAAQI,EAAKb,OACpB,+BAAWS,OAAQe,EAAmBG,QAAqB,UAAZf,EAAKgB,MACpD,+BAAWnB,OAAQgB,EAAqBE,QAAqB,YAAZf,EAAKgB,SAMhEC,EAAmB,SAAC,GAKP,IAJf1C,EAIc,EAJdA,IAIc,IAHdE,SAAYnB,EAGE,EAHFA,GAAIoB,EAGF,EAHEA,UAAWC,EAGb,EAHaA,SAGb,KAHuBqB,KAGvB,EAFdpB,mBAEc,aADdC,qBACc,SACRE,EAAOC,YAAU,CACnBC,IAAK,CAAC3B,EAAG,GAAIoB,EAAWpB,EAAG,IAC3B4B,IAAK,CAAC,EAAGC,EAAcR,GAAW,KAEhCsB,EAAOZ,YAAUC,IAAD,UAAgBC,oBAAhB,mBAAiDhB,IAEjE2C,EAAYjB,EAAKb,MAAMI,QAEzBZ,IAAYsC,EAAUzB,SAAS,GAAGb,YAAa,GAC/CC,IAAeqC,EAAUzB,SAAS,GAAGZ,eAAgB,GAEzDqC,EAAUxB,MAAMC,IAAI,GAAK,GAAK,IAE9B,IAAMQ,EAAQ,IAAIC,iBAAec,GAYjC,OAVAjB,EAAKI,WAAWC,SAAQ,SAACC,EAAMY,GAC3B,IAAMC,EAAYjB,EAAMK,WAAWD,EAAMW,EAAUzB,SAAS0B,IAC5DC,EAAUC,QAAQC,WAAU,GAC5BF,EAAUX,UAGdC,aAAS,WACLP,EAAMQ,OAAO,QAIb,kBAAC,IAASG,MAAV,CAAgBhB,SAAUf,EAAKE,IAAKN,SAAUI,EAAKG,KAC/C,+BAAWW,OAAQqB,MAKzB/B,EAAgB,SAACoC,GACnB,OAAkB,IAAdA,EAAO,IAA0B,IAAdA,EAAO,GAAiBC,KAAKC,GAAK,EACvC,IAAdF,EAAO,KAA2B,IAAfA,EAAO,GAAmBC,KAAKC,GAAK,EAAK,GAC7C,IAAfF,EAAO,IAA2B,IAAdA,EAAO,GAAkBC,KAAKC,GAAK,EAAK,EAC9C,IAAdF,EAAO,IAA0B,IAAdA,EAAO,GAAkBC,KAAKC,GAAK,EAAK,EAExD,GC3MLC,EAAqB,SAACrD,GAAD,OAAmB,SAACrB,GAAD,OAC1C,uCACI2E,MAAO,CAAEC,MAAO,OAAQC,OAAQ,OAAQC,gBAAiBzD,EAAO0D,SAAU,IACtE/E,MAICgF,GAAmE,mBAC3EtF,EAAYuF,MAAQ,CACjBC,KAAM,QACNL,OAAQ,kBAAM,GACdM,UAAWT,EAAmB,SAC9BU,YD6Ba,SAACpF,GAClB,OACI,kBAAC,EAAD,iBACQA,EADR,CAEIuB,IAAI,oCACJK,YAAY,EACZC,eAAe,QCxCqD,cAQ3EnC,EAAY2F,IAAM,CACfH,KAAM,MACNL,OAAQ,kBAAM,GACdS,MAAO,gBAAGC,EAAH,EAAGA,IAAKhB,EAAR,EAAQA,OAAR,MAAqB,CAACiB,GAAK,CAAEC,SAAUF,EAAItF,GAAIsE,aACtDY,UAAWT,EAAmB,aAC9BU,YDgCW,SAACpF,GAChB,OACI,kBAAC,EAAD,iBACQA,EADR,CAEIuB,IAAI,kCACJK,YAAY,EACZC,eAAe,QCnDqD,cAgB3EnC,EAAYgG,UAAY,CACrBR,KAAM,aACNL,OAAQ,kBAAM,GACdc,KAAM,YAAqB,EAAlBC,MAAmB,IAAZC,EAAW,EAAXA,KAGZ,OADAC,QAAQC,IAAIF,GACL,IAEXV,UAAWT,EAAmB,QAC9BU,YDKc,SAACpF,GACnB,OAAO,kBAAC,EAAD,iBAAWA,EAAX,CAAkBuB,IAAI,YAAYK,YAAY,EAAMC,eAAe,QC/BE,GCf1EmE,EAAY,CACdC,OAAO,GAAD,OAAK1D,oBAAL,+BACN2D,MAAM,GAAD,OAAK3D,oBAAL,2BACL4D,SAAS,GAAD,OAAK5D,oBAAL,wBACR6D,UAAU,GAAD,OAAK7D,oBAAL,yBACT8D,QAAQ,GAAD,OAAK9D,oBAAL,uBACP+D,SAAS,GAAD,OAAK/D,oBAAL,wBACRgE,aAAa,GAAD,OAAKhE,oBAAL,4BACZiE,gBAAgB,GAAD,OAAKjE,oBAAL,+BACfkE,YAAY,GAAD,OAAKlE,oBAAL,2BACXmE,YAAY,GAAD,OAAKnE,oBAAL,2BACXoE,YAAY,GAAD,OAAKpE,oBAAL,2BACXqE,QAAQ,GAAD,OAAKrE,oBAAL,uBACPsE,QAAQ,GAAD,OAAKtE,oBAAL,uBACPuE,QAAQ,GAAD,OAAKvE,oBAAL,uBACPwE,QAAQ,GAAD,OAAKxE,oBAAL,uBACPyE,OAAO,GAAD,OAAKzE,oBAAL,sBACN0E,OAAO,GAAD,OAAK1E,oBAAL,sBACN2E,KAAK,GAAD,OAAK3E,oBAAL,qBAKKkB,EAAO,SAACyB,EAAiBiC,GAClC,IAAMC,EAAQ,IAAIC,MAAMrB,EAAUd,IAC9BiC,IAAQC,EAAMD,OAASA,GAC3BC,EAAM3D,QAKG6D,EAAY,SAACH,GAEtB1D,EADa,CAAC,UAAW,UAAW,UAAW,WACrCe,KAAK+C,MAAsB,EAAhB/C,KAAKgD,WAA6BL,IAGrDM,GAAc,IAAIJ,MAAMrB,EAAS,iBChC1B0B,GAAc,CAAC,GAAI,GACnBC,GAAiB,CAAC,EAAG,GACrBC,GAAgB,CAAC,EAAG,GACpBC,GAAgB,EAAE,EAAG,GCc5BC,GAAqB,SAACzG,GAAD,OAAmB,YAAkC,IAA/BI,EAA8B,EAA9BA,SAAUgB,EAAoB,EAApBA,SACvD,OACI,yBACIkC,MAAO,CACHoD,OAAQ,MACRnD,MAAO,MACPC,OAAQ,MACRmD,aAAcvG,EAASwG,OAASvI,EAAYwI,OAAS,IAAM,EAC3DpD,gBAAiBzD,EACjBA,MAAO,QACP8G,QAAS,KAGb,yBAAKxD,MAAO,CAAEyD,QAAS,EAAGrD,SAAU,IAAMtC,MAKzC4F,IAAmE,mBAC3E3I,EAAYwI,OAAS,CAClBhD,KAAM,SACNL,OAAQ,kBAAM,GACdM,UAAW2C,GAAmB,SAC9B1C,YJnCc,SAACpF,GACnB,OAAO,kBAAC,EAAD,iBAAmBA,EAAnB,CAA0BuB,IAAI,yBI6BuC,cAQ3E7B,EAAY4I,QAAU,CACnBpD,KAAM,WACNL,OAAQ,iBAAM,KACdM,UAAW2C,GAAmB,QAC9B1C,YJlCY,SAACpF,GACjB,OAAO,kBAAC,EAAD,iBAAWA,EAAX,CAAkBuB,IAAI,mBIqB+C,cAc3E7B,EAAY6I,IAAM,CACfrD,KAAM,MACNL,OAAQ,kBAAM,GACdc,KAAM,gBAAGE,EAAH,EAAGA,KAAMtB,EAAT,EAASA,OAAT,MAAsB,CAACiB,GAAK,CAAEC,SAAUI,EAAK5F,GAAIsE,aACvDY,UAAW2C,GAAmB,SAC9B1C,YJ7CW,SAACpF,GAChB,OAAO,kBAAC,EAAD,iBAAWA,EAAX,CAAkBuB,IAAI,iBIyB+C,cAsB3E7B,EAAY4B,MAAQ,CACjB4D,KAAM,QACNL,OAAQ,kBAAM,KACdc,KAAM,YAAsB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACZ,OAAID,GAASA,GAAS,GAAW,CAAC4C,GAAO3C,EAAK5F,KACvC,IAEXkF,UAAW2C,GAAmB,SAC9B1C,YAAa9D,IA9B2D,cAiC3E5B,EAAY+I,OAAS,CAClBvD,KAAM,SACNL,OAAQ,kBAAM,GACdc,KAAM,YAAqB,EAAlB+C,MAAmB,IAAZ7C,EAAW,EAAXA,KAEZ,GADApC,EAAK,WACAoC,EAAK7C,KAAKyC,SAEX,OADAK,QAAQ6C,KAAK,gCACN,GAEX,IAAMC,GAAU/C,EAAK7C,KAAK6F,KAC1B,MAAO,CACHC,GAAc,CAAErD,SAAUI,EAAK5F,GAAI+C,KAAM,CAAE6F,KAAMD,KACjDE,GAAc,CAAErD,SAAUI,EAAK7C,KAAKyC,SAAUzC,KAAM,CAAE6F,KAAMD,OAGpEzD,UAAW2C,GAAmB,QAC9B1C,YAAa9D,IAjD2D,cAoD3E5B,EAAYqJ,WAAa,CACtB7D,KAAM,aACNL,OAAQ,kBAAM,GACdS,MAAO,YAA2B,IAAxBC,EAAuB,EAAvBA,IAAuB,EAAlBmD,MAAkB,EAAX7C,KAClB,MD7Fa,WC6FTN,EAAItF,IACJwD,EAAK,gBACE,CAACuF,OAEL,IAEX7D,UAAW2C,GAAmB,WAC9B1C,aJpBsB/D,EIoBK,UJpBa,YAAyC,IAAtCI,EAAqC,EAArCA,SACvCnB,EAA4BmB,EAA5BnB,GAAIoB,EAAwBD,EAAxBC,UAAWC,EAAaF,EAAbE,SAEvB,OACI,0BAAMmB,SAAU,CAACxC,EAAG,GAAIoB,EAAWpB,EAAG,IAAKqB,SAAU,CAAC,EAAGQ,EAAcR,GAAW,IAC9E,uCAAmBsH,OAAO,WAAWC,KAAM,CAAC,GAAK,EAAG,MACpD,0CAAsBD,OAAO,WAAW5H,MAAOA,SIjDqB,cAkE3E3B,EAAYyJ,IAAM,CACfjE,KAAM,MACNL,OAAQ,SAAApD,GACJ,OAAOA,EAASuB,KAAK6F,KAAO,EAAI,KAEpClD,KAAM,YAAsB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACZ,OAAID,GAASA,GAAS,GAAW,CAAC4C,GAAO3C,EAAK5F,KACvC,IAEXkF,UAAW2C,GAAmB,UAC9B1C,YAAa9D,IA5E2D,cA+E3E5B,EAAY0J,OAAS,CAClBlE,KAAM,SACNL,OAAQ,kBAAM,GACdwE,MAAO,YAAoB,IAAjB9D,EAAgB,EAAhBA,IAAKM,EAAW,EAAXA,KAEX,OADAyB,EAAU,IACH,CAACwB,GAAc,CAAErD,SAAUF,EAAItF,GAAI+C,KAAM,CAAEgB,IAAK,YAAewE,GAAO3C,EAAK5F,MAEtFkF,UAAW2C,GAAmB,OAC9B1C,YJ7Fc,SAACpF,GACnB,OAAO,kBAAC,EAAD,iBAAWA,EAAX,CAAkBuB,IAAI,0BAA0BO,cAAe,SIKM,cA0F3EpC,EAAY4J,KAAO,CAChBpE,KAAM,OACNL,OAAQ,kBAAM,GACdM,UAAW2C,GAAmB,UAC9B1C,YJxGY,SAACpF,GACjB,OAAO,kBAAC,EAAD,iBAAsBA,EAAtB,CAA6BuB,IAAI,kBISoC,cAiG3E7B,EAAY4G,SAAW,CACpBpB,KAAM,WACNL,OAAQ,kBAAM,GACdwE,MAAO,YAAoB,IAAjB9D,EAAgB,EAAhBA,IAAKM,EAAW,EAAXA,KAEX,OADAyB,EAAU,IACH,CAACwB,GAAc,CAAErD,SAAUF,EAAItF,GAAI+C,KAAM,CAAEgB,IAAK,cAAiBwE,GAAO3C,EAAK5F,MAExFkF,UAAW2C,GAAmB,OAC9B1C,YJvGgB,SAACpF,GACrB,OAAO,kBAAC,EAAD,iBAAWA,EAAX,CAAkBuB,IAAI,aAAaO,cAAe,SIHmB,cA4G3EpC,EAAY6J,iBAAmB,CAC5BrE,KAAM,mBACNL,OAAQ,kBAAM,GACd2E,iBAAkB,YAAc,ILpJVjF,EKoJDgB,EAAU,EAAVA,IAEjB,OADA9B,EAAK,WACE,CACH+B,GACI,CAAEC,SAAUF,EAAItF,GAAIsE,QLxJVA,EKwJgCgB,EAAI5D,SLxJhB4C,EAAOkF,KAAI,SAAAC,GAAC,OAAS,EAALA,OKyJ9C,CAAEC,MAAO,QAIrBC,cAAe,YAA0B,IAAvB/D,EAAsB,EAAtBA,KAAMgE,EAAgB,EAAhBA,KAAgB,EAAVtE,IAC1B,OAAKsE,GAILpG,EAAK,aACE,CACH+E,GAAO3C,EAAK5F,IACZ6J,GAAS,CACLrI,SAAU,CACNwG,KAAMvI,EAAY4J,KAClBrJ,GAAI8J,qBACJzJ,GAAIuF,EAAKvF,GACToB,UAAWmE,EAAKnE,UAChBC,SAAUkE,EAAKlE,SACfqI,OAAQ,EACRC,OAAQ,GACRjH,KAAM,QAfP,CAACwF,GAAO3C,EAAK5F,MAoB5BkF,UAAW2C,GAAmB,UAC9B1C,YJjJc,SAACpF,GACnB,OAAO,kBAAC,EAAD,iBAAWA,EAAX,CAAkBuB,IAAI,oBIC+C,cAkJ3E7B,EAAYwK,mBAAqB,CAC9BhF,KAAM,aACNL,OAAQ,kBAAM,GACd2E,iBAAkB,YAAc,IAAXjE,EAAU,EAAVA,IAEjB,OADA9B,EAAK,YACE,CACH+B,GACI,CAAEC,SAAUF,EAAItF,GAAIsE,OAAQ,CAAC,EAAG,IAChC,CAAEoF,MAAO,QAIrBC,cAAe,YAA0B,IAAvB/D,EAAsB,EAAtBA,KAAMgE,EAAgB,EAAhBA,KAAgB,EAAVtE,IAI1B,OAHIsE,GACApG,EAAK,aAEF,CAAC+E,GAAO3C,EAAK5F,MAExBkF,UAAW2C,GAAmB,QAC9B1C,YJnLa,SAACpF,GAClB,OAAO,kBAAC,EAAD,iBAAWA,EAAX,CAAkBuB,IAAI,mBIa+C,GCnCnE4I,GAAiE,eACvEnF,EADuE,GAEvEqD,IAGM+B,GAAgB,SAACnC,GAC1B,IAAMoC,EAAMF,GAAkBlC,GAE9B,IAAKoC,EAAK,MAAM,IAAIC,MAAJ,yCAA4CrC,EAA5C,eAEhB,OAAOoC,GC4CLE,GAAa,SAACC,EAAyBC,GACzC,IAAMC,EAASN,GAAcI,EAAQvC,MACrC,OAAOuC,EAAQ9I,UAAYgJ,EAAO7F,OAAO2F,GAAWC,EAAM/I,WCcxDiJ,GAAe,SAACtK,GAAD,OACjBmE,KAAKoG,IAAL,MAAApG,KAAI,YACGnE,EAAQoJ,KAAI,SAAAoB,GAEX,OADeT,GAAcS,EAAI5C,MACnBpD,OAAOgG,GAAOA,EAAInJ,gBAItC6I,GAAa,SAACC,EAAyBjF,GACzC,IAAMmF,EAASN,GAAcI,EAAQvC,MACrC,OAAOuC,EAAQ9I,UAAYgJ,EAAO7F,OAAO2F,GAAWjF,EAAI7D,UTnF1B,IUoCrBoJ,GAA0B,CACnCC,aAAa,EACbC,MAAO,GACPC,MAAO,KACPC,QAAS,KACT7K,QAAS,GACT8K,kBAAmB,IAGjBC,GAAaC,IAAqB,MAClCC,GAAcD,IAAqB,SAE5BE,GAAUH,GAAoB,YAC9BI,GAAQJ,GAAW,SACnBpC,GAAMoC,GAAW,OACjBK,GAAOL,GAAW,QAElBM,GAAUJ,GAA+B,WACzCK,GAAgBL,GAAY,mBAC5BM,GAAaN,GAAoB,eACjCO,GAAWP,GAAY,aACvBQ,GAAeR,GAAoD,iBAEnE9F,GAAO4F,GAAkD,QACzDW,GAASX,GAAoD,UAC7D/B,GAAQ+B,GAAiC,SACzCY,GAAOZ,GAAiC,QAExCa,GAAab,GAAuD,cACpEc,GAAMd,GAAiC,OACvCe,GAASf,GAAuD,WAEhEgB,GAAehB,GAGzB,iBACUtC,GAAgBsC,GAG1B,mBACU5C,GAAS4C,GAAmB,UAC5BtB,GAAWsB,GAAyC,aAEpDiB,GAAcC,kCAAwBxB,IAI9CyB,KACGhB,IACA,SAAC7C,EAAD,OAAUzI,EAAV,EAAUA,GAAIiF,EAAd,EAAcA,KAAM7E,EAApB,EAAoBA,QAApB,sBACOyK,GADP,CAEIG,MAAOhL,EACPiL,QAAShG,EACT7E,UACA8K,kBAAmB9K,OAG1BmM,MACG,CAAChB,GAAOC,KACR,SAAC/C,GAAD,sBACOA,EADP,CAEIsC,MAAO,GACPD,aAAa,EACb1K,QAASqI,EAAMyC,kBACfA,kBAAmBzC,EAAMyC,uBAGhCoB,KACGvD,IACA,SAACN,GAAD,sBACOoC,OAOVyB,KACGb,IACA,SAAChD,EAAO+D,GAAR,sBACO/D,EADP,CAEIsC,MAAO9J,EAASwH,EAAMsC,MAAOyB,QAGpCF,KACGX,IACA,SAAClD,EAAO+D,GAAR,sBACO/D,EADP,CAEIqC,aAAa,EACbC,MAAOtC,EAAMsC,MAAMzK,QAAO,SAAAY,GAAC,OAAIA,IAAMsL,UAG5CF,KAAKV,IAAU,SAACnD,GAAD,sBAA4BA,EAA5B,CAAmCqC,aAAa,OAK/DwB,KACG/G,IACA,SAACkD,EAAD,GAA6C,IAAD,ED/HxB,SACxBA,EACAjD,EACAlB,GAEA,IAAIlE,EAAUqI,EAAMrI,QACdqM,EAAoB,GACpBC,EAAa,eAACxL,EAAD,uDAAwB,GAAxB,OAA+BuL,EAAQ/G,KAAR,MAAA+G,EAAO,YAAS5L,EAAQK,MAEpEyL,EAAS7M,EAASM,EAASoF,GAEjC,IAAKmH,EAED,OADA9G,QAAQ6C,KAAR,wBAA8BlD,EAA9B,eACO,CAAEpF,UAASqM,WAGtB,IAAMG,EAAQjN,EAAYgN,EAAOtM,GAAIiE,GAC/BuI,EAAe1M,EAASC,EAASwM,GAAOE,MAAK,SAAC5L,EAAGC,GAAJ,OAAUA,EAAE4I,OAAS7I,EAAE6I,UAG1E,IAAK8C,EAAaE,OAAQ,CACtB,IAAMC,EAAc5M,EAAQoJ,KAAI,SAAAoB,GAC5B,OAAIA,IAAQ+B,EAAe/B,EACpB,eAAKA,EAAZ,CAAiBvK,GAAIuM,OAYzB,OAVAF,EAAW,CACPb,GAAa,CACToB,QT/BkB,ISgClBR,QAAS,CAACV,GAAK,CAAEvG,gBAErBqG,GAAa,CACToB,QTlCiB,ISmCjBR,QAAS,CJvCA,WIuCCjH,EAAyBgG,KAASjD,GAAO/C,QAGpD,CAAEpF,QAAS4M,EAAaP,WA/BjB,oBAmCAI,GAnCA,IAmClB,2BAAgC,CAAC,IAIA,EAJtBjC,EAAqB,QACtBH,EAASN,GAAcS,EAAI5C,MAC3BkF,EAAqB,CAAE5H,IAAKqH,EAAQrI,SAAQmE,QAAO7C,KAAMgF,GAE/D,GAAIN,GAAWM,EAAK+B,GAEhB,OADAD,EAAU,UAACjC,EAAO/E,YAAR,aAAC,OAAA+E,EAAcyC,IAClB,CAAE9M,UAASqM,YAzCR,8BA8ClBrM,EAAUA,EAAQoJ,KAAI,SAAAoB,GAClB,OAAIA,IAAQ+B,EAAe/B,EACpB,eAAKA,EAAZ,CAAiBvK,GAAIuM,EAAOnL,UAAWiJ,GAAamC,QAhDtC,oBAoDAA,GApDA,IAoDlB,2BAAgC,CAAC,IAAD,EAArBjC,EAAqB,QACtBH,EAASN,GAAcS,EAAI5C,MAC3BkF,EAAqB,CAAE5H,IAAKqH,EAAQrI,SAAQmE,QAAO7C,KAAMgF,GAC/D8B,EAAU,UAACjC,EAAOpF,aAAR,aAAC,OAAAoF,EAAeyC,KAvDZ,8BA0DlB,MAAO,CAAE9M,UAASqM,WCkEmBU,CAAa1E,EADF,EAAlCjD,SAAkC,EAAxBlB,QACRmI,EADgC,EAChCA,QAASrM,EADuB,EACvBA,QACjB,OAAO,eAAKqI,EAAZ,CAAmBrI,UAAS2K,MAAO9J,EAASwH,EAAMsC,MAAO0B,QAGhEH,KACGR,IACA,SAACrD,EAAD,GAA+C,IAAD,EC1IxB,SAAC,EAE3BjD,EACA9D,GACmB,IAHjBtB,EAGgB,EAHhBA,QAIIuM,EAAS7M,EAASM,EAASoF,GAEjC,MAAO,CACHpF,QAASA,EAAQoJ,KAAI,SAAAoB,GACjB,OAAIA,IAAQ+B,EAAe/B,EACpB,eAAKA,EAAZ,CAAiBlJ,gBAErB+K,QAAS,ID+HwBW,CAAe3E,EADF,EAApCjD,SAAoC,EAA1B9D,UACR+K,EADkC,EAClCA,QAASrM,EADyB,EACzBA,QACjB,OAAO,eAAKqI,EAAZ,CAAmBrI,UAAS2K,MAAO9J,EAASwH,EAAMsC,MAAO0B,QAGhEH,KACGlD,IACA,SAACX,EAAD,GAAqC,IAA3BjD,EAA0B,EAA1BA,SAA0B,EACH6H,GAAc5E,EAAOjD,GAA1CiH,EADwB,EACxBA,QAASrM,EADe,EACfA,QACjB,OAAO,eAAKqI,EAAZ,CAAmBrI,UAAS2K,MAAO9J,EAASwH,EAAMsC,MAAO0B,QAOhEH,KACGN,IACA,SAACvD,EAAD,GAA2C,IAAD,EAAhCjH,EAAgC,EAAhCA,SAAU8L,EAAsB,EAAtBA,KACV7C,EAASN,GAAc3I,EAASwG,MAChC5H,EAAO,sBAAOqI,EAAMrI,SAAb,CAAsBoB,IAG7B0L,EAAqB,CAAE5H,IADjBxF,EAAS2I,EAAMrI,QAASkN,GACFhJ,OAAQ9C,EAASE,SAAU+G,QAAO7C,KAAMpE,GAEpE+L,GAAgB,UAAA9C,EAAOlB,wBAAP,oBAAAkB,EAA0ByC,KAAU,GACpDT,EAAO,CAAIR,GAAI,CAAEzG,SAAUhE,EAASxB,MAA7B,mBAAuCuN,IAEpD,OAAO,eAAK9E,EAAZ,CAAmBrI,UAAS2K,MAAO9J,EAASwH,EAAMsC,MAAO0B,QAGhEH,KACGL,IACA,SAACxD,EAAD,GAAqC,IAAD,EFzKjB,SAACA,EAAkBjD,GAC1C,IAAIpF,EAAUqI,EAAMrI,QACdqM,EAAoB,GACpBC,EAAa,eAACxL,EAAD,uDAAwB,GAAxB,OAA+BuL,EAAQ/G,KAAR,MAAA+G,EAAO,YAAS5L,EAAQK,MACpEsM,EAAe,CAAEpN,UAASqM,WAE1BE,EAAS7M,EAASM,EAASoF,GAEjC,IAAKmH,EAED,OADA9G,QAAQ6C,KAAR,wBAA8BlD,EAA9B,eACOgI,EAQX,IALA,IAAMlJ,EAASqI,EAAOjL,SAClBrB,EAAKsM,EAAOtM,GAEZoN,EAAQ,GAELA,GAAO,CACVA,IAEApN,EAAKV,EAAYU,EAAIiE,GACrB,IAJU,EAIJuI,EAAe1M,EAASC,EAASC,GAAIyM,MAAK,SAAC5L,EAAGC,GAAJ,OAAUA,EAAE4I,OAAS7I,EAAE6I,UAJ7D,cAMQ8C,GANR,IAMV,2BAAgC,CAAC,IAIA,EAJtBjC,EAAqB,QACtBH,EAASN,GAAcS,EAAI5C,MAC3BkF,EAAqB,CAAE5H,IAAKqH,EAAQrI,SAAQmE,QAAO7C,KAAMgF,EAAKjF,MAAO,KAE3E,GAAI2E,GAAWM,EAAK+B,GAQhB,OAPAvM,EAAUA,EAAQoJ,KAAI,SAAAoB,GAClB,OAAIA,IAAQ+B,EAAe/B,EACpB,eAAKA,EAAZ,CAAiBvK,UAGrBqM,EAAWR,GAAO,CAAE1G,WAAUkI,YAAa9C,EAAI5K,MAC/C0M,EAAU,UAACjC,EAAO/E,YAAR,aAAC,OAAA+E,EAAcyC,IAClB,CAAE9M,UAASqM,YAlBhB,+BA8Bd,OAPAC,EAAWR,GAAO,CAAE1G,cAOb,CAAEpF,QALTA,EAAUA,EAAQoJ,KAAI,SAAAoB,GAClB,OAAIA,IAAQ+B,EAAe/B,EACpB,eAAKA,EAAZ,CAAiBvK,UAGHoM,WE0HmBkB,CAAYlF,EADT,EAA1BjD,UACEiH,EADwB,EACxBA,QAASrM,EADe,EACfA,QACjB,OAAO,eAAKqI,EAAZ,CAAmBrI,UAAS2K,MAAO9J,EAASwH,EAAMsC,MAAO0B,QAGhEH,KACGJ,IACA,SAACzD,EAAD,GAAkD,IAAxCjD,EAAuC,EAAvCA,SAAUkI,EAA6B,EAA7BA,YACV9C,EAAM9K,EAAS2I,EAAMrI,QAASoF,GAC9BoE,EAAO8D,EAAc5N,EAAS2I,EAAMrI,QAASsN,QAAeE,EAE5DnB,EAAoB,GAC1B,GAAI7B,EAAK,CAAC,IAAD,EACCH,EAASN,GAAcS,EAAI5C,MAC3BkF,EAAqB,CACvB5H,IAAK,KACLsE,OACAtF,OAAQsG,EAAIlJ,SACZ+G,QACA7C,KAAMgF,GAEJiD,GAAa,UAAApD,EAAOd,qBAAP,oBAAAc,EAAuByC,KAAU,GACpDT,EAAQ/G,KAAR,MAAA+G,EAAO,YAASoB,IAEpB,OAAO,eAAKpF,EAAZ,CAAmBsC,MAAO9J,EAASwH,EAAMsC,MAAO0B,QAOvDH,KACGzD,IACA,SAACJ,EAAD,GAA2C,IAAjCjD,EAAgC,EAAhCA,SAAUzC,EAAsB,EAAtBA,KAAsB,EACT+K,GAAsBrF,EAAOjD,EAAUzC,GAA5D0J,EAD8B,EAC9BA,QAASrM,EADqB,EACrBA,QACjB,OAAO,eAAKqI,EAAZ,CAAmBrI,UAAS2K,MAAO9J,EAASwH,EAAMsC,MAAO0B,QAGhEH,KACGH,IACA,SAAC1D,EAAD,GAAmD,IAAzCjD,EAAwC,EAAxCA,SAAUuI,EAA8B,EAA9BA,aAChB,OAAO,eACAtF,EADP,CAEIrI,QAASqI,EAAMrI,QAAQoJ,KAAI,SAAAoB,GAAG,OAC1BA,EAAI5K,KAAOwF,EAAX,eAA2BoF,EAA3B,GAAmCmD,GAAiBnD,UAKnE0B,KACGP,IACA,SAACtD,EAAD,GAAqC,IAA3BjD,EAA0B,EAA1BA,SACN,OAAO,eACAiD,EADP,CAEIrI,QAASqI,EAAMrI,QAAQoJ,KAAI,SAAAoB,GAAG,OAC1BA,EAAI5K,KAAOwF,EAAX,eAA2BoF,EAA3B,CAAgCnJ,WVhOtB,IUgOoDmJ,UAK7E0B,KACG/D,IACA,SAACE,EAAOjD,GAAR,sBACOiD,EADP,CAEIrI,QAASqI,EAAMrI,QAAQE,QAAO,SAAAsK,GAAG,OAAIA,EAAI5K,KAAOwF,UAGvD8G,KACGzC,IACA,SAACpB,EAAD,OAAUjH,EAAV,EAAUA,SAAV,sBACOiH,EADP,CAEIrI,QAAQ,GAAD,mBAAMqI,EAAMrI,SAAZ,CAAqBoB,SAI3B6L,GAAgB,SAAC5E,EAAkBjD,GAC5C,IAAMiH,EAAoB,GACpBE,EAAS7M,EAAS2I,EAAMrI,QAASoF,GACvC,IAAKmH,EAAQ,MAAO,CAAEvM,QAASqI,EAAMrI,QAASqM,QAAS,IAEvD,IALkF,EAK5EuB,EAAY7N,EAASsI,EAAMrI,QAASuM,EAAOtM,IAAIyM,MAAK,SAAC5L,EAAGC,GAAJ,OAAUA,EAAE4I,OAAS7I,EAAE6I,UALC,cAOhEiE,GAPgE,IAOlF,2BAA6B,CAAC,IAAD,EAAlBpD,EAAkB,QACnBH,EAASN,GAAcS,EAAI5C,MAC3BkF,EAAqB,CAAE5H,IAAKqH,EAAQrI,OAAQ,CAAC,EAAG,GAAImE,QAAO7C,KAAMgF,GACvE6B,EAAQ/G,KAAR,MAAA+G,EAAO,aAAU,UAAAhC,EAAOrB,aAAP,oBAAAqB,EAAeyC,KAAU,MAVoC,8BAalF,MAAO,CACHT,UACArM,QAASqI,EAAMrI,UAIV0N,GAAwB,SAAC,EAElCtI,EACAzC,GACmB,IAHjB3C,EAGgB,EAHhBA,QAIIuM,EAAS7M,EAASM,EAASoF,GAEjC,MAAO,CACHpF,QAASA,EAAQoJ,KAAI,SAAAoB,GACjB,OAAIA,IAAQ+B,EAAe/B,EACpB,eAAKA,EAAZ,CAAiB7H,KAAK,eAAM6H,EAAI7H,KAAX,GAAoBA,QAE7C0J,QAAS,KEjNJwB,GAAYC,aAxDL,SAChBC,EACAC,GAFgB,OAIhBD,EAASE,KACL/N,YAAOmL,GAAQ6C,OACfhO,aAAO,kBAAO8N,EAAOG,MAAMC,KAAK1D,eAChC2D,YAAM/C,UAGM,SAChByC,EACAC,GAFgB,OAIhBD,EAASE,KACL/N,YAAOoL,GAAc4C,OACrB9E,aAAI,kBAAMkF,gBAAMN,EAAOG,MAAMC,KAAKzD,UAClCvB,aAAI,SAAAgD,GAAM,OAAKA,EAASb,GAAWa,GAAUZ,YAG9B,SACnBuC,EACAC,GAFmB,OAInBD,EAASE,KACL/N,YAAOqL,GAAW2C,OAClBK,aAAQ,SAAAnC,GAAW,IAAD,EACRoC,GAAiB,UAACpC,EAAOqC,QAAgBC,YAAxB,eAA8BpF,QZzC7B,GY0CxB,OAAOqF,YAAOC,YAAGxC,EAAOqC,SAAUG,YAAGtD,MAAiB2C,KAAK3E,YAAMkF,YAcpD,SACrBT,EACAC,GAFqB,OAIrBD,EAASE,KACL/N,YAAOuL,GAAayC,OACpBK,aAAQ,gBAAGE,EAAH,EAAGA,QAAH,OACJE,YACIE,YAAMJ,EAAQ5B,SAASoB,KAAKa,eAC5BF,IAAE,WAAF,cAAMH,EAAQpC,QAAQjD,KAAI,SAAAtI,GAAC,OAAIuK,GAAQvK,gBAnBlC,SACjBiN,EACAC,GAFiB,OAIjBD,EAASE,KACL/N,YAAOuJ,GAASyE,OAChB5E,YAAM,KACNF,aAAI,SAAAgD,GAAM,OAAIjE,GAAOiE,EAAOqC,QAAQrN,SAASxB,W,SC1BxCmP,GAAajB,aAtBJ,SAACC,GAAD,OAClBA,EAASE,KACL/N,YAAOiF,GAAK+I,OACZhO,aAAO,SAAAkM,GAAM,MRTI,WQSAA,EAAOqC,QAAQrJ,YAChC4J,cAAI,kBT0BelI,ES1BE,MT2BbM,GAAYN,OAASA,QAKjCM,GAAYhE,OANU,IAAC0D,KSzBnBgI,kBAGe,SAACf,GAAD,OACnBA,EAASE,KACL/N,YAAO8I,GAAMkF,OACbc,cAAI,SAAAzC,GAAM,OAAInJ,EAAK,SAAU,OAC7B0L,kBAGc,SAACf,GAAD,OAClBA,EAASE,KACL/N,YAAOkL,GAAK8C,OACZc,cAAI,SAAAzC,GAAM,OAAInJ,EAAK,cAAe,OAClC0L,kBCpBFG,GAAiBC,cAEjBC,GAAmBC,8BAAoB,CACzCvK,KAAM,QAGJwK,GAAcC,0BAAgB,CAChClB,KAAMpC,KAGGuD,GAAQC,sBAAYH,GAAaF,GAAiBM,0BAAgBR,MAE/EA,GAAeS,IAAI5B,YAAaiB,GAAYlB,KCdrC,IAAM8B,GAAY,WACrB,IAAMtH,EAAQuH,aAAY,SAACvH,GAAD,OAA2BA,EAAM+F,QADhC,EAEKyB,oBAAS,GAFd,mBAEpBC,EAFoB,KAEVC,EAFU,KAGrBC,EAAWC,cAkBjB,MAAO,CAAEC,KAZI,SAAC9K,EAAkBuI,GAC5BqC,EAASjE,GAAa,CAAE3G,WAAUuI,mBAWvBwC,eAhBQ,WACnBJ,GAAaD,IAecA,WAAUM,QARzB,WACZ,IAAMC,EAAgBC,KAAKC,UAAUlI,EAAMrI,SAE3CwQ,UAAUC,UAAUC,UAAUL,GAAeM,MAAK,WAC9ClL,QAAQC,IAAI,yBACbD,QAAQmL,UCrBNC,GAAmB,SAACC,EAAaC,GAC1CC,qBAAU,WACN,IAAMC,EAAU,SAACnE,GACTA,EAAMgE,MAAQA,GAAKC,KAK3B,OAFAG,OAAOC,iBAAiB,UAAWF,GAE5B,kBAAMC,OAAOE,oBAAoB,UAAWH,QCG9CI,GAAY,SAAC,GAAiC,IAA/BrR,EAA8B,EAA9BA,QAA8B,EAC1B6P,qBAD0B,mBAC/CyB,EAD+C,KACvCC,EADuC,OAE5B5B,KAAlBO,EAF8C,EAE9CA,KAAME,EAFwC,EAExCA,QACR5F,EAAM8G,GAAU5R,EAASM,EAASsR,GAClChO,EAAS,SAAC6K,GACR3D,GAAK0F,EAAK1F,EAAI5K,GAAIuO,IAG1B,OACI,yBACI7J,MAAO,CACH7B,SAAU,WACVmH,OAAQ,IACR4H,IAAK,EACLC,MAAO,EACPlN,MAAOmN,IACP5J,QAAS,KAGb,4BAAQ6J,QAASvB,GAAjB,YACC5F,GACG,oCACI,2BACI5C,KAAK,QACLgK,KAAM,EACNrH,IAAK,EACLsH,KAAM,IACN1D,MAAO3D,EAAInJ,UACXyQ,SAAU,SAAAhF,GAAK,OAAIxJ,EAAO,CAAEjC,UAAW0Q,SAASjF,EAAMP,OAAO4B,MAAO,SAExE,4BACIA,MAAO3D,EAAI5C,KACXkK,SAAU,SAAAhF,GAAK,OAAIxJ,EAAO,CAAEsE,KAAMkF,EAAMP,OAAO4B,UAE9C6D,OAAOC,KAAKnI,IAAmBV,KAAI,SAAA1I,GAAI,OACpC,gCAASA,QAKzB,yBAAK4D,MAAO,CAAE7B,SAAU,aACnBzC,EAAQoJ,KAAI,SAAAoB,GAAQ,IACT5C,EAAoD4C,EAApD5C,KAAMhI,EAA8C4K,EAA9C5K,GAAIK,EAA0CuK,EAA1CvK,GAAyB2J,GAAiBY,EAAtClJ,SAAsCkJ,EAA5BnJ,UAA4BmJ,EAAjBZ,QAAQjH,EAAS6H,EAAT7H,KAC3CmC,EAAciF,GAAcnC,GAA5B9C,UACR,OACI,yBACIgM,IAAKlR,EACL0E,MAAO,CACH7B,SAAU,WACVyP,KAnDnB,GAmDyBjS,EAAG,GACTuR,IApDnB,GAoDwBvR,EAAG,GACRsE,MArDnB,GAsDmBC,OAtDnB,GAuDmBoF,UAEJ+H,QAAS,kBAAMJ,EAAU3R,KAEzB,kBAACkF,EAAD,CAAW1D,SAAUoJ,GAChB5K,EADL,MACYgI,EADZ,IACkB,6BACbuK,kBAAQxP,GAAQ,GAAK2N,KAAKC,UAAU5N,EAAM,KAAM,WCzDpEyP,GAAc,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,YAAazH,EAA8B,EAA9BA,MAA8B,EAC5C0H,cAAjBC,EAD6D,EAC7DA,OAAQb,EADqD,EACrDA,KA0BhB,OAxBAV,qBAAU,WACN,IAAMwB,EAAUH,EAAYjJ,KAAI,SAAAoB,GAAG,OAAIA,EAAIvK,GAAG,MACxCwS,EAAUJ,EAAYjJ,KAAI,SAAAoB,GAAG,OAAIA,EAAIvK,GAAG,MAExCyS,EAAavO,KAAKoG,IAAL,MAAApG,KAAI,YAAQqO,IAAW,EACpCG,EAAaxO,KAAKoG,IAAL,MAAApG,KAAI,YAAQsO,IAAW,EAEpCG,EACDtT,EAAc,GAAK6E,KAAKoG,IAAImI,EAAYC,GAAc,GACtDjB,EAAKnN,MAAQmN,EAAKlN,QACnB,GACEqO,EACDvT,EAAc,GAAK6E,KAAKoG,IAAImI,EAAYC,GAAc,GACtDjB,EAAKnN,MAAQmN,EAAKlN,QACnB,GACEsO,EACDxT,EAAc,GAAK6E,KAAKoG,IAAImI,EAAYC,GAAc,GACtDjB,EAAKnN,MAAQmN,EAAKlN,QACnB,GAEJ+N,EAAO9P,SAASH,IAAIoQ,EAAaE,EAASE,EAASH,EAAaE,GAChEN,EAAOQ,OAAOL,EAAY,EAAGC,KAC9B,CAAC/H,EAAO8G,IAGP,+BACI,kCAAcsB,UAAW,EAAGhS,MAAO,IAAIiS,QAAM,aAC7C,gCACIxQ,SAAU,CAAC,EAAG,EAAG,GACjBuQ,UAAW,IACXhS,MAAO,IAAIiS,QAAM,WACjBC,wBAAsB,OACtBC,uBAAqB,OACrBC,oBAAmB,GACnBC,eAAc,IACd9R,YAAU,EACV+R,sBA/CN,EAgDMC,sBAhDN,EAiDMC,oBAjDN,EAkDMC,wBAlDN,IAoDE,gCAAYhR,SAAU,CAAC,EAAG,EAAG,GAAIuQ,UAAW,IAAKhS,MAAO,IAAIiS,QAAM,eCtDjES,GAAkB,CAC3B,CAAE9T,GAAI,QAASiF,KAAM,SAAU7E,Q,OAC/B,CAAEJ,GAAI,QAASiF,KAAM,SAAU7E,Q,OAC/B,CAAEJ,GAAI,QAASiF,KAAM,SAAU7E,Q,QCQtB2T,GAAe,WAAO,IAAD,ECGX,WACnB,IAAMtL,EAAQuH,aAAY,SAACvH,GAAD,OAA2BA,EAAM+F,QACrD4B,EAAWC,cACX2D,EAASlU,EAAS2I,EAAMrI,QhBpBT,UgBsBhB4T,GAAQnO,QAAQ6C,KAAR,uBAuEb,OAAO,eACAD,EADP,CAEIuL,SAEA1I,QAZmB,SAAC9B,GACpB4G,EAAS9E,GAAQ9B,KAYjB+B,MATiB,WACjB6E,EAAS7E,OAUThG,KA5EgB,SAACjB,GACjB,IAAImE,EAAMqC,YAAV,CAEA,IAAM2B,EAAoB,GAE1B,IAAKuH,EACD,OAAOnO,QAAQ6C,KAAR,uBAGNuL,kBAAQD,EAAOtS,SAAU4C,GAG1BmI,EAAQ/G,KAAKH,GAAK,CAAEC,SAAUwO,EAAOhU,GAAIsE,YAFzCmI,EAAQ/G,KAAKoG,GAAO,CAAEtG,SAAUwO,EAAOhU,GAAI0B,SAAU4C,KAKzD8L,EAAS3E,GAAQgB,MA8DjBrD,MA3DiB,WACbX,EAAMqC,aACVsF,EAAS3E,GAAQrC,GAAM,CAAE5D,SAAUwO,EAAOhU,QA0D1CkU,KAvDgB,WAChB,IAAIzL,EAAMqC,YAAV,CADsB,IASlBtJ,EAPIxB,EAAsCgU,EAAtChU,GAAIK,EAAkC2T,EAAlC3T,GAAIqB,EAA8BsS,EAA9BtS,SAAUD,EAAoBuS,EAApBvS,UAAWsB,EAASiR,EAATjR,KAErC,GAAI,OAACA,QAAD,IAACA,OAAD,EAACA,EAAMgB,IAQPvC,EADa,WAAbuB,EAAKgB,IACM,CACPiE,KAAMvI,EAAY6J,iBAClBtJ,GAAI8J,qBACJzJ,KACAqB,WACAD,UAAWA,ErBhES,GqBiEpBsI,OAAQ,IACRC,OAAQ,GACRjH,QAGO,CACPiF,KAAMvI,EAAYwK,mBAClBjK,GAAI8J,qBACJzJ,KACAqB,WACAD,UAAWA,ErB3ES,GqB4EpBsI,OAAQ,IACRC,OAAQ,GACRjH,QAIRqN,EAAS3E,GAAQO,GAAW,CAAEsB,KAAMtN,EAAIwB,oBA9BpCgC,EAAK,gBDrC0D2Q,GAA/D/T,EADsB,EACtBA,QAAS4K,EADa,EACbA,MAAOC,EADM,EACNA,QAAS1F,EADH,EACGA,KAAM6D,EADT,EACSA,MAAO8K,EADhB,EACgBA,KAAM5I,EADtB,EACsBA,QAASC,EAD/B,EAC+BA,MAD/B,EAGOwE,KAA7BG,EAHsB,EAGtBA,SAAUK,EAHY,EAGZA,eAClBU,GAAiB,IAAKV,GAEtB,IAAM+B,EAAO,kBAAM/M,EAAKqC,KAClBwM,EAAK,kBAAM7O,EAAKkC,KAChB4M,EAAO,kBAAM9O,EAAKoC,KAClBkK,EAAQ,kBAAMtM,EAAKmC,KAEzBuJ,GAAiB,IAAK1F,GAEtB0F,GAAiB,YAAaqB,GAC9BrB,GAAiB,UAAWmD,GAC5BnD,GAAiB,YAAaoD,GAC9BpD,GAAiB,aAAcY,GAC/BZ,GAAiB,QAAS7H,GAC1B6H,GAAiB,IAAKiD,GAEtB,IAAII,EAAY,CAAC,EAAG,GAWpB,OAVAlU,EAAQiD,SAAQ,SAAAkR,GACRA,EAAGlU,GAAG,GAAKiU,EAAU,KAAIA,EAAU,GAAKC,EAAGlU,GAAG,IAC9CkU,EAAGlU,GAAG,GAAKiU,EAAU,KAAIA,EAAU,GAAKC,EAAGlU,GAAG,OAEtDiU,EAAYA,EAAU9K,KAAI,SAAA+K,GAAE,OAAIA,EAAK,KAErCnD,qBAAU,WACN9F,EAAQwI,GAAK,MACd,IAGC,oCACK5D,GAAY,kBAAC,GAAD,CAAW9P,QAASA,IACjC,yBACIsE,MAAO,CACH7B,SAAU,WACVmH,OAAQ,EACR4H,IAAK,EACLU,KAAM,IAGTwB,GAAKtK,KAAI,SAAAA,GAAG,OACT,4BAAQ0H,IAAK1H,EAAIxJ,GAAI+R,QAAS,kBAAMzG,EAAQ9B,KAA5C,OACSA,EAAIvE,UAIpBgG,GACG,yBACIvG,MAAO,CACH7B,SAAU,WACVmH,OAAQ,EACR4H,IAAK,EACLC,MAAO,KAGX,oCAAU5G,IAGlB,yBACIvG,MAAO,CACH7B,SAAU,WACVmH,OAAQ,EACRwK,OAAQ,EACRlC,KAAM,EACNT,MAAO,EACP4C,UAAW,WAGf,4BAAQ1C,QAASO,GACb,2CAEJ,4BAAQP,QAASqC,GACb,2CAEJ,4BAAQrC,QAASsC,GACb,2CAEJ,4BAAQtC,QAASF,GACb,2CAEJ,4BAAQE,QAAS3I,GAAjB,SACU,2CAEV,4BAAQ2I,QAASmC,GAAjB,QACS,+BAAQ,YAEjB,4BAAQnC,QAASxG,GAAjB,WACY,wCAGfP,GACG,kBAAC,IAAD,CAEI2H,OAAQ,CACJ+B,KAAM,IAEVC,UAAW,SAAAxS,GACPA,EAAMyS,GAAGC,UAAU7M,KAAO8M,mBAC1B3S,EAAMyS,GAAGC,UAAUE,SAAU,IAGjC,+BACI,kBAAC,GAAD,CAAatC,YAAarS,EAAS4K,MAAOA,IAC1C,kBAAC,WAAD,CACIgK,SACI,8BACI,uCAAmBhM,OAAO,WAAWC,KAAM,CAAC,GAAK,GAAK,MACtD,0CAAsBD,OAAO,WAAW5H,MAAM,UAIrDhB,EAAQoJ,KAAI,SAAAoB,GAAQ,IACTzF,EAAgBgF,GAAcS,EAAI5C,MAAlC7C,YACR,OAAO,kBAACA,EAAD,CAAa+L,IAAKtG,EAAI5K,GAAIwB,SAAUoJ,YE9H9DqK,GAAM,WACf,OACI,kBAAC,IAAD,CAAUtF,MAAOA,IACb,kBAAC,GAAD,Q,MCHZuF,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.2c9541f3.chunk.js","sourcesContent":["import { GameState } from '../state/gameReducer'\nimport { Action } from 'redux'\nimport { FC, ReactNode } from 'react'\n\nexport type XY = [number, number]\nexport type Vector2 = [number, number]\n\nexport enum ObjectTypes {\n    Player = 'Player',\n    WinTrigger = 'WinTrigger',\n\n    Grass = 'Grass',\n    RockFloor = 'RockFloor',\n    Box = 'Box',\n    BigRock = 'BigRock',\n    Fence = 'Fence',\n\n    Button = 'Button',\n    Dor = 'Dor',\n    Ice = 'Ice',\n\n    Crossbow = 'Crossbow',\n    Cannon = 'Cannon',\n    Boom = 'Boom',\n\n    CrossbowProjectile = 'CrossbowProjectile',\n    RocketProjectile = 'RocketProjectile',\n}\n\nexport interface ObjectInstance {\n    type: ObjectTypes\n    id: string\n    xy: XY\n    rotation: Vector2\n    elevation: number\n    zIndex: number\n    aIndex: number\n    data: Partial<ObjectInstanceData>\n}\n\nexport interface ObjectInstanceData {\n    gun: 'cannon' | 'crossbow'\n    info: string\n    open: boolean\n    targetId: string\n}\n\nexport interface ActionEvent {\n    who: ObjectInstance\n    self: ObjectInstance\n    what?: ObjectInstance\n    vector: Vector2\n    state: GameState\n    force?: number\n}\n\nexport interface ObjectDefinition {\n    name: string\n    height: (instance: ObjectInstance) => number\n    push?(event: ActionEvent): Action[] // triggered when elevation is to big\n    enter?(event: ActionEvent): Action[]\n    leave?(event: ActionEvent): Action[]\n    equip?(event: ActionEvent): Action[]\n    projectileLaunch?(event: ActionEvent): Action[] // eg. for projectile\n    projectileHit?(event: ActionEvent): Action[] // eg. for projectile\n    Component(props: RenderComponentProps & { children: ReactNode }): any\n    Component3d(props: RenderComponentProps): any\n}\n\nexport interface RenderComponentProps {\n    instance: ObjectInstance\n}\n\nexport interface MapData {\n    id: string\n    name: string\n    objects: ObjectInstance[]\n}\n","export const CAMERA_OFFSET = [-2, 4, 6]\nexport const MAX_ELEVATION_DIFF = 0.5\nexport const PROJECTILE_ELEVATION = 0.8\nexport const DEFAULT_ACTION_DELAY = 65\n\nexport const FALL_TRIGGER_DELAY = 400\nexport const FALL_REMOVE_DELAY = 800\nexport const FALL_ELEVATION = -5\n","import { XY, Vector2 } from './types/types'\n\nexport const reverseVector = (vector: Vector2) => vector.map(v => v * -1) as Vector2\n\nexport const applyVector = ([x, y]: XY, [vx, vy]: Vector2): XY => [x + vx, y + vy]\n\nexport const samePosition = ([x1, y1]: XY, [x2, y2]: XY) => x1 === x2 && y1 === y2\n\nexport const findById = <T extends { id: string }>(props: T[], id: string) => {\n    return props.find(prop => prop.id === id)\n}\n\nexport const findByXY = <T extends { xy: XY }>(objects: T[], xy: XY) => {\n    return objects.filter(tile => samePosition(tile.xy, xy))\n}\n\nexport const asArray = <T>(item: T | T[]): T[] => (Array.isArray(item) ? item : [item])\nexport const arrMerge = <T>(a: T[], b: T | T[] = []): T[] => [...a, ...asArray(b)]\n","import React, { useEffect } from 'react'\nimport { useLoader, useFrame } from 'react-three-fiber'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport { RenderComponentProps, Vector2 } from '../../types/types'\nimport { AnimationMixer, Group, LoopOnce } from 'three'\nimport { setInterval } from 'timers'\nimport { useSpring, animated } from 'react-spring/three'\nimport { timeInterval } from 'rxjs/operators'\n\nexport const Player = (props: RenderComponentProps) => {\n    return <AnimatieAsset {...props} url=\"robot_model.gltf\" />\n}\n\nexport const Box = (props: RenderComponentProps) => {\n    return <Asset {...props} url=\"box.gltf\" />\n}\n\nexport const Rock = (props: RenderComponentProps) => {\n    return <Asset {...props} url=\"rock1.gltf\" />\n}\n\nexport const Fence = (props: RenderComponentProps) => {\n    return <Asset {...props} url=\"fence.gltf\" />\n}\n\nexport const Arrow = (props: RenderComponentProps) => {\n    return <Asset {...props} url=\"arrow.gltf\" />\n}\n\nexport const Boom = (props: RenderComponentProps) => {\n    return <AnimateSelfAsset {...props} url=\"boom.gltf\" />\n}\n\nexport const Cannon = (props: RenderComponentProps) => {\n    return <Asset {...props} url=\"rakietnica_srednia.gltf\" elevationFix={-0.8} />\n}\n\nexport const Rocket = (props: RenderComponentProps) => {\n    return <Asset {...props} url=\"rocket.gltf\" />\n}\n\nexport const Crossbow = (props: RenderComponentProps) => {\n    return <Asset {...props} url=\"kusza.gltf\" elevationFix={-0.8} />\n}\n\nexport const Ground = (props: RenderComponentProps) => {\n    return <Asset {...props} url=\"rock.gltf\" castShadow={true} receiveShadow={true} />\n}\n\nexport const Grass = (props: RenderComponentProps) => {\n    return (\n        <Asset\n            {...props}\n            url=\"grass_002_export_test_1_cube.gltf\" // INNY model\n            castShadow={false}\n            receiveShadow={true}\n        />\n    )\n}\n\nexport const Ice = (props: RenderComponentProps) => {\n    return (\n        <Asset\n            {...props}\n            url=\"ice_002_export_test_1_cube.gltf\" // INNY model\n            castShadow={false}\n            receiveShadow={true}\n        />\n    )\n}\n\nexport const Button = (props: RenderComponentProps) => {\n    return (\n        <Asset\n            {...props}\n            url=\"ground_002_export_test_1_cube.gltf\" // INNY model\n            castShadow={false}\n            receiveShadow={true}\n        />\n    )\n}\n\nexport const createTrigger = (color: string) => ({ instance }: RenderComponentProps) => {\n    const { xy, elevation, rotation } = instance\n\n    return (\n        <mesh position={[xy[0], elevation, xy[1]]} rotation={[0, vectorToThree(rotation), 0]}>\n            <boxBufferGeometry attach=\"geometry\" args={[0.5, 1, 0.5]} />\n            <meshStandardMaterial attach=\"material\" color={color} />\n        </mesh>\n    )\n}\n\ninterface AssetProps extends RenderComponentProps {\n    url: string\n    color?: string\n    castShadow?: boolean\n    receiveShadow?: boolean\n    elevationFix?: number\n}\n\nconst Asset = ({\n    url,\n    instance: { xy, elevation, rotation },\n    castShadow = true,\n    receiveShadow = true,\n    elevationFix = 0,\n}: AssetProps) => {\n    const anim = useSpring({\n        pos: [xy[0], elevation + elevationFix, xy[1]],\n        rot: [0, vectorToThree(rotation), 0],\n    })\n    const gltf = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/${url}`)\n    const scene = gltf.scene.clone()\n    if (castShadow) scene.children[0].castShadow = true\n    if (receiveShadow) scene.children[0].receiveShadow = true\n    scene.scale.set(0.5, 0.5, 0.5)\n    return <animated.primitive object={scene} position={anim.pos} rotation={anim.rot} />\n}\n\nconst AnimatieAsset = ({\n    url,\n    instance: { xy, elevation, rotation, data },\n    castShadow = true,\n    receiveShadow = true,\n}: AssetProps) => {\n    const anim = useSpring({\n        pos: [xy[0], elevation, xy[1]],\n        rot: [0, vectorToThree(rotation), 0],\n    })\n\n    const gltf = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/${url}`)\n    gltf.scene.scale.set(0.5, 0.5, 0.5)\n    if (castShadow) gltf.scene.children[0].castShadow = true\n    if (receiveShadow) gltf.scene.children[0].receiveShadow = true\n\n    // const gltfanimation = useLoader(GLTFLoader, `/assets/animations/jump.gltf`)\n    // const gltfanimation = useLoader(GLTFLoader, `/assets/animations/move.gltf`)\n    const gltfanimation = useLoader(\n        GLTFLoader,\n        `${process.env.PUBLIC_URL}/assets/animations/boring.gltf`,\n    )\n    const mixer = new AnimationMixer(gltfanimation.scene)\n    gltfanimation.animations.forEach(clip => {\n        mixer.clipAction(clip, gltf.scene).play()\n    })\n    useFrame(() => mixer.update(0.02))\n\n    const cannonInHead = useLoader(\n        GLTFLoader,\n        `${process.env.PUBLIC_URL}/assets/rakietnica_srednia.gltf`,\n    )\n    const cannonInHeadScene = cannonInHead.scene.clone()\n\n    const crossbowInHead = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/kusza.gltf`)\n    const crossbowInHeadScene = crossbowInHead.scene.clone()\n\n    return (\n        <animated.group position={anim.pos} rotation={anim.rot}>\n            <primitive object={gltf.scene}>\n                <primitive object={cannonInHeadScene} visible={data.gun == 'cannon'} />\n                <primitive object={crossbowInHeadScene} visible={data.gun == 'crossbow'} />\n            </primitive>\n        </animated.group>\n    )\n}\n\nconst AnimateSelfAsset = ({\n    url,\n    instance: { xy, elevation, rotation, data },\n    castShadow = true,\n    receiveShadow = true,\n}: AssetProps) => {\n    const anim = useSpring({\n        pos: [xy[0], elevation, xy[1]],\n        rot: [0, vectorToThree(rotation), 0],\n    })\n    const gltf = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/${url}`)\n\n    const gltfScene = gltf.scene.clone()\n    // useEffect(() => {\n    if (castShadow) gltfScene.children[0].castShadow = true\n    if (receiveShadow) gltfScene.children[0].receiveShadow = true\n\n    gltfScene.scale.set(0.6, 0.6, 0.6)\n\n    const mixer = new AnimationMixer(gltfScene)\n\n    gltf.animations.forEach((clip, index) => {\n        const animation = mixer.clipAction(clip, gltfScene.children[index])\n        animation.setLoop(LoopOnce, 1)\n        animation.play()\n    })\n    // }, [xy])\n    useFrame(() => {\n        mixer.update(0.03)\n    })\n\n    return (\n        <animated.group position={anim.pos} rotation={anim.rot}>\n            <primitive object={gltfScene} />\n        </animated.group>\n    )\n}\n\nconst vectorToThree = (vector: Vector2) => {\n    if (vector[0] === 1 && vector[1] === 0) return Math.PI / 2\n    if (vector[0] === 0 && vector[1] === -1) return (Math.PI / 2) * 2\n    if (vector[0] === -1 && vector[1] === 0) return (Math.PI / 2) * 3\n    if (vector[0] === 0 && vector[1] === 1) return (Math.PI / 2) * 4\n    // return (Math.PI / 2) * 4\n    return 0\n}\n\n// export const box = (props: RenderComponentProps) => {\n//     return (\n//         <mesh>\n//             <boxBufferGeometry attach=\"geometry\" args={[0.5, 0.5, 0.5]} />\n//             <meshStandardMaterial attach=\"material\" color={props.color} />\n//         </mesh>\n//     )\n// }\n","import { sample, uniqueId } from 'lodash'\nimport React from 'react'\nimport { play } from '../audio/play'\nimport { move, remove, setObjectData } from '../state/gameReducer'\nimport { PLAYER_ID } from '../types/consts'\nimport { ObjectDefinition, ObjectTypes } from '../types/types'\nimport { Button, Grass, Ground, Ice } from './models/Items'\n\nconst tileDebugComponent = (color: string) => (props: any) => (\n    <div\n        style={{ width: '100%', height: '100%', backgroundColor: color, fontSize: 9 }}\n        {...props}\n    />\n)\n\nexport const tileTypeDefinitions: Partial<Record<ObjectTypes, ObjectDefinition>> = {\n    [ObjectTypes.Grass]: {\n        name: 'Grass',\n        height: () => 0,\n        Component: tileDebugComponent('green'),\n        Component3d: Grass,\n    },\n\n    [ObjectTypes.Ice]: {\n        name: 'Ice',\n        height: () => 0,\n        enter: ({ who, vector }) => [move({ targetId: who.id, vector })],\n        Component: tileDebugComponent('lightblue'),\n        Component3d: Ice,\n    },\n\n    [ObjectTypes.RockFloor]: {\n        name: 'Rock floor',\n        height: () => 0,\n        push: ({ force, self }) => {\n            // if (force && force >= 50) return [remove(self.id)]\n            console.log(self)\n            return []\n        },\n        Component: tileDebugComponent('gray'),\n        Component3d: Ground,\n    },\n}\n","const soundList = {\n    button: `${process.env.PUBLIC_URL}/sounds/Button_gameplay.mp3`,\n    music: `${process.env.PUBLIC_URL}/sounds/elementary1.mp3`,\n    Alert_NO: `${process.env.PUBLIC_URL}/sounds/Alert_NO.mp3`,\n    Alert_YES: `${process.env.PUBLIC_URL}/sounds/Alert_YES.mp3`,\n    Bazooka: `${process.env.PUBLIC_URL}/sounds/Bazooka.mp3`,\n    Crossbow: `${process.env.PUBLIC_URL}/sounds/Crossbow.mp3`,\n    Engine_start: `${process.env.PUBLIC_URL}/sounds/Engine_start.mp3`,\n    Engine_LOOP_128: `${process.env.PUBLIC_URL}/sounds/Engine_LOOP_128.mp3`,\n    Engine_NO_1: `${process.env.PUBLIC_URL}/sounds/Engine_NO_1.mp3`,\n    Engine_NO_2: `${process.env.PUBLIC_URL}/sounds/Engine_NO_2.mp3`,\n    Engine_stop: `${process.env.PUBLIC_URL}/sounds/Engine_stop.mp3`,\n    Equip_1: `${process.env.PUBLIC_URL}/sounds/Equip_1.mp3`,\n    Equip_2: `${process.env.PUBLIC_URL}/sounds/Equip_2.mp3`,\n    Equip_3: `${process.env.PUBLIC_URL}/sounds/Equip_3.mp3`,\n    Equip_4: `${process.env.PUBLIC_URL}/sounds/Equip_4.mp3`,\n    Hero_1: `${process.env.PUBLIC_URL}/sounds/Hero_1.mp3`,\n    Hero_2: `${process.env.PUBLIC_URL}/sounds/Hero_2.mp3`,\n    Jump: `${process.env.PUBLIC_URL}/sounds/Jump.mp3`,\n}\n\nexport type SoundName = keyof typeof soundList\n\nexport const play = (name: SoundName, volume?: number) => {\n    const sound = new Audio(soundList[name])\n    if (volume) sound.volume = volume\n    sound.play()\n    // sound.addEventListener('ended', () => {\n    //     sound.play()\n    // })\n}\nexport const playEquip = (volume?: number) => {\n    const list = ['Equip_1', 'Equip_2', 'Equip_3', 'Equip_4']\n    play(list[Math.round(Math.random() * 4)] as SoundName, volume)\n}\n\nconst engineStart = new Audio(soundList['Engine_LOOP_128'])\n\nexport const playEngine = (volume?: number) => {\n    if (volume) engineStart.volume = volume\n    // const playEnd = () => {\n    //     play('Engine_stop', volume)\n    //     engineStart.removeEventListener('ended', playEnd)\n    // }\n    engineStart.play()\n    // engineStart.removeEventListener('ended', playEnd)\n    // engineStart.addEventListener('ended', playEnd)\n}\n","import { Vector2 } from './types'\n\nexport const PLAYER_ID = 'player'\n\nexport const UP: Vector2 = [0, -1]\nexport const RIGHT: Vector2 = [1, 0]\nexport const DOWN: Vector2 = [0, 1]\nexport const LEFT: Vector2 = [-1, 0]\n","import React from 'react'\nimport { playEquip, play } from '../audio/play'\nimport { move, remove, setObjectData, tmpSpawn, win } from '../state/gameReducer'\nimport { ObjectDefinition, ObjectTypes } from '../types/types'\nimport {\n    Cannon,\n    Crossbow,\n    Player,\n    Rock,\n    Rocket,\n    Box,\n    Boom,\n    Fence,\n    Arrow,\n    Button,\n    createTrigger,\n} from './models/Items'\nimport { reverseVector } from '../helpers'\nimport { uniqueId, sample } from 'lodash'\nimport { PLAYER_ID } from '../types/consts'\n\nconst propDebugComponent = (color: string) => ({ instance, children }: any) => {\n    return (\n        <div\n            style={{\n                margin: '20%',\n                width: '60%',\n                height: '60%',\n                borderRadius: instance.type === ObjectTypes.Player ? 100 : 5,\n                backgroundColor: color,\n                color: 'black',\n                opacity: 0.7,\n            }}\n        >\n            <pre style={{ padding: 2, fontSize: 8 }}>{children}</pre>\n        </div>\n    )\n}\n\nexport const propTypeDefinitions: Partial<Record<ObjectTypes, ObjectDefinition>> = {\n    [ObjectTypes.Player]: {\n        name: 'Player',\n        height: () => 2,\n        Component: propDebugComponent('white'),\n        Component3d: Player,\n    },\n\n    [ObjectTypes.BigRock]: {\n        name: 'Big rock',\n        height: () => 0.55,\n        Component: propDebugComponent('gray'),\n        Component3d: Rock,\n    },\n    [ObjectTypes.Box]: {\n        name: 'Box',\n        height: () => 1,\n        push: ({ self, vector }) => [move({ targetId: self.id, vector })],\n        Component: propDebugComponent('brown'),\n        Component3d: Box,\n    },\n\n    [ObjectTypes.Fence]: {\n        name: 'Fence',\n        height: () => 1.5,\n        push: ({ force, self }) => {\n            if (force && force >= 50) return [remove(self.id)]\n            return []\n        },\n        Component: propDebugComponent('brown'),\n        Component3d: Fence,\n    },\n\n    [ObjectTypes.Button]: {\n        name: 'Button',\n        height: () => 2,\n        push: ({ state, self }) => {\n            play('button')\n            if (!self.data.targetId) {\n                console.warn('Missing Button data.targetId')\n                return []\n            }\n            const toggle = !self.data.open\n            return [\n                setObjectData({ targetId: self.id, data: { open: toggle } }),\n                setObjectData({ targetId: self.data.targetId, data: { open: toggle } }),\n            ]\n        },\n        Component: propDebugComponent('blue'),\n        Component3d: Fence,\n    },\n\n    [ObjectTypes.WinTrigger]: {\n        name: 'WinTrigger',\n        height: () => 0,\n        enter: ({ who, state, self }) => {\n            if (who.id === PLAYER_ID) {\n                play('Engine_start')\n                return [win()]\n            }\n            return []\n        },\n        Component: propDebugComponent('#ABC123'),\n        Component3d: createTrigger('#ABC123'),\n    },\n\n    [ObjectTypes.Dor]: {\n        name: 'Dor',\n        height: instance => {\n            return instance.data.open ? 0 : 1.5\n        },\n        push: ({ force, self }) => {\n            if (force && force >= 50) return [remove(self.id)]\n            return []\n        },\n        Component: propDebugComponent('purple'),\n        Component3d: Fence,\n    },\n\n    [ObjectTypes.Cannon]: {\n        name: 'Cannon',\n        height: () => 0,\n        equip: ({ who, self }) => {\n            playEquip(0.8)\n            return [setObjectData({ targetId: who.id, data: { gun: 'cannon' } }), remove(self.id)]\n        },\n        Component: propDebugComponent('red'),\n        Component3d: Cannon,\n    },\n\n    [ObjectTypes.Boom]: {\n        name: 'Boom',\n        height: () => 0,\n        Component: propDebugComponent('yellow'),\n        Component3d: Boom,\n    },\n\n    [ObjectTypes.Crossbow]: {\n        name: 'Crossbow',\n        height: () => 0,\n        equip: ({ who, self }) => {\n            playEquip(0.8)\n            return [setObjectData({ targetId: who.id, data: { gun: 'crossbow' } }), remove(self.id)]\n        },\n        Component: propDebugComponent('red'),\n        Component3d: Crossbow,\n    },\n\n    [ObjectTypes.RocketProjectile]: {\n        name: 'RocketProjectile',\n        height: () => 0,\n        projectileLaunch: ({ who }) => {\n            play('Bazooka')\n            return [\n                move(\n                    { targetId: who.id, vector: reverseVector(who.rotation) },\n                    { delay: 250 }, // delay remove from projectileHit\n                ),\n            ]\n        },\n        projectileHit: ({ self, what, who }) => {\n            if (!what) {\n                return [remove(self.id)]\n            }\n\n            play('Alert_YES') // TODO Boom!\n            return [\n                remove(self.id),\n                tmpSpawn({\n                    instance: {\n                        type: ObjectTypes.Boom,\n                        id: uniqueId(),\n                        xy: self.xy,\n                        elevation: self.elevation,\n                        rotation: self.rotation,\n                        aIndex: 0,\n                        zIndex: 20,\n                        data: {},\n                    },\n                }),\n            ]\n        },\n        Component: propDebugComponent('yellow'),\n        Component3d: Rocket,\n    },\n\n    [ObjectTypes.CrossbowProjectile]: {\n        name: 'Projectile',\n        height: () => 0,\n        projectileLaunch: ({ who }) => {\n            play('Crossbow')\n            return [\n                move(\n                    { targetId: who.id, vector: [0, 0] },\n                    { delay: 250 }, // delay remove from projectileHit\n                ),\n            ]\n        },\n        projectileHit: ({ self, what, who }) => {\n            if (what) {\n                play('Alert_YES') // TODO Hit!\n            }\n            return [remove(self.id)]\n        },\n        Component: propDebugComponent('pink'),\n        Component3d: Arrow,\n    },\n}\n","import { ObjectDefinition, ObjectTypes } from '../types/types'\nimport { tileTypeDefinitions } from './tileTypeDefinitions'\nimport { propTypeDefinitions } from './propTypeDefinitions'\n\nexport const objectDefinitions: Partial<Record<ObjectTypes, ObjectDefinition>> = {\n    ...tileTypeDefinitions,\n    ...propTypeDefinitions,\n}\n\nexport const getDefinition = (type: ObjectTypes): ObjectDefinition => {\n    const def = objectDefinitions[type]\n\n    if (!def) throw new Error(`[getDefinition] Definition for ${type} not found`)\n\n    return def\n}\n","import { Action } from 'redux'\nimport { applyVector, asArray, findById, findByXY } from '../../helpers'\nimport { getDefinition } from '../../objects/definitions'\nimport { ActionEvent, ObjectInstance } from '../../types/types'\nimport { GameState, flyEnd } from '../gameReducer'\nimport { ResolverResults } from './types'\n\nexport const flyResolver = (state: GameState, targetId: string): ResolverResults => {\n    let objects = state.objects\n    const actions: Action[] = []\n    const addActions = (a: Action | Action[] = []) => actions.push(...asArray(a))\n    const abortResults = { objects, actions }\n\n    const target = findById(objects, targetId)\n\n    if (!target) {\n        console.warn(`[move] Target ${targetId} not found`)\n        return abortResults\n    }\n\n    const vector = target.rotation\n    let xy = target.xy\n\n    let limit = 15\n\n    while (limit) {\n        limit--\n\n        xy = applyVector(xy, vector)\n        const newXYObjects = findByXY(objects, xy).sort((a, b) => b.aIndex - a.aIndex)\n\n        for (const obj of newXYObjects) {\n            const objDef = getDefinition(obj.type)\n            const event: ActionEvent = { who: target, vector, state, self: obj, force: 100 }\n\n            if (isTooHight(obj, target)) {\n                objects = objects.map(obj => {\n                    if (obj !== target) return obj\n                    return { ...obj, xy }\n                })\n\n                addActions(flyEnd({ targetId, hitTargetId: obj.id }))\n                addActions(objDef.push?.(event))\n                return { objects, actions }\n            }\n        }\n    }\n\n    addActions(flyEnd({ targetId }))\n\n    objects = objects.map(obj => {\n        if (obj !== target) return obj\n        return { ...obj, xy }\n    })\n\n    return { objects, actions }\n}\n\nconst isTooHight = (ontoObj: ObjectInstance, flyer: ObjectInstance) => {\n    const objDef = getDefinition(ontoObj.type)\n    return ontoObj.elevation + objDef.height(ontoObj) > flyer.elevation\n}\n","import { Action } from 'redux'\nimport { MAX_ELEVATION_DIFF, FALL_REMOVE_DELAY, FALL_TRIGGER_DELAY } from '../../config'\nimport { applyVector, asArray, findById, findByXY } from '../../helpers'\nimport { getDefinition } from '../../objects/definitions'\nimport { PLAYER_ID } from '../../types/consts'\nimport { ActionEvent, ObjectInstance, Vector2 } from '../../types/types'\nimport { enqueueAfter, GameState, lose, remove, fall } from '../gameReducer'\nimport { ResolverResults } from './types'\n\nexport const moveResolver = (\n    state: GameState,\n    targetId: string,\n    vector: Vector2,\n): ResolverResults => {\n    let objects = state.objects\n    const actions: Action[] = []\n    const addActions = (a: Action | Action[] = []) => actions.push(...asArray(a))\n\n    const target = findById(objects, targetId)\n\n    if (!target) {\n        console.warn(`[move] Target ${targetId} not found`)\n        return { objects, actions }\n    }\n\n    const newXY = applyVector(target.xy, vector)\n    const newXYObjects = findByXY(objects, newXY).sort((a, b) => b.aIndex - a.aIndex)\n\n    // Nothing there, fall and die\n    if (!newXYObjects.length) {\n        const fallObjects = objects.map(obj => {\n            if (obj !== target) return obj\n            return { ...obj, xy: newXY }\n        })\n        addActions([\n            enqueueAfter({\n                timeout: FALL_TRIGGER_DELAY,\n                actions: [fall({ targetId })],\n            }),\n            enqueueAfter({\n                timeout: FALL_REMOVE_DELAY,\n                actions: [targetId === PLAYER_ID ? lose() : remove(targetId)],\n            }),\n        ])\n        return { objects: fallObjects, actions }\n    }\n\n    // Can enter to this region?\n    for (const obj of newXYObjects) {\n        const objDef = getDefinition(obj.type)\n        const event: ActionEvent = { who: target, vector, state, self: obj }\n\n        if (isTooHight(obj, target)) {\n            addActions(objDef.push?.(event))\n            return { objects, actions }\n        }\n    }\n\n    // Move target to new location\n    objects = objects.map(obj => {\n        if (obj !== target) return obj\n        return { ...obj, xy: newXY, elevation: maxElevation(newXYObjects) }\n    })\n\n    // Post enter events\n    for (const obj of newXYObjects) {\n        const objDef = getDefinition(obj.type)\n        const event: ActionEvent = { who: target, vector, state, self: obj }\n        addActions(objDef.enter?.(event))\n    }\n\n    return { objects, actions }\n}\n\nconst maxElevation = (objects: ObjectInstance[]): number =>\n    Math.max(\n        ...objects.map(obj => {\n            const objDef = getDefinition(obj.type)\n            return objDef.height(obj) + obj.elevation\n        }),\n    )\n\nconst isTooHight = (ontoObj: ObjectInstance, who: ObjectInstance) => {\n    const objDef = getDefinition(ontoObj.type)\n    return ontoObj.elevation + objDef.height(ontoObj) - who.elevation > MAX_ELEVATION_DIFF\n}\n","import { uniqueId } from 'lodash'\nimport { Action } from 'redux'\nimport actionCreatorFactory from 'typescript-fsa'\nimport { reducerWithInitialState } from 'typescript-fsa-reducers'\nimport { PROJECTILE_ELEVATION, FALL_ELEVATION } from '../config'\nimport { arrMerge, findById, findByXY } from '../helpers'\nimport { createMap } from '../mocks/mapMock'\nimport { getDefinition } from '../objects/definitions'\nimport {\n    ActionEvent,\n    ObjectInstance,\n    ObjectInstanceData,\n    ObjectTypes,\n    Vector2,\n    XY,\n    MapData,\n} from '../types/types'\nimport { flyResolver } from './resolvers/flyResolver'\nimport { moveResolver } from './resolvers/moveResolver'\nimport { rotateResolver } from './resolvers/rotateResolver'\nimport { ResolverResults } from './resolvers/types'\n\nexport interface GameState {\n    queueStared: boolean\n    queue: Action[]\n    mapId: string | null\n    mapName: string | null\n    objects: ObjectInstance[]\n    cleanObjectsState: ObjectInstance[]\n}\n\nexport interface GameStateAware {\n    game: GameState\n}\n\n// const mockObjects = createMap()\n\nexport const initialState: GameState = {\n    queueStared: false,\n    queue: [],\n    mapId: null,\n    mapName: null,\n    objects: [],\n    cleanObjectsState: [],\n}\n\nconst gameAction = actionCreatorFactory('GG')\nconst queueAction = actionCreatorFactory('QUEUE')\n\nexport const loadMap = gameAction<MapData>('LOAD_MAP')\nexport const reset = gameAction('RESET')\nexport const win = gameAction('WIN')\nexport const lose = gameAction('LOSE')\n\nexport const enqueue = queueAction<Action | Action[]>('ENQUEUE')\nexport const tryNextAction = queueAction('TRY_NEXT_ACTION')\nexport const nextAction = queueAction<Action>('NEXT_ACTION')\nexport const queueEnd = queueAction('QUEUE_END')\nexport const enqueueAfter = queueAction<{ actions: Action[]; timeout: number }>('ENQUEUE_AFTER')\n\nexport const move = gameAction<{ targetId: string; vector: Vector2 }>('MOVE')\nexport const rotate = gameAction<{ targetId: string; rotation: Vector2 }>('ROTATE')\nexport const equip = gameAction<{ targetId: string }>('EQUIP')\nexport const fall = gameAction<{ targetId: string }>('FALL')\n\nexport const projectile = gameAction<{ instance: ObjectInstance; byId: string }>('PROJECTILE')\nexport const fly = gameAction<{ targetId: string }>('FLY')\nexport const flyEnd = gameAction<{ targetId: string; hitTargetId?: string }>('FLY_END')\n\nexport const updateObject = gameAction<{\n    targetId: string\n    objectValues: Partial<ObjectInstance>\n}>('UPDATE_OBJECT')\nexport const setObjectData = gameAction<{\n    targetId: string\n    data: Partial<ObjectInstanceData>\n}>('SET_OBJECT_DATA')\nexport const remove = gameAction<string>('REMOVE')\nexport const tmpSpawn = gameAction<{ instance: ObjectInstance }>('TMP_SPAWN')\n\nexport const gameReducer = reducerWithInitialState(initialState)\n    /*\n     * Loading\n     */\n    .case(\n        loadMap,\n        (state, { id, name, objects }): GameState => ({\n            ...initialState,\n            mapId: id,\n            mapName: name,\n            objects,\n            cleanObjectsState: objects,\n        }),\n    )\n    .cases(\n        [reset, lose],\n        (state): GameState => ({\n            ...state,\n            queue: [],\n            queueStared: false,\n            objects: state.cleanObjectsState,\n            cleanObjectsState: state.cleanObjectsState,\n        }),\n    )\n    .case(\n        win,\n        (state): GameState => ({\n            ...initialState,\n        }),\n    )\n\n    /*\n     * Queue\n     */\n    .case(\n        enqueue,\n        (state, action): GameState => ({\n            ...state,\n            queue: arrMerge(state.queue, action),\n        }),\n    )\n    .case(\n        nextAction,\n        (state, action): GameState => ({\n            ...state,\n            queueStared: true,\n            queue: state.queue.filter(a => a !== action),\n        }),\n    )\n    .case(queueEnd, (state): GameState => ({ ...state, queueStared: false }))\n\n    /*\n     * User actions\n     */\n    .case(\n        move,\n        (state, { targetId, vector }): GameState => {\n            const { actions, objects } = moveResolver(state, targetId, vector)\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n    .case(\n        rotate,\n        (state, { targetId, rotation }): GameState => {\n            const { actions, objects } = rotateResolver(state, targetId, rotation)\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n    .case(\n        equip,\n        (state, { targetId }): GameState => {\n            const { actions, objects } = equipResolver(state, targetId)\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n\n    /*\n     * Projectiles\n     */\n    .case(\n        projectile,\n        (state, { instance, byId }): GameState => {\n            const objDef = getDefinition(instance.type)\n            const objects = [...state.objects, instance]\n\n            const who = findById(state.objects, byId)!\n            const event: ActionEvent = { who, vector: instance.rotation, state, self: instance }\n\n            const launchActions = objDef.projectileLaunch?.(event) || []\n            const actions = [fly({ targetId: instance.id }), ...launchActions]\n\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n    .case(\n        fly,\n        (state, { targetId }): GameState => {\n            const { actions, objects } = flyResolver(state, targetId)\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n    .case(\n        flyEnd,\n        (state, { targetId, hitTargetId }): GameState => {\n            const obj = findById(state.objects, targetId)\n            const what = hitTargetId ? findById(state.objects, hitTargetId) : undefined\n\n            const actions: Action[] = []\n            if (obj) {\n                const objDef = getDefinition(obj.type)\n                const event: ActionEvent = {\n                    who: null as any, // TODO,\n                    what,\n                    vector: obj.rotation,\n                    state,\n                    self: obj,\n                }\n                const hitActions = objDef.projectileHit?.(event) || []\n                actions.push(...hitActions)\n            }\n            return { ...state, queue: arrMerge(state.queue, actions) }\n        },\n    )\n\n    /*\n     * Edit and internal actions\n     */\n    .case(\n        setObjectData,\n        (state, { targetId, data }): GameState => {\n            const { actions, objects } = setObjectDataResolver(state, targetId, data)\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n    .case(\n        updateObject,\n        (state, { targetId, objectValues }): GameState => {\n            return {\n                ...state,\n                objects: state.objects.map(obj =>\n                    obj.id === targetId ? { ...obj, ...objectValues } : obj,\n                ),\n            }\n        },\n    )\n    .case(\n        fall,\n        (state, { targetId }): GameState => {\n            return {\n                ...state,\n                objects: state.objects.map(obj =>\n                    obj.id === targetId ? { ...obj, elevation: FALL_ELEVATION } : obj,\n                ),\n            }\n        },\n    )\n    .case(\n        remove,\n        (state, targetId): GameState => ({\n            ...state,\n            objects: state.objects.filter(obj => obj.id !== targetId),\n        }),\n    )\n    .case(\n        tmpSpawn,\n        (state, { instance }): GameState => ({\n            ...state,\n            objects: [...state.objects, instance],\n        }),\n    )\n\nexport const equipResolver = (state: GameState, targetId: string): ResolverResults => {\n    const actions: Action[] = []\n    const target = findById(state.objects, targetId)\n    if (!target) return { objects: state.objects, actions: [] }\n\n    const myObjects = findByXY(state.objects, target.xy).sort((a, b) => b.aIndex - a.aIndex)\n\n    for (const obj of myObjects) {\n        const objDef = getDefinition(obj.type)\n        const event: ActionEvent = { who: target, vector: [0, 0], state, self: obj }\n        actions.push(...(objDef.equip?.(event) || []))\n    }\n\n    return {\n        actions,\n        objects: state.objects,\n    }\n}\n\nexport const setObjectDataResolver = (\n    { objects }: GameState,\n    targetId: string,\n    data: Partial<ObjectInstanceData>,\n): ResolverResults => {\n    const target = findById(objects, targetId)\n\n    return {\n        objects: objects.map(obj => {\n            if (obj !== target) return obj\n            return { ...obj, data: { ...obj.data, ...data } }\n        }),\n        actions: [],\n    }\n}\n","import { findById } from '../../helpers'\nimport { Vector2 } from '../../types/types'\nimport { ResolverResults } from './types'\nimport { GameState } from '../gameReducer'\n\nexport const rotateResolver = (\n    { objects }: GameState,\n    targetId: string,\n    rotation: Vector2,\n): ResolverResults => {\n    const target = findById(objects, targetId)\n\n    return {\n        objects: objects.map(obj => {\n            if (obj !== target) return obj\n            return { ...obj, rotation }\n        }),\n        actions: [],\n    }\n}\n","import { first } from 'lodash'\nimport { Action } from 'redux'\nimport { combineEpics, StateObservable } from 'redux-observable'\nimport { concat, Observable, of, timer } from 'rxjs'\nimport { delay, filter, flatMap, map, mapTo, ignoreElements } from 'rxjs/operators'\nimport { DEFAULT_ACTION_DELAY } from '../config'\nimport {\n    enqueue,\n    GameStateAware,\n    nextAction,\n    queueEnd,\n    tryNextAction,\n    tmpSpawn,\n    remove,\n    enqueueAfter,\n} from './gameReducer'\n\nconst enqueueEpic = (\n    actions$: Observable<Action>,\n    state$: StateObservable<GameStateAware>,\n): Observable<Action> =>\n    actions$.pipe(\n        filter(enqueue.match),\n        filter(() => !state$.value.game.queueStared),\n        mapTo(tryNextAction()),\n    )\n\nconst tryNextEpic = (\n    actions$: Observable<Action>,\n    state$: StateObservable<GameStateAware>,\n): Observable<Action> =>\n    actions$.pipe(\n        filter(tryNextAction.match),\n        map(() => first(state$.value.game.queue)),\n        map(action => (action ? nextAction(action) : queueEnd())),\n    )\n\nconst nextActionEpic = (\n    actions$: Observable<Action>,\n    state$: StateObservable<GameStateAware>,\n): Observable<Action> =>\n    actions$.pipe(\n        filter(nextAction.match),\n        flatMap(action => {\n            const newActionDelay = (action.payload as any).meta?.delay || DEFAULT_ACTION_DELAY\n            return concat(of(action.payload), of(tryNextAction()).pipe(delay(newActionDelay)))\n        }),\n    )\n\nconst tmpSpawnEpic = (\n    actions$: Observable<Action>,\n    state$: StateObservable<GameStateAware>,\n): Observable<Action> =>\n    actions$.pipe(\n        filter(tmpSpawn.match),\n        delay(1000),\n        map(action => remove(action.payload.instance.id)),\n    )\n\nconst enqueueAfterEpic = (\n    actions$: Observable<Action>,\n    state$: StateObservable<GameStateAware>,\n): Observable<Action> =>\n    actions$.pipe(\n        filter(enqueueAfter.match),\n        flatMap(({ payload }) =>\n            concat(\n                timer(payload.timeout).pipe(ignoreElements()),\n                of(...payload.actions.map(a => enqueue(a))),\n            ),\n        ),\n    )\n\nexport const gameEpics = combineEpics(\n    enqueueEpic,\n    tryNextEpic,\n    nextActionEpic,\n    enqueueAfterEpic,\n    tmpSpawnEpic,\n)\n","import { Action } from 'redux'\nimport { combineEpics } from 'redux-observable'\nimport { Observable } from 'rxjs'\nimport { filter, ignoreElements, tap } from 'rxjs/operators'\nimport { play, playEngine } from '../audio/play'\nimport { equip, move, lose } from './gameReducer'\nimport { PLAYER_ID } from '../types/consts'\n\nconst moveSoundEpic = (actions$: Observable<Action>): Observable<Action> =>\n    actions$.pipe(\n        filter(move.match),\n        filter(action => action.payload.targetId === PLAYER_ID),\n        tap(() => playEngine(0.1)),\n        ignoreElements(),\n    )\n\nconst equipSoundEpic = (actions$: Observable<Action>): Observable<Action> =>\n    actions$.pipe(\n        filter(equip.match),\n        tap(target => play('Hero_2', 0.7)),\n        ignoreElements(),\n    )\n\nconst loseSoundEpic = (actions$: Observable<Action>): Observable<Action> =>\n    actions$.pipe(\n        filter(lose.match),\n        tap(target => play('Engine_NO_2', 0.7)),\n        ignoreElements(),\n    )\n\nexport const soundEpics = combineEpics(moveSoundEpic, equipSoundEpic, loseSoundEpic)\n","import { applyMiddleware, combineReducers, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { combineEpics, createEpicMiddleware } from 'redux-observable'\nimport { gameEpics } from './gameEpics'\nimport { gameReducer } from './gameReducer'\nimport { soundEpics } from './soundEpics'\n\nconst epicMiddleware = createEpicMiddleware()\n\nconst composeEnhancers = composeWithDevTools({\n    name: 'App',\n})\n\nconst rootReducer = combineReducers({\n    game: gameReducer,\n})\n\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(epicMiddleware)))\n\nepicMiddleware.run(combineEpics(soundEpics, gameEpics))\n","import { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { GameStateAware, updateObject } from '../state/gameReducer'\nimport { ObjectInstance } from '../types/types'\n\nexport const useEditor = () => {\n    const state = useSelector((state: GameStateAware) => state.game)\n    const [editMode, setEditMode] = useState(false)\n    const dispatch = useDispatch()\n\n    const toggleEditMode = () => {\n        setEditMode(!editMode)\n    }\n\n    const edit = (targetId: string, objectValues: Partial<ObjectInstance>) => {\n        dispatch(updateObject({ targetId, objectValues }))\n    }\n\n    const copyMap = () => {\n        const serializedMap = JSON.stringify(state.objects)\n\n        navigator.clipboard.writeText(serializedMap).then(() => {\n            console.log('Copied to clipboard')\n        }, console.error)\n    }\n\n    return { edit, toggleEditMode, editMode, copyMap }\n}\n","import { useEffect } from 'react'\n\nexport const useKeyboardEvent = (key: string, callback: Function) => {\n    useEffect(() => {\n        const handler = (event: KeyboardEvent) => {\n            if (event.key === key) callback()\n        }\n\n        window.addEventListener('keydown', handler)\n\n        return () => window.removeEventListener('keydown', handler)\n    })\n}\n","import { isEmpty } from 'lodash'\nimport React, { useState } from 'react'\nimport { findById } from '../helpers'\nimport { useEditor } from '../hooks/useEditor'\nimport { getDefinition, objectDefinitions } from '../objects/definitions'\nimport { ObjectInstance, ObjectTypes } from '../types/types'\n\ninterface DebugViewProps {\n    objects: ObjectInstance[]\n}\n\nconst size = 60\n\nexport const DebugView = ({ objects }: DebugViewProps) => {\n    const [editId, setEditId] = useState<string>()\n    const { edit, copyMap } = useEditor()\n    const obj = editId && findById(objects, editId)\n    const update = (value: Partial<ObjectInstance>) => {\n        if (obj) edit(obj.id, value)\n    }\n\n    return (\n        <div\n            style={{\n                position: 'absolute',\n                zIndex: 100,\n                top: 0,\n                right: 0,\n                width: size * 8,\n                opacity: 0.8,\n            }}\n        >\n            <button onClick={copyMap}>Copy map</button>\n            {obj && (\n                <>\n                    <input\n                        type=\"range\"\n                        min={-1}\n                        max={5}\n                        step={0.01}\n                        value={obj.elevation}\n                        onChange={event => update({ elevation: parseInt(event.target.value, 10) })}\n                    />\n                    <select\n                        value={obj.type}\n                        onChange={event => update({ type: event.target.value as ObjectTypes })}\n                    >\n                        {Object.keys(objectDefinitions).map(item => (\n                            <option>{item}</option>\n                        ))}\n                    </select>\n                </>\n            )}\n            <div style={{ position: 'relative' }}>\n                {objects.map(obj => {\n                    const { type, id, xy, rotation, elevation, zIndex, data } = obj\n                    const { Component } = getDefinition(type)\n                    return (\n                        <div\n                            key={id}\n                            style={{\n                                position: 'absolute',\n                                left: xy[0] * size,\n                                top: xy[1] * size,\n                                width: size,\n                                height: size,\n                                zIndex,\n                            }}\n                            onClick={() => setEditId(id)}\n                        >\n                            <Component instance={obj}>\n                                {id} - {type} <br />\n                                {isEmpty(data) ? '' : JSON.stringify(data, null, 1)}\n                            </Component>\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n\ninterface LabelProps {\n    text: string\n    bottom?: boolean\n}\n\nexport const Label = ({ text, bottom }: LabelProps) => (\n    <div\n        style={{\n            position: 'absolute',\n            left: 0,\n            top: bottom ? '80%' : 0,\n            fontSize: 10,\n            color: 'black',\n        }}\n    >\n        {text}\n    </div>\n)\n","import React, { useEffect } from 'react'\nimport { Color } from 'three'\nimport { useGame } from '../hooks/useGame'\nimport { useThree } from 'react-three-fiber'\nimport { ObjectInstance } from '../types/types'\nimport { CAMERA_OFFSET } from '../config'\n\nconst d = 5\n\ninterface EnvironmentProps {\n    // player: ObjectInstance,\n    mapId: string | null\n    objectsList: ObjectInstance[]\n}\n\nexport const Environment = ({ objectsList, mapId }: EnvironmentProps) => {\n    const { camera, size } = useThree()\n\n    useEffect(() => {\n        const xValues = objectsList.map(obj => obj.xy[0])\n        const yValues = objectsList.map(obj => obj.xy[1])\n\n        const mapCenterX = Math.max(...xValues) / 2\n        const mapCenterY = Math.max(...yValues) / 2\n\n        const offsetX =\n            (CAMERA_OFFSET[0] * Math.max(mapCenterX, mapCenterY) * 7) /\n            (size.width / size.height) /\n            0.9\n        const offsetY =\n            (CAMERA_OFFSET[1] * Math.max(mapCenterX, mapCenterY) * 7) /\n            (size.width / size.height) /\n            0.9\n        const offsetZ =\n            (CAMERA_OFFSET[2] * Math.max(mapCenterX, mapCenterY) * 7) /\n            (size.width / size.height) /\n            0.9\n\n        camera.position.set(mapCenterX + offsetX, offsetZ, mapCenterY + offsetY)\n        camera.lookAt(mapCenterX, 0, mapCenterY)\n    }, [mapId, size])\n\n    return (\n        <group>\n            <ambientLight intensity={2} color={new Color('#dbab93')} />\n            <pointLight\n                position={[6, 7, 8]}\n                intensity={2.2}\n                color={new Color('#c86b6f')}\n                shadow-mapSize-Height=\"1024\"\n                shadow-mapSize-width=\"1024\"\n                shadow-camera-far={30}\n                shadow-bias={-0.01}\n                castShadow\n                shadow-camera-left={-d}\n                shadow-camera-right={d}\n                shadow-camera-top={d}\n                shadow-camera-bottom={-d}\n            />\n            <pointLight position={[1, 3, 5]} intensity={2.2} color={new Color('#3a8dc2')} />\n        </group>\n    )\n}\n","import { ObjectInstance, MapData } from '../types/types'\nimport map0 from './map0.json'\nimport map1 from './map1.json'\nimport map2 from './map2.json'\n\nexport const maps: MapData[] = [\n    { id: 'map-0', name: 'Test 0', objects: map0 as any },\n    { id: 'map-1', name: 'Test 1', objects: map1 as any },\n    { id: 'map-2', name: 'Test 2', objects: map2 as any },\n]\n","import React, { Suspense, useEffect } from 'react'\nimport { Canvas } from 'react-three-fiber'\nimport { PCFSoftShadowMap } from 'three'\nimport { useEditor } from '../hooks/useEditor'\nimport { useGame } from '../hooks/useGame'\nimport { useKeyboardEvent } from '../hooks/useKeyboardEvent'\nimport { getDefinition } from '../objects/definitions'\nimport { DOWN, LEFT, RIGHT, UP } from '../types/consts'\nimport { DebugView } from './DebugView'\nimport { Environment } from './Environment'\nimport map1 from '../data/map1.json'\nimport map2 from '../data/map2.json'\nimport { ObjectInstance } from '../types/types'\nimport { CAMERA_OFFSET } from '../config'\nimport { maps } from '../data/maps'\n\nexport const GameInstance = () => {\n    const { objects, mapId, mapName, move, equip, fire, loadMap, reset } = useGame()\n    // a ja szukam jakiegos objaect map :(\n    const { editMode, toggleEditMode } = useEditor()\n    useKeyboardEvent('e', toggleEditMode)\n\n    const left = () => move(LEFT)\n    const up = () => move(UP)\n    const down = () => move(DOWN)\n    const right = () => move(RIGHT)\n\n    useKeyboardEvent('r', reset)\n\n    useKeyboardEvent('ArrowLeft', left)\n    useKeyboardEvent('ArrowUp', up)\n    useKeyboardEvent('ArrowDown', down)\n    useKeyboardEvent('ArrowRight', right)\n    useKeyboardEvent('Enter', equip)\n    useKeyboardEvent(' ', fire)\n\n    let mapCenter = [0, 0]\n    objects.forEach(el => {\n        if (el.xy[0] > mapCenter[0]) mapCenter[0] = el.xy[0]\n        if (el.xy[1] > mapCenter[1]) mapCenter[1] = el.xy[0]\n    })\n    mapCenter = mapCenter.map(el => el / 2)\n    // TODO remove when menu will be added\n    useEffect(() => {\n        loadMap(maps[0])\n    }, [])\n\n    return (\n        <>\n            {editMode && <DebugView objects={objects} />}\n            <div\n                style={{\n                    position: 'absolute',\n                    zIndex: 5,\n                    top: 0,\n                    left: 0,\n                }}\n            >\n                {maps.map(map => (\n                    <button key={map.id} onClick={() => loadMap(map)}>\n                        Map {map.name}\n                    </button>\n                ))}\n            </div>\n            {mapName && (\n                <div\n                    style={{\n                        position: 'absolute',\n                        zIndex: 5,\n                        top: 0,\n                        right: 10,\n                    }}\n                >\n                    <h1>Map: {mapName}</h1>\n                </div>\n            )}\n            <div\n                style={{\n                    position: 'absolute',\n                    zIndex: 5,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    textAlign: 'center',\n                }}\n            >\n                <button onClick={left}>\n                    <strong>←</strong>\n                </button>\n                <button onClick={up}>\n                    <strong>↑</strong>\n                </button>\n                <button onClick={down}>\n                    <strong>↓</strong>\n                </button>\n                <button onClick={right}>\n                    <strong>→</strong>\n                </button>\n                <button onClick={equip}>\n                    Equip <small>{`[enter]`}</small>\n                </button>\n                <button onClick={fire}>\n                    Fire <small>{'[space]'}</small>\n                </button>\n                <button onClick={reset}>\n                    Restart <small>{`[R]`}</small>\n                </button>\n            </div>\n            {mapId && (\n                <Canvas\n                    // orthographic\n                    camera={{\n                        zoom: 20,\n                    }}\n                    onCreated={scene => {\n                        scene.gl.shadowMap.type = PCFSoftShadowMap\n                        scene.gl.shadowMap.enabled = true\n                    }}\n                >\n                    <group>\n                        <Environment objectsList={objects} mapId={mapId} />\n                        <Suspense\n                            fallback={\n                                <mesh>\n                                    <boxBufferGeometry attach=\"geometry\" args={[0.5, 0.5, 0.5]} />\n                                    <meshStandardMaterial attach=\"material\" color=\"red\" />\n                                </mesh>\n                            }\n                        >\n                            {objects.map(obj => {\n                                const { Component3d } = getDefinition(obj.type)\n                                return <Component3d key={obj.id} instance={obj} />\n                            })}\n                        </Suspense>\n                    </group>\n                </Canvas>\n            )}\n        </>\n    )\n}\n","import { isEqual, uniqueId } from 'lodash'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Action } from 'redux'\nimport { play } from '../audio/play'\nimport { PROJECTILE_ELEVATION } from '../config'\nimport { findById } from '../helpers'\nimport {\n    enqueue,\n    equip,\n    GameStateAware,\n    loadMap,\n    move,\n    projectile,\n    rotate,\n    reset,\n} from '../state/gameReducer'\nimport { PLAYER_ID } from '../types/consts'\nimport { ObjectInstance, ObjectTypes, Vector2, MapData } from '../types/types'\n\nexport const useGame = () => {\n    const state = useSelector((state: GameStateAware) => state.game)\n    const dispatch = useDispatch()\n    const player = findById(state.objects, PLAYER_ID)!\n\n    if (!player) console.warn(`Player don't exists`)\n\n    const triggerMove = (vector: Vector2) => {\n        if (state.queueStared) return\n\n        const actions: Action[] = []\n\n        if (!player) {\n            return console.warn(`Player don't exists`)\n        }\n\n        if (!isEqual(player.rotation, vector)) {\n            actions.push(rotate({ targetId: player.id, rotation: vector }))\n        } else {\n            actions.push(move({ targetId: player.id, vector }))\n        }\n\n        dispatch(enqueue(actions))\n    }\n\n    const triggerEquip = () => {\n        if (state.queueStared) return\n        dispatch(enqueue(equip({ targetId: player.id })))\n    }\n\n    const triggerFire = () => {\n        if (state.queueStared) return\n        const { id, xy, rotation, elevation, data } = player\n\n        if (!data?.gun) {\n            play('Alert_NO')\n            return\n        }\n\n        let instance: ObjectInstance\n\n        if (data.gun === 'cannon') {\n            instance = {\n                type: ObjectTypes.RocketProjectile,\n                id: uniqueId(),\n                xy,\n                rotation,\n                elevation: elevation + PROJECTILE_ELEVATION,\n                aIndex: 100,\n                zIndex: 10,\n                data,\n            }\n        } else {\n            instance = {\n                type: ObjectTypes.CrossbowProjectile,\n                id: uniqueId(),\n                xy,\n                rotation,\n                elevation: elevation + PROJECTILE_ELEVATION,\n                aIndex: 100,\n                zIndex: 10,\n                data,\n            }\n        }\n\n        dispatch(enqueue(projectile({ byId: id, instance })))\n    }\n\n    const triggerLoadMap = (map: MapData) => {\n        dispatch(loadMap(map))\n    }\n\n    const triggerReset = () => {\n        dispatch(reset())\n    }\n\n    return {\n        ...state,\n        player,\n\n        loadMap: triggerLoadMap,\n        reset: triggerReset,\n\n        move: triggerMove,\n        equip: triggerEquip,\n        fire: triggerFire,\n    }\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { store } from '../state/store'\nimport { GameInstance } from './GameInstance'\n\nexport const App = () => {\n    return (\n        <Provider store={store}>\n            <GameInstance />\n        </Provider>\n    )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './app/App'\nimport './styles/global.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}