{"version":3,"sources":["app/intro/intro.mp4","types/types.ts","config.ts","types/consts.ts","helpers.ts","objects/models/Items.tsx","objects/tileTypeDefinitions.tsx","audio/play.ts","objects/propTypeDefinitions.tsx","objects/definitions.ts","state/resolvers/flyResolver.ts","state/resolvers/grappleResolver.ts","state/resolvers/moveResolver.ts","state/gameReducer.ts","state/resolvers/rotateResolver.ts","state/resolvers/equipResolver.ts","state/localReducer.ts","state/gameEpics.ts","state/soundEpics.ts","state/store.ts","hooks/useGame.ts","app/Environment.tsx","app/GameInstance.tsx","components/Button.tsx","components/Dialog.tsx","data/maps.ts","hooks/useEditor.ts","hooks/useKeyboardEvent.ts","app/DebugView.tsx","app/intro/Intro.tsx","app/Authors.tsx","app/Menu.tsx","hooks/useLocal.ts","app/App.tsx","index.tsx","data/images/1.png","data/images/2.png","data/images/3.png","data/images/4.png","data/images/5.png","data/images/6.png","data/images/7.png","data/images/8.png","data/images/9.png"],"names":["module","exports","ObjectTypes","CAMERA_OFFSET","AUTHORS","name","tech","UP","RIGHT","DOWN","LEFT","applyVector","x","y","findById","props","id","find","prop","findByXY","objects","xy","filter","tile","x1","y1","x2","y2","samePosition","asArray","item","Array","isArray","arrMerge","a","b","limitVector","vector","min","max","map","v","value","Math","limit","vectorDiff","v1","v2","i","createArray","length","from","color","useMyLoader","rocket","useLoader","GLTFLoader","process","cannon","box","rock","fence","arrow","crossbow","graund","wall","grass","water","ice","button","door","wallMetal","pipe","pipeLeft","pipeRight","pipePlace","pipeElement","pipeUp","pipeDown","scene","useAnimationLoader","boring","boom","AssetPreload","model","instance","elevation","rotation","data","castShadow","receiveShadow","elevationFix","clonedModel","useMemo","m","clone","scale","set","children","el","open","position","setY","active","setX","anim","useSpring","pos","rot","vectorToThree","primitive","object","AnimateSelfAsset","animateModel","gltfScene","mixer","AnimationMixer","animations","forEach","clip","index","animation","clipAction","setLoop","LoopOnce","play","useFrame","update","group","PI","tileTypeDefinitions","Grass","height","Component3d","Water","enter","who","self","lose","Ice","move","targetId","RockFloor","Wall","soundList","Alert_NO","Alert_YES","Bazooka","Crossbow","Engine_start","Engine_LOOP_128","Engine_NO_1","Engine_NO_2","Engine_stop","Equip_1","Equip_2","Equip_3","Equip_4","Hero_1","Hero_2","Jump","Explosion_1","Explosion_2","Music","Drone","getAudio","volume","audio","Audio","playEquip","round","random","explosionIndex","engineStart","propTypeDefinitions","Player","models","robotModel","robot","animMixer","visible","hasCannon","hasGrapple","BigRock","Pipe","PipeLeft","PipeRight","PipeUp","PipeDown","PipeElement","push","PipePlace","type","win","Box","Fence","force","removeObject","Button","state","console","warn","toggle","setObjectData","WinTrigger","attach","args","Door","WallMetal","Cannon","equip","Boom","RocketProjectile","projectileLaunch","delay","projectileHit","what","list","playExplosion","tmpSpawn","uniqueId","aIndex","zIndex","CrossbowProjectile","objectDefinitions","getDefinition","def","Error","isTooHight","ontoObj","flyer","objDef","maxElevation","obj","initialState","queueStared","queue","mapId","mapName","cleanObjectsState","winDialog","gameAction","actionCreatorFactory","queueAction","loadMap","unloadMap","reset","showWinDialog","enqueue","tryNextAction","nextAction","queueEnd","rotate","fall","projectile","fly","flyEnd","grapple","updateObject","addObject","gameReducer","reducerWithInitialState","case","action","actions","addActions","target","newXY","newXYObjects","sort","objectValues","event","newElevation","moveResolver","rotateResolver","myObjects","equipResolver","byId","launchActions","abortResults","hitTargetId","flyResolver","undefined","hitActions","projectileInstance","addGrappleAnimation","prevXY","grappleResolver","addCompletedMap","localReducer","completedMaps","uniq","gameEpics","combineEpics","actions$","state$","match","game","mapTo","first","flatMap","newActionDelay","payload","meta","concat","of","soundEpics","tap","setTimeout","pause","ignoreElements","epicMiddleware","createEpicMiddleware","composeEnhancers","composeWithDevTools","rootReducer","combineReducers","local","persistReducer","key","storage","store","createStore","applyMiddleware","persistor","persistStore","run","useGame","useSelector","dispatch","useDispatch","player","rdy","isEqual","fire","Environment","objectsList","useThree","camera","size","useEffect","xValues","yValues","mapCenterX","mapCenterY","offsetX","width","offsetY","offsetZ","lookAt","intensity","Color","shadow-mapSize-Height","shadow-mapSize-width","shadow-camera-far","shadow-bias","shadow-camera-left","shadow-camera-right","shadow-camera-top","shadow-camera-bottom","GameInstance","zoom","onCreated","gl","shadowMap","PCFSoftShadowMap","enabled","fallback","styled","ButtonBlock","div","Dialog","Container","DialogBG","maps","image","level1img","level1","level2img","level2","level3img","level3","level4img","level4","level5img","level5","level6img","level6","level7img","level7","level8img","level8","level9img","level9","map0","map1","map2","mapStarter","useEditor","useState","editMode","setEditMode","add","partialInstance","sample","remove","toggleEditMode","copyMap","serializedMap","JSON","stringify","navigator","clipboard","writeText","then","log","error","useKeyboardEvent","callback","deps","memoisedCallback","useCallback","hotkeys","unbind","DebugView","onClick","MapGrid","Row","Cols","Cell","setOpen","addEmpty","getHeight","CellContainer","CellObj","Remove","field","onChange","CellInfoContainer","style","isEmpty","TextInput","NumberInput","step","parseFloat","Number","isNaN","TypeSelect","Object","keys","ElevationInput","f","RotationInput","label","RotationInputButton","RotationBtn","span","p","DataInput","localData","setLocalData","onFocus","parse","e","Intro","onEnded","Video","autoPlay","src","introVideo","SkipButton","video","Authors","Info","AuthorList","array","arr","slice","j","floor","shuffleArray","href","ul","Menu","isCompleted","includes","useLocal","introPlayed","setIntroPlayed","gameStarted","setGameStarted","musicRef","useRef","droneRef","playMusic","current","currentTime","onEnd","addEventListener","removeEventListener","nextMap","currentIndex","findIndex","left","up","down","right","Title","LevelWrapper","LevelButton","Completed","alt","StartButtonWrapper","StartButton","SmallMenuWrapper","MapName","ControlsWrapper","h1","App","loading","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7a3c8250.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/intro.cc1ac876.mp4\";","import { GameState } from '../state/gameReducer'\nimport { Action } from 'redux'\nimport { FC, ReactNode } from 'react'\n\nexport type XY = [number, number]\nexport type Vector2 = [number, number]\n\nexport enum ObjectTypes {\n    Player = 'Player',\n    WinTrigger = 'WinTrigger',\n\n    Grass = 'Grass',\n    Water = 'Water',\n    RockFloor = 'RockFloor',\n    Wall = 'Wall',\n    Box = 'Box',\n    BigRock = 'BigRock',\n\n    Pipe = 'Pipe',\n    PipeLeft = 'PipeLeft',\n    PipeRight = 'PipeRight',\n    PipePlace = 'PipePlace',\n    PipeUp = 'PipeUp',\n    PipeDown = 'PipeDown',\n    PipeElement = 'PipeElement',\n\n    Fence = 'Fence',\n\n    Button = 'Button',\n    Door = 'Door',\n    WallMetal = 'WallMetal',\n    Ice = 'Ice',\n\n    Crossbow = 'Crossbow',\n    Cannon = 'Cannon',\n    Boom = 'Boom',\n\n    CrossbowProjectile = 'CrossbowProjectile',\n    RocketProjectile = 'RocketProjectile',\n}\n\nexport interface ObjectInstance {\n    type: ObjectTypes\n    id: string\n    xy: XY\n    rotation: Vector2\n    elevation: number\n    zIndex: number\n    aIndex: number\n    data: Partial<ObjectInstanceData>\n}\n\nexport interface ObjectInstanceData {\n    hasCannon: boolean\n    hasGrapple: boolean\n    info: string\n    open: boolean\n    active: boolean\n    targetId: string\n}\n\nexport interface ActionEvent {\n    who: ObjectInstance\n    self: ObjectInstance\n    what?: ObjectInstance\n    vector: Vector2\n    state: GameState\n    force?: number\n}\n\nexport interface ObjectDefinition {\n    name: string\n    height: (instance: ObjectInstance) => number\n    push?(event: ActionEvent): Action[] // triggered when elevation is to big\n    enter?(event: ActionEvent): Action[]\n    leave?(event: ActionEvent): Action[]\n    equip?(event: ActionEvent): Action[]\n    projectileLaunch?(event: ActionEvent): Action[] // eg. for projectile\n    projectileHit?(event: ActionEvent): Action[] // eg. for projectile\n    Component3d(props: RenderComponentProps): any\n}\n\nexport interface RenderComponentProps {\n    instance: ObjectInstance\n}\n\nexport interface MapData {\n    id: string\n    name: string\n    objects: ObjectInstance[]\n    image?: string\n}\n","export const CAMERA_OFFSET = [-2, 4, 6]\n\nexport const MAX_MOVE_ELEVATION = 0.5\n\nexport const PROJECTILE_ELEVATION = 0.8\n\nexport const GRAPPLE_RANGE = 5\nexport const GRAPPLE_ELEVATION = 0.5\nexport const GRAPPLE_MOVE_DELAY = 300\n\nexport const DEFAULT_ACTION_DELAY = 65\n\nexport const FALL_TRIGGER_DELAY = 400\nexport const FALL_REMOVE_DELAY = 800\nexport const FALL_ELEVATION = -5\n\nexport const AUTHORS = [\n    { name: 'Kacper Kozak', tech: '(silnik gry)' },\n    { name: 'Bartosz Kozak', tech: '(silnik gry, grafika 3D)' },\n    { name: 'Maciek Karczewski | Redhatto', tech: '(grafika 3D, artwork)' },\n    { name: 'Leszek Karczewski | DamnDog', tech: '(muzyka i dźwięk)' },\n]\n","import { Vector2 } from './types'\n\nexport const PLAYER_ID = 'player'\n\nexport const UP: Vector2 = [0, -1]\nexport const RIGHT: Vector2 = [1, 0]\nexport const DOWN: Vector2 = [0, 1]\nexport const LEFT: Vector2 = [-1, 0]\n","import { XY, Vector2 } from './types/types'\nimport { sample } from 'lodash'\nimport { UP, LEFT, RIGHT, DOWN } from './types/consts'\n\nexport const reverseVector = (vector: Vector2) => vector.map(v => v * -1) as Vector2\n\nexport const applyVector = ([x, y]: XY, [vx, vy]: Vector2): XY => [x + vx, y + vy]\n\nexport const samePosition = ([x1, y1]: XY, [x2, y2]: XY) => x1 === x2 && y1 === y2\n\nexport const findById = <T extends { id: string }>(props: T[], id: string) => {\n    return props.find(prop => prop.id === id)\n}\n\nexport const findByXY = <T extends { xy: XY }>(objects: T[], xy: XY) => {\n    return objects.filter(tile => samePosition(tile.xy, xy))\n}\n\nexport const asArray = <T>(item: T | T[]): T[] => (Array.isArray(item) ? item : [item])\nexport const arrMerge = <T>(a: T[], b: T | T[] = []): T[] => [...a, ...asArray(b)]\n\nexport const limit = (value: number, min: number, max: number) =>\n    Math.min(max, Math.max(min, value))\n\nexport const limitVector = (vector: Vector2, min: number, max: number) =>\n    vector.map(v => limit(v, min, max)) as Vector2\n\nexport const vectorDiff = (v1: Vector2, v2: Vector2) => v1.map((v, i) => v2[i] - v) as Vector2\n\nexport const createArray = (length: number): number[] =>\n    Array.from({ length: length + 1 }, (v, i) => i)\n\nexport const randomRotation = () => {\n    return sample([UP, LEFT, RIGHT, DOWN])!\n}\n\nexport const shuffleArray = <T>(array: T[]): T[] => {\n    const arr = array.slice()\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1))\n        ;[arr[i], arr[j]] = [arr[j], arr[i]]\n    }\n    return arr\n}\n","import React, { useMemo } from 'react'\nimport { animated, useSpring } from 'react-spring/three'\nimport { useFrame, useLoader } from 'react-three-fiber'\nimport { AnimationMixer, LoopOnce } from 'three'\nimport { GLTF, GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport { RenderComponentProps, Vector2 } from '../../types/types'\n\nconst useMyLoader = () => {\n    // const robot = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/robot_model.gltf`)\n    const rocket = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/rocket.gltf`)\n    const cannon = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/cannon.gltf`)\n    const box = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/box.gltf`)\n    const rock = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/rock1.gltf`)\n    const fence = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/fence.gltf`)\n    const arrow = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/arrow.gltf`)\n    const crossbow = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/crossbow.gltf`)\n    const graund = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/graund.gltf`)\n    const wall = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/wall.gltf`)\n    const grass = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/grass.gltf`)\n    const water = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/water.gltf`)\n    const ice = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/ice.gltf`)\n    const button = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/button.gltf`)\n    const door = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/door.gltf`)\n    const wallMetal = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/wall-metal.gltf`)\n    const pipe = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/pipe.gltf`)\n    const pipeLeft = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/pipe-left.gltf`)\n    const pipeRight = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/pipe-right.gltf`)\n    const pipePlace = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/pipe-place.gltf`)\n    const pipeElement = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/pipe-element.gltf`)\n    const pipeUp = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/pipe-down.gltf`)\n    const pipeDown = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/pipe-down.gltf`)\n    return {\n        // robot: robot.scene,\n        rocket: rocket.scene,\n        cannon: cannon.scene,\n        box: box.scene,\n        rock: rock.scene,\n        fence: fence.scene,\n        arrow: arrow.scene,\n        crossbow: crossbow.scene,\n        graund: graund.scene,\n        wall: wall.scene,\n        grass: grass.scene,\n        water: water.scene,\n        ice: ice.scene,\n        button: button.scene,\n        door: door.scene,\n        wallMetal: wallMetal.scene,\n        pipe: pipe.scene,\n        pipeLeft: pipeLeft.scene,\n        pipeRight: pipeRight.scene,\n        pipePlace: pipePlace.scene,\n        pipeElement: pipeElement.scene,\n        pipeUp: pipeUp.scene,\n        pipeDown: pipeDown.scene,\n    }\n}\nconst useAnimationLoader = () => {\n    // const jump = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/animations/jump.gltf`)\n    const boring = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/animations/boring.gltf`)\n    const boom = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/boom.gltf`)\n\n    return {\n        // jump,\n        boring,\n        boom,\n    }\n}\n\nexport const Box = (props: RenderComponentProps) => {\n    const { box } = useMyLoader()\n    return <AssetPreload {...props} model={box} />\n}\nexport const Rock = (props: RenderComponentProps) => {\n    const { rock } = useMyLoader()\n    return <AssetPreload {...props} model={rock} />\n}\nexport const Fence = (props: RenderComponentProps) => {\n    const { fence } = useMyLoader()\n    return <AssetPreload {...props} model={fence} />\n}\nexport const Arrow = (props: RenderComponentProps) => {\n    const { arrow } = useMyLoader()\n    return <AssetPreload {...props} model={arrow} />\n}\nexport const Boom = (props: RenderComponentProps) => {\n    const { boom } = useAnimationLoader()\n    return <AnimateSelfAsset {...props} animateModel={boom} />\n}\nexport const Cannon = (props: RenderComponentProps) => {\n    const { cannon } = useMyLoader()\n    return <AssetPreload {...props} model={cannon} elevationFix={-0.8} />\n}\nexport const Rocket = (props: RenderComponentProps) => {\n    const { rocket } = useMyLoader()\n    return <AssetPreload {...props} model={rocket} />\n}\nexport const Crossbow = (props: RenderComponentProps) => {\n    const { crossbow } = useMyLoader()\n    return <AssetPreload {...props} model={crossbow} elevationFix={-0.8} />\n}\nexport const Ground = (props: RenderComponentProps) => {\n    const { graund } = useMyLoader()\n    return <AssetPreload {...props} model={graund} castShadow={true} receiveShadow={true} />\n}\nexport const Wall = (props: RenderComponentProps) => {\n    const { wall } = useMyLoader()\n    return <AssetPreload {...props} model={wall} castShadow={true} receiveShadow={true} />\n}\nexport const Grass = (props: RenderComponentProps) => {\n    const { grass } = useMyLoader()\n    return <AssetPreload {...props} model={grass} castShadow={false} receiveShadow={true} />\n}\nexport const Water = (props: RenderComponentProps) => {\n    const { water } = useMyLoader()\n    return <AssetPreload {...props} model={water} castShadow={false} receiveShadow={true} />\n}\nexport const Ice = (props: RenderComponentProps) => {\n    const { ice } = useMyLoader()\n    return <AssetPreload {...props} model={ice} castShadow={false} receiveShadow={true} />\n}\nexport const Button = (props: RenderComponentProps) => {\n    const { button } = useMyLoader()\n    return <AssetPreload {...props} model={button} castShadow={true} receiveShadow={true} />\n}\nexport const Door = (props: RenderComponentProps) => {\n    const { door } = useMyLoader()\n    return <AssetPreload {...props} model={door} castShadow={true} receiveShadow={true} />\n}\nexport const WallMetal = (props: RenderComponentProps) => {\n    const { wallMetal } = useMyLoader()\n    return <AssetPreload {...props} model={wallMetal} castShadow={true} receiveShadow={true} />\n}\nexport const Pipe = (props: RenderComponentProps) => {\n    const { pipe } = useMyLoader()\n    return <AssetPreload {...props} model={pipe} castShadow={true} receiveShadow={true} />\n}\nexport const PipeLeft = (props: RenderComponentProps) => {\n    const { pipeLeft } = useMyLoader()\n    return <AssetPreload {...props} model={pipeLeft} castShadow={true} receiveShadow={true} />\n}\nexport const PipeRight = (props: RenderComponentProps) => {\n    const { pipeRight } = useMyLoader()\n    return <AssetPreload {...props} model={pipeRight} castShadow={true} receiveShadow={true} />\n}\nexport const PipeDown = (props: RenderComponentProps) => {\n    const { pipeDown } = useMyLoader()\n    return <AssetPreload {...props} model={pipeDown} castShadow={true} receiveShadow={true} />\n}\nexport const PipeUp = (props: RenderComponentProps) => {\n    const { pipeUp } = useMyLoader()\n    return <AssetPreload {...props} model={pipeUp} castShadow={true} receiveShadow={true} />\n}\nexport const PipePlace = (props: RenderComponentProps) => {\n    const { pipePlace } = useMyLoader()\n    return <AssetPreload {...props} model={pipePlace} castShadow={true} receiveShadow={true} />\n}\nexport const PipeElement = (props: RenderComponentProps) => {\n    const { pipeElement } = useMyLoader()\n    return <AssetPreload {...props} model={pipeElement} castShadow={true} receiveShadow={true} />\n}\nexport const createTrigger = (color: string) => ({ instance }: RenderComponentProps) => {\n    const { xy, elevation, rotation } = instance\n\n    return (\n        <mesh position={[xy[0], elevation, xy[1]]} rotation={[0, vectorToThree(rotation), 0]}>\n            <boxBufferGeometry attach=\"geometry\" args={[0.5, 1, 0.5]} />\n            <meshStandardMaterial attach=\"material\" color={color} />\n        </mesh>\n    )\n}\n\ninterface AssetsProps extends RenderComponentProps {\n    color?: string\n    castShadow?: boolean\n    receiveShadow?: boolean\n    elevationFix?: number\n}\n\ninterface PreloadAssetProps extends AssetsProps {\n    model: GLTF['scene']\n}\ninterface PreloadAssetAnimateProps extends AssetsProps {\n    animateModel: GLTF\n}\n\nconst AssetPreload = ({\n    model,\n    instance: { xy, elevation, rotation, data },\n    castShadow = true,\n    receiveShadow = true,\n    elevationFix = 0,\n}: PreloadAssetProps) => {\n    const clonedModel = useMemo(() => {\n        const m = model.clone()\n        m.scale.set(0.5, 0.5, 0.5)\n        if (castShadow) m.children.map(el => (el.castShadow = true))\n        if (receiveShadow) m.children.map(el => (el.receiveShadow = true))\n        if (m.children.length > 1) {\n            // data.open && m.children[1].position.setZ(1.5)\n            data.open && m.children[1].position.setY(3)\n            data.active && m.children[1].position.setX(-0.2)\n        }\n        return m\n    }, [model, castShadow, receiveShadow, data])\n\n    const anim = useSpring({\n        pos: [xy[0], elevation + elevationFix, xy[1]],\n        rot: [0, vectorToThree(rotation), 0],\n    })\n\n    return <animated.primitive object={clonedModel} position={anim.pos} rotation={anim.rot} />\n}\n\nexport const Player = ({\n    instance: { xy, elevation, rotation, data },\n    castShadow = true,\n    receiveShadow = true,\n}: AssetsProps) => {\n    const anim = useSpring({\n        pos: [xy[0], elevation, xy[1]],\n        rot: [0, vectorToThree(rotation), 0],\n    })\n\n    const models = useMyLoader()\n    const robotModel = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/robot_model.gltf`)\n\n    const { boring } = useAnimationLoader()\n\n    const { robot, cannon, crossbow, animMixer } = useMemo(() => {\n        const cannon = models.cannon.clone()\n        const crossbow = models.crossbow.clone()\n        const robot = robotModel.scene.clone()\n        const animMixer = new AnimationMixer(boring.scene)\n        robot.scale.set(0.5, 0.5, 0.5)\n        robot.children.map(el => (el.castShadow = true))\n        robot.children.map(el => (el.receiveShadow = true))\n\n        boring.animations.forEach(clip => {\n            animMixer.clipAction(clip, robot).play()\n        })\n\n        return {\n            cannon,\n            crossbow,\n            robot,\n            animMixer,\n        }\n    }, [models.cannon, models.crossbow, castShadow, receiveShadow])\n\n    useFrame(() => {\n        animMixer.update(0.02)\n    })\n\n    return (\n        <animated.group position={anim.pos} rotation={anim.rot}>\n            <primitive object={robot}>\n                <primitive object={cannon} visible={!!data.hasCannon} />\n                <primitive object={crossbow} visible={!!data.hasGrapple} />\n            </primitive>\n        </animated.group>\n    )\n}\n\nconst AnimateSelfAsset = ({\n    animateModel,\n    instance: { xy, elevation, rotation, data },\n    castShadow = true,\n    receiveShadow = true,\n}: PreloadAssetAnimateProps) => {\n    const anim = useSpring({\n        pos: [xy[0], elevation, xy[1]],\n        rot: [0, vectorToThree(rotation), 0],\n    })\n\n    const { gltfScene, mixer } = useMemo(() => {\n        const gltfScene = animateModel.scene.clone()\n        gltfScene.scale.set(0.6, 0.6, 0.6)\n\n        if (castShadow) gltfScene.children[0].castShadow = true\n        if (receiveShadow) gltfScene.children[0].receiveShadow = true\n\n        const mixer = new AnimationMixer(gltfScene)\n        animateModel.animations.forEach((clip, index) => {\n            const animation = mixer.clipAction(clip, gltfScene.children[index])\n            animation.setLoop(LoopOnce, 1)\n            animation.play()\n        })\n\n        return { gltfScene, mixer }\n    }, [castShadow, receiveShadow, animateModel])\n\n    useFrame(() => {\n        mixer.update(0.03)\n    })\n\n    return (\n        <animated.group position={anim.pos} rotation={anim.rot}>\n            <primitive object={gltfScene} />\n        </animated.group>\n    )\n}\n\nconst vectorToThree = (vector: Vector2) => {\n    if (vector[0] === 1 && vector[1] === 0) return Math.PI / 2\n    if (vector[0] === 0 && vector[1] === -1) return (Math.PI / 2) * 2\n    if (vector[0] === -1 && vector[1] === 0) return (Math.PI / 2) * 3\n    if (vector[0] === 0 && vector[1] === 1) return (Math.PI / 2) * 4\n    // return (Math.PI / 2) * 4\n    return 0\n}\n","import { limitVector } from '../helpers'\nimport { lose, move } from '../state/gameReducer'\nimport { PLAYER_ID } from '../types/consts'\nimport { ObjectDefinition, ObjectTypes } from '../types/types'\nimport { Grass, Ground, Ice, Wall, Water } from './models/Items'\n\nexport const tileTypeDefinitions: Partial<Record<ObjectTypes, ObjectDefinition>> = {\n    [ObjectTypes.Grass]: {\n        name: 'Grass',\n        height: () => 0,\n        Component3d: Grass,\n    },\n    [ObjectTypes.Water]: {\n        name: 'Water',\n        height: () => -1,\n        enter: ({ who, self }) => {\n            return who.id === PLAYER_ID ? [lose()] : []\n        },\n        Component3d: Water,\n    },\n\n    [ObjectTypes.Ice]: {\n        name: 'Ice',\n        height: () => 0,\n        enter: ({ who, vector }) => [\n            move({ targetId: who.id, vector: limitVector(vector, -1, 1) }),\n        ],\n        Component3d: Ice,\n    },\n    [ObjectTypes.RockFloor]: {\n        name: 'Rock floor',\n        height: () => 0,\n        Component3d: Ground,\n    },\n    [ObjectTypes.Wall]: {\n        name: 'Wall',\n        height: () => 0,\n        Component3d: Wall,\n    },\n}\n","const soundList = {\n    button: `${process.env.PUBLIC_URL}/sounds/Button_gameplay.mp3`,\n    // music: `${process.env.PUBLIC_URL}/sounds/elementary1.mp3`,\n    Alert_NO: `${process.env.PUBLIC_URL}/sounds/Alert_NO.mp3`,\n    Alert_YES: `${process.env.PUBLIC_URL}/sounds/Alert_YES.mp3`,\n    Bazooka: `${process.env.PUBLIC_URL}/sounds/Bazooka.mp3`,\n    Crossbow: `${process.env.PUBLIC_URL}/sounds/Crossbow.mp3`,\n    Engine_start: `${process.env.PUBLIC_URL}/sounds/Engine_start.mp3`,\n    Engine_LOOP_128: `${process.env.PUBLIC_URL}/sounds/Engine_LOOP_128.mp3`,\n    Engine_NO_1: `${process.env.PUBLIC_URL}/sounds/Engine_NO_1.mp3`,\n    Engine_NO_2: `${process.env.PUBLIC_URL}/sounds/Engine_NO_2.mp3`,\n    Engine_stop: `${process.env.PUBLIC_URL}/sounds/Engine_stop.mp3`,\n    Equip_1: `${process.env.PUBLIC_URL}/sounds/Equip_1.mp3`,\n    Equip_2: `${process.env.PUBLIC_URL}/sounds/Equip_2.mp3`,\n    Equip_3: `${process.env.PUBLIC_URL}/sounds/Equip_3.mp3`,\n    Equip_4: `${process.env.PUBLIC_URL}/sounds/Equip_4.mp3`,\n    Hero_1: `${process.env.PUBLIC_URL}/sounds/Hero_1.mp3`,\n    Hero_2: `${process.env.PUBLIC_URL}/sounds/Hero_2.mp3`,\n    Jump: `${process.env.PUBLIC_URL}/sounds/Jump.mp3`,\n    Explosion_1: `${process.env.PUBLIC_URL}/sounds/Explosion_1.mp3`,\n    Explosion_2: `${process.env.PUBLIC_URL}/sounds/Explosion_2.mp3`,\n\n    Music: `${process.env.PUBLIC_URL}/music/Music.mp3`,\n    Drone: `${process.env.PUBLIC_URL}/music/Drone.mp3`,\n}\n\nexport type SoundName = keyof typeof soundList\n\nconst masterVolume = 0.5\n\nexport const getAudio = (name: SoundName, volume?: number) => {\n    const audio = new Audio(soundList[name])\n    audio.volume = masterVolume\n    if (volume) audio.volume = volume * masterVolume\n    return audio\n}\n\nexport const play = (name: SoundName, volume?: number) => {\n    getAudio(name).play()\n}\n\nexport const playEquip = (volume?: number) => {\n    const list = ['Equip_1', 'Equip_2', 'Equip_3', 'Equip_4']\n    play(list[Math.round(Math.random() * 4)] as SoundName, volume)\n}\n\nlet explosionIndex = 0\nexport const playExplosion = (volume?: number) => {\n    const list = ['Explosion_1', 'Explosion_2']\n    play(list[explosionIndex] as SoundName, volume)\n    explosionIndex += 1\n    if (explosionIndex > list.length - 1) explosionIndex = 0\n}\n\nconst engineStart = new Audio(soundList['Engine_LOOP_128'])\n\nexport const playEngine = (volume?: number) => {\n    if (volume) engineStart.volume = volume\n    // const playEnd = () => {\n    //     play('Engine_stop', volume)\n    //     engineStart.removeEventListener('ended', playEnd)\n    // }\n    engineStart.play()\n    setTimeout(() => engineStart.pause(), 300)\n    // engineStart.removeEventListener('ended', playEnd)\n    // engineStart.addEventListener('ended', playEnd)\n}\n","import { uniqueId } from 'lodash'\nimport { play, playEquip, playExplosion } from '../audio/play'\nimport { reverseVector } from '../helpers'\nimport { move, removeObject, setObjectData, tmpSpawn, win } from '../state/gameReducer'\nimport { PLAYER_ID } from '../types/consts'\nimport { ObjectDefinition, ObjectTypes } from '../types/types'\nimport {\n    Arrow,\n    Boom,\n    Box,\n    Button,\n    Cannon,\n    createTrigger,\n    Crossbow,\n    Door,\n    Fence,\n    Pipe,\n    PipeDown,\n    PipeElement,\n    PipeLeft,\n    PipePlace,\n    PipeRight,\n    PipeUp,\n    Player,\n    Rock,\n    Rocket,\n    WallMetal,\n} from './models/Items'\n\nexport const propTypeDefinitions: Partial<Record<ObjectTypes, ObjectDefinition>> = {\n    [ObjectTypes.Player]: {\n        name: 'Player',\n        height: () => 2,\n        Component3d: Player,\n    },\n\n    [ObjectTypes.BigRock]: {\n        name: 'Big rock',\n        height: () => 0.55,\n        Component3d: Rock,\n    },\n    [ObjectTypes.Pipe]: {\n        name: 'Pipe',\n        height: () => 0.75,\n        Component3d: Pipe,\n    },\n\n    [ObjectTypes.PipeLeft]: {\n        name: 'PipeLeft',\n        height: () => 0.75,\n        Component3d: PipeLeft,\n    },\n    [ObjectTypes.PipeRight]: {\n        name: 'PipeRight',\n        height: () => 0.75,\n        Component3d: PipeRight,\n    },\n    [ObjectTypes.PipeUp]: {\n        name: 'PipeUp',\n        height: () => 0.75,\n        Component3d: PipeUp,\n    },\n    [ObjectTypes.PipeDown]: {\n        name: 'PipeDown',\n        height: () => 0.75,\n        Component3d: PipeDown,\n    },\n    [ObjectTypes.PipeElement]: {\n        name: 'PipeElement',\n        height: () => 0.9,\n        push: ({ self, vector }) => [move({ targetId: self.id, vector })],\n        Component3d: PipeElement,\n    },\n    [ObjectTypes.PipePlace]: {\n        name: 'PipePlace',\n        height: () => 0.14,\n        enter: ({ who }) => {\n            if (who.type === ObjectTypes.PipeElement) {\n                play('Engine_start')\n                return [win()]\n            }\n            return []\n        },\n        Component3d: PipePlace,\n    },\n\n    [ObjectTypes.Box]: {\n        name: 'Box',\n        height: () => 1,\n        push: ({ self, vector }) => [move({ targetId: self.id, vector })],\n        Component3d: Box,\n    },\n\n    [ObjectTypes.Fence]: {\n        name: 'Fence',\n        height: () => 1.2,\n        push: ({ force, self }) => {\n            if (force && force >= 50) return [removeObject(self.id)]\n            return []\n        },\n        Component3d: Fence,\n    },\n\n    [ObjectTypes.Button]: {\n        name: 'Button',\n        height: () => 2,\n        push: ({ state, self }) => {\n            play('button')\n            if (!self.data.targetId) {\n                console.warn('Missing Button data.targetId')\n                return []\n            }\n            const toggle = !self.data.active\n            return [\n                setObjectData({ targetId: self.id, data: { active: toggle } }),\n                setObjectData({ targetId: self.data.targetId, data: { open: toggle } }),\n            ]\n        },\n        Component3d: Button,\n    },\n\n    [ObjectTypes.WinTrigger]: {\n        name: 'WinTrigger',\n        height: () => 0,\n        enter: ({ who, state, self }) => {\n            if (who.id === PLAYER_ID) {\n                play('Engine_start')\n                return [win()]\n            }\n            return []\n        },\n        Component3d: createTrigger('#ABC123'),\n    },\n\n    [ObjectTypes.Door]: {\n        name: 'Door',\n        height: instance => (instance.data.open ? 0 : 1.2),\n        Component3d: Door,\n    },\n    [ObjectTypes.WallMetal]: {\n        name: 'WallMetal',\n        height: () => 1.2,\n        Component3d: WallMetal,\n    },\n\n    [ObjectTypes.Cannon]: {\n        name: 'Cannon',\n        height: () => 0,\n        equip: ({ who, self }) => {\n            playEquip(0.8)\n            return [\n                setObjectData({ targetId: who.id, data: { hasCannon: true } }),\n                removeObject(self.id),\n            ]\n        },\n        Component3d: Cannon,\n    },\n\n    [ObjectTypes.Boom]: {\n        name: 'Boom',\n        height: () => 0,\n        Component3d: Boom,\n    },\n\n    [ObjectTypes.Crossbow]: {\n        name: 'Crossbow',\n        height: () => 0,\n        equip: ({ who, self }) => {\n            playEquip(0.8)\n            return [\n                setObjectData({ targetId: who.id, data: { hasGrapple: true } }),\n                removeObject(self.id),\n            ]\n        },\n        Component3d: Crossbow,\n    },\n\n    [ObjectTypes.RocketProjectile]: {\n        name: 'RocketProjectile',\n        height: () => 0,\n        projectileLaunch: ({ who }) => {\n            play('Bazooka')\n            return [\n                move(\n                    { targetId: who.id, vector: reverseVector(who.rotation) },\n                    { delay: 250 }, // delay remove from projectileHit\n                ),\n            ]\n        },\n        projectileHit: ({ self, what, who }) => {\n            if (!what) {\n                return [removeObject(self.id)]\n            }\n\n            playExplosion(1)\n            return [\n                removeObject(self.id),\n                tmpSpawn({\n                    instance: {\n                        type: ObjectTypes.Boom,\n                        id: uniqueId(),\n                        xy: self.xy,\n                        elevation: self.elevation,\n                        rotation: self.rotation,\n                        aIndex: 0,\n                        zIndex: 20,\n                        data: {},\n                    },\n                }),\n            ]\n        },\n        Component3d: Rocket,\n    },\n\n    [ObjectTypes.CrossbowProjectile]: {\n        name: 'Projectile',\n        height: () => 0,\n        projectileLaunch: ({ who }) => {\n            play('Crossbow')\n            return [\n                move(\n                    { targetId: who.id, vector: [0, 0] },\n                    { delay: 250 }, // delay remove from projectileHit\n                ),\n            ]\n        },\n        projectileHit: ({ self, what, who }) => {\n            if (what) {\n                play('Alert_YES') // TODO Hit!\n            }\n            return [removeObject(self.id)]\n        },\n        Component3d: Arrow,\n    },\n}\n","import { ObjectDefinition, ObjectTypes } from '../types/types'\nimport { tileTypeDefinitions } from './tileTypeDefinitions'\nimport { propTypeDefinitions } from './propTypeDefinitions'\n\nexport const objectDefinitions: Partial<Record<ObjectTypes, ObjectDefinition>> = {\n    ...tileTypeDefinitions,\n    ...propTypeDefinitions,\n}\n\nexport const getDefinition = (type: ObjectTypes): ObjectDefinition => {\n    const def = objectDefinitions[type]\n\n    if (!def) throw new Error(`[getDefinition] Definition for ${type} not found`)\n\n    return def\n}\n","import { Action } from 'redux'\nimport { applyVector, asArray, findById, findByXY } from '../../helpers'\nimport { getDefinition } from '../../objects/definitions'\nimport { ActionEvent, ObjectInstance } from '../../types/types'\nimport { GameState, flyEnd } from '../gameReducer'\nimport { ResolverResults } from './types'\n\nexport const flyResolver = (state: GameState, targetId: string): ResolverResults => {\n    let objects = state.objects\n    const actions: Action[] = []\n    const addActions = (a: Action | Action[] = []) => actions.push(...asArray(a))\n    const abortResults = { objects, actions }\n\n    const target = findById(objects, targetId)\n\n    if (!target) {\n        console.warn(`[move] Target ${targetId} not found`)\n        return abortResults\n    }\n\n    const vector = target.rotation\n    let xy = target.xy\n\n    let limit = 15\n\n    while (limit) {\n        limit--\n\n        xy = applyVector(xy, vector)\n        const newXYObjects = findByXY(objects, xy).sort((a, b) => b.aIndex - a.aIndex)\n\n        for (const obj of newXYObjects) {\n            const objDef = getDefinition(obj.type)\n            const event: ActionEvent = { who: target, vector, state, self: obj, force: 100 }\n\n            if (isTooHight(obj, target)) {\n                objects = objects.map(obj => {\n                    if (obj !== target) return obj\n                    return { ...obj, xy }\n                })\n\n                addActions(flyEnd({ targetId, hitTargetId: obj.id }))\n                addActions(objDef.push?.(event))\n                return { objects, actions }\n            }\n        }\n    }\n\n    addActions(flyEnd({ targetId }))\n\n    objects = objects.map(obj => {\n        if (obj !== target) return obj\n        return { ...obj, xy }\n    })\n\n    return { objects, actions }\n}\n\nconst isTooHight = (ontoObj: ObjectInstance, flyer: ObjectInstance) => {\n    const objDef = getDefinition(ontoObj.type)\n    return ontoObj.elevation + objDef.height(ontoObj) > flyer.elevation\n}\n","import { uniqueId } from 'lodash'\nimport { Action } from 'redux'\nimport {\n    GRAPPLE_ELEVATION,\n    PROJECTILE_ELEVATION,\n    GRAPPLE_MOVE_DELAY,\n    GRAPPLE_RANGE,\n} from '../../config'\nimport { applyVector, asArray, findById, findByXY, vectorDiff } from '../../helpers'\nimport { getDefinition } from '../../objects/definitions'\nimport { ObjectInstance, ObjectTypes, Vector2 } from '../../types/types'\nimport { GameState, move, tmpSpawn, updateObject } from '../gameReducer'\nimport { ResolverResults } from './types'\n\nexport const grappleResolver = (state: GameState, targetId: string): ResolverResults => {\n    let objects = state.objects\n    const actions: Action[] = []\n    const addActions = (a: Action | Action[] = []) => actions.push(...asArray(a))\n    const abortResults = { objects, actions }\n\n    const target = findById(objects, targetId)\n\n    if (!target) {\n        console.warn(`[grappleResolver] Target ${targetId} not found`)\n        return abortResults\n    }\n\n    const projectileInstance: ObjectInstance = {\n        type: ObjectTypes.CrossbowProjectile,\n        id: uniqueId(),\n        xy: target.xy,\n        rotation: target.rotation,\n        elevation: target.elevation + PROJECTILE_ELEVATION,\n        aIndex: 100,\n        zIndex: 10,\n        data: {},\n    }\n\n    const addGrappleAnimation = () => {\n        addActions(tmpSpawn({ instance: projectileInstance }))\n        addActions(\n            updateObject(\n                { targetId: projectileInstance.id, objectValues: { xy } },\n                { delay: GRAPPLE_MOVE_DELAY },\n            ),\n        )\n    }\n\n    const vector = target.rotation\n    let xy = target.xy\n\n    let limit = GRAPPLE_RANGE\n\n    while (limit) {\n        limit--\n\n        const prevXY = xy\n        xy = applyVector(xy, vector)\n        const newXYObjects = findByXY(objects, xy).sort((a, b) => b.aIndex - a.aIndex)\n\n        for (const obj of newXYObjects) {\n            if (isTooHight(obj, target)) {\n                addGrappleAnimation()\n                addActions(\n                    move({\n                        targetId,\n                        vector: vectorDiff(target.xy, prevXY),\n                    }),\n                )\n\n                return { objects, actions }\n            }\n        }\n    }\n\n    // miss\n    addGrappleAnimation()\n\n    return { objects, actions }\n}\n\nconst isTooHight = (ontoObj: ObjectInstance, flyer: ObjectInstance) => {\n    const objDef = getDefinition(ontoObj.type)\n    return ontoObj.elevation + objDef.height(ontoObj) > flyer.elevation + GRAPPLE_ELEVATION\n}\n","import { Action } from 'redux'\nimport { FALL_REMOVE_DELAY, FALL_TRIGGER_DELAY, MAX_MOVE_ELEVATION } from '../../config'\nimport { applyVector, asArray, findById, findByXY } from '../../helpers'\nimport { getDefinition } from '../../objects/definitions'\nimport { PLAYER_ID } from '../../types/consts'\nimport { ActionEvent, ObjectInstance, Vector2 } from '../../types/types'\nimport { fall, GameState, lose, removeObject, updateObject } from '../gameReducer'\nimport { ResolverResults } from './types'\n\nexport const moveResolver = (\n    state: GameState,\n    targetId: string,\n    vector: Vector2,\n): ResolverResults => {\n    const { objects } = state\n    const actions: Action[] = []\n    const addActions = (a: Action | Action[] = []) => actions.push(...asArray(a))\n\n    const target = findById(objects, targetId)\n\n    if (!target) {\n        console.warn(`[move] Target ${targetId} not found`)\n        return { objects, actions }\n    }\n\n    const newXY = applyVector(target.xy, vector)\n    const newXYObjects = findByXY(objects, newXY).sort((a, b) => b.aIndex - a.aIndex)\n\n    // Nothing there, fall and die\n    if (!newXYObjects.length) {\n        addActions([\n            updateObject({ targetId, objectValues: { xy: newXY } }, { delay: FALL_TRIGGER_DELAY }),\n            fall({ targetId }, { delay: FALL_REMOVE_DELAY }),\n            targetId === PLAYER_ID ? lose() : removeObject(targetId),\n        ])\n        return { objects, actions }\n    }\n\n    // Can enter to this region?\n    for (const obj of newXYObjects) {\n        const objDef = getDefinition(obj.type)\n        const event: ActionEvent = { who: target, vector, state, self: obj }\n\n        if (isTooHight(obj, target)) {\n            addActions(objDef.push?.(event))\n            return { objects, actions }\n        }\n    }\n\n    const newElevation = maxElevation(newXYObjects)\n\n    // Post enter events\n    for (const obj of newXYObjects) {\n        const objDef = getDefinition(obj.type)\n\n        // skip when we are higher than this object eg. box in water\n        if (newElevation > obj.elevation + objDef.height(obj)) {\n            continue\n        }\n\n        const event: ActionEvent = { who: target, vector, state, self: obj }\n        addActions(objDef.enter?.(event))\n    }\n\n    // Move target to new location\n    const newObjects = objects.map(obj => {\n        if (obj !== target) return obj\n        return { ...obj, xy: newXY, elevation: newElevation }\n    })\n\n    return { objects: newObjects, actions }\n}\n\nconst maxElevation = (objects: ObjectInstance[]): number =>\n    Math.max(\n        ...objects.map(obj => {\n            const objDef = getDefinition(obj.type)\n            return objDef.height(obj) + obj.elevation\n        }),\n    )\n\nconst isTooHight = (ontoObj: ObjectInstance, who: ObjectInstance) => {\n    const objDef = getDefinition(ontoObj.type)\n    return ontoObj.elevation + objDef.height(ontoObj) - who.elevation > MAX_MOVE_ELEVATION\n}\n","import { Action } from 'redux'\nimport actionCreatorFactory from 'typescript-fsa'\nimport { reducerWithInitialState } from 'typescript-fsa-reducers'\nimport { FALL_ELEVATION } from '../config'\nimport { arrMerge, findById } from '../helpers'\nimport { getDefinition } from '../objects/definitions'\nimport { ActionEvent, MapData, ObjectInstance, ObjectInstanceData, Vector2 } from '../types/types'\nimport { equipResolver } from './resolvers/equipResolver'\nimport { flyResolver } from './resolvers/flyResolver'\nimport { grappleResolver } from './resolvers/grappleResolver'\nimport { moveResolver } from './resolvers/moveResolver'\nimport { rotateResolver } from './resolvers/rotateResolver'\n\nexport interface GameState {\n    queueStared: boolean\n    queue: Action[]\n    mapId: string | null\n    mapName: string | null\n    objects: ObjectInstance[]\n    cleanObjectsState: ObjectInstance[]\n    winDialog: boolean\n}\n\nexport interface GameStateAware {\n    game: GameState\n}\n\n// const mockObjects = createMap()\n\nexport const initialState: GameState = {\n    queueStared: false,\n    queue: [],\n    mapId: null,\n    mapName: null,\n    objects: [],\n    cleanObjectsState: [],\n    winDialog: false,\n}\n\nconst gameAction = actionCreatorFactory('GG')\nconst queueAction = actionCreatorFactory('QUEUE')\n\nexport const loadMap = gameAction<MapData>('LOAD_MAP')\nexport const unloadMap = gameAction('UNLOAD_MAP')\nexport const reset = gameAction('RESET')\nexport const win = gameAction('WIN')\nexport const showWinDialog = gameAction('SHOW_WIN_DIALOG')\nexport const lose = gameAction('LOSE')\n\nexport const enqueue = queueAction<Action | Action[]>('ENQUEUE')\nexport const tryNextAction = queueAction('TRY_NEXT_ACTION')\nexport const nextAction = queueAction<Action>('NEXT_ACTION')\nexport const queueEnd = queueAction('QUEUE_END')\n\nexport const move = gameAction<{ targetId: string; vector: Vector2 }>('MOVE')\nexport const rotate = gameAction<{ targetId: string; rotation: Vector2 }>('ROTATE')\nexport const equip = gameAction<{ targetId: string }>('EQUIP')\nexport const fall = gameAction<{ targetId: string }>('FALL')\n\nexport const projectile = gameAction<{ instance: ObjectInstance; byId: string }>('PROJECTILE')\nexport const fly = gameAction<{ targetId: string }>('FLY')\nexport const flyEnd = gameAction<{ targetId: string; hitTargetId?: string }>('FLY_END')\nexport const grapple = gameAction<{ targetId: string }>('GRAPPLE')\n\nexport const updateObject = gameAction<{\n    targetId: string\n    objectValues: Partial<ObjectInstance>\n}>('UPDATE_OBJECT')\nexport const setObjectData = gameAction<{\n    targetId: string\n    data: Partial<ObjectInstanceData>\n}>('SET_OBJECT_DATA')\nexport const removeObject = gameAction<string>('REMOVE')\nexport const addObject = gameAction<ObjectInstance>('ADD')\nexport const tmpSpawn = gameAction<{ instance: ObjectInstance }>('TMP_SPAWN')\n\nexport const gameReducer = reducerWithInitialState(initialState)\n    /*\n     * Loading\n     */\n    .case(\n        loadMap,\n        (state, { id, name, objects }): GameState => ({\n            ...initialState,\n            mapId: id,\n            mapName: name,\n            objects,\n            cleanObjectsState: objects,\n        }),\n    )\n    .case(unloadMap, (): GameState => initialState)\n    .case(\n        reset,\n        (state): GameState => ({\n            ...state,\n            queue: [],\n            queueStared: false,\n            objects: state.cleanObjectsState,\n            cleanObjectsState: state.cleanObjectsState,\n            winDialog: false,\n        }),\n    )\n    .case(\n        showWinDialog,\n        (state): GameState => ({\n            ...state,\n            winDialog: true,\n        }),\n    )\n\n    /*\n     * Queue\n     */\n    .case(\n        enqueue,\n        (state, action): GameState => ({\n            ...state,\n            queue: arrMerge(state.queue, action),\n        }),\n    )\n    .case(\n        nextAction,\n        (state, action): GameState => ({\n            ...state,\n            queueStared: true,\n            queue: state.queue.filter(a => a !== action),\n        }),\n    )\n    .case(queueEnd, (state): GameState => ({ ...state, queueStared: false }))\n\n    /*\n     * User actions\n     */\n    .case(\n        move,\n        (state, { targetId, vector }): GameState => {\n            const { actions, objects } = moveResolver(state, targetId, vector)\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n    .case(\n        rotate,\n        (state, { targetId, rotation }): GameState => {\n            const { actions, objects } = rotateResolver(state, targetId, rotation)\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n    .case(\n        equip,\n        (state, { targetId }): GameState => {\n            const { actions, objects } = equipResolver(state, targetId)\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n\n    /*\n     * Projectiles\n     */\n    .case(\n        projectile,\n        (state, { instance, byId }): GameState => {\n            const objDef = getDefinition(instance.type)\n            const objects = [...state.objects, instance]\n\n            const who = findById(state.objects, byId)!\n            const event: ActionEvent = { who, vector: instance.rotation, state, self: instance }\n\n            const launchActions = objDef.projectileLaunch?.(event) || []\n            const actions = [fly({ targetId: instance.id }), ...launchActions]\n\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n    .case(\n        fly,\n        (state, { targetId }): GameState => {\n            const { actions, objects } = flyResolver(state, targetId)\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n    .case(\n        flyEnd,\n        (state, { targetId, hitTargetId }): GameState => {\n            const obj = findById(state.objects, targetId)\n            const what = hitTargetId ? findById(state.objects, hitTargetId) : undefined\n\n            const actions: Action[] = []\n            if (obj) {\n                const objDef = getDefinition(obj.type)\n                const event: ActionEvent = {\n                    who: null as any, // TODO,\n                    what,\n                    vector: obj.rotation,\n                    state,\n                    self: obj,\n                }\n                const hitActions = objDef.projectileHit?.(event) || []\n                actions.push(...hitActions)\n            }\n            return { ...state, queue: arrMerge(state.queue, actions) }\n        },\n    )\n\n    /*\n     * Grapple\n     */\n    .case(\n        grapple,\n        (state, { targetId }): GameState => {\n            const { actions, objects } = grappleResolver(state, targetId)\n            return {\n                ...state,\n                objects,\n                queue: arrMerge(state.queue, actions),\n            }\n        },\n    )\n\n    /*\n     * Edit and internal actions\n     */\n    .case(\n        setObjectData,\n        (state, { targetId, data }): GameState => {\n            const target = findById(state.objects, targetId)\n\n            return {\n                ...state,\n                objects: state.objects.map(obj => {\n                    if (obj !== target) return obj\n                    return { ...obj, data: { ...obj.data, ...data } }\n                }),\n            }\n        },\n    )\n    .case(\n        updateObject,\n        (state, { targetId, objectValues }): GameState => {\n            return {\n                ...state,\n                objects: state.objects.map(obj =>\n                    obj.id === targetId ? { ...obj, ...objectValues } : obj,\n                ),\n            }\n        },\n    )\n    .case(\n        removeObject,\n        (state, targetId): GameState => ({\n            ...state,\n            objects: state.objects.filter(obj => obj.id !== targetId),\n        }),\n    )\n    .case(\n        addObject,\n        (state, instance): GameState => ({\n            ...state,\n            objects: arrMerge(state.objects, instance),\n        }),\n    )\n    .case(\n        tmpSpawn,\n        (state, { instance }): GameState => ({\n            ...state,\n            objects: [...state.objects, instance],\n        }),\n    )\n    .case(\n        fall,\n        (state, { targetId }): GameState => {\n            return {\n                ...state,\n                objects: state.objects.map(obj =>\n                    obj.id === targetId ? { ...obj, elevation: FALL_ELEVATION } : obj,\n                ),\n            }\n        },\n    )\n","import { findById } from '../../helpers'\nimport { Vector2 } from '../../types/types'\nimport { ResolverResults } from './types'\nimport { GameState } from '../gameReducer'\n\nexport const rotateResolver = (\n    { objects }: GameState,\n    targetId: string,\n    rotation: Vector2,\n): ResolverResults => {\n    const target = findById(objects, targetId)\n\n    return {\n        objects: objects.map(obj => {\n            if (obj !== target) return obj\n            return { ...obj, rotation }\n        }),\n        actions: [],\n    }\n}\n","import { Action } from 'redux'\nimport { findById, findByXY } from '../../helpers'\nimport { getDefinition } from '../../objects/definitions'\nimport { ActionEvent } from '../../types/types'\nimport { ResolverResults } from './types'\nimport { GameState } from '../gameReducer'\n\nexport const equipResolver = (state: GameState, targetId: string): ResolverResults => {\n    const actions: Action[] = []\n    const target = findById(state.objects, targetId)\n    if (!target) return { objects: state.objects, actions: [] }\n\n    const myObjects = findByXY(state.objects, target.xy).sort((a, b) => b.aIndex - a.aIndex)\n\n    for (const obj of myObjects) {\n        const objDef = getDefinition(obj.type)\n        const event: ActionEvent = { who: target, vector: [0, 0], state, self: obj }\n        actions.push(...(objDef.equip?.(event) || []))\n    }\n\n    return {\n        actions,\n        objects: state.objects,\n    }\n}\n","import { uniq } from 'lodash'\nimport actionCreatorFactory from 'typescript-fsa'\nimport { reducerWithInitialState } from 'typescript-fsa-reducers'\n\nexport interface LocalState {\n    completedMaps: string[]\n}\n\nexport interface LocalStateAware {\n    local: LocalState\n}\n\nexport const initialState: LocalState = {\n    completedMaps: [],\n}\n\nconst action = actionCreatorFactory('LOCAL')\nexport const addCompletedMap = action<string>('COMPLETE_MAP')\n\nexport const localReducer = reducerWithInitialState(initialState).case(\n    addCompletedMap,\n    (state, mapId): LocalState => ({\n        ...state,\n        completedMaps: uniq([...state.completedMaps, mapId]),\n    }),\n)\n","import { first } from 'lodash'\nimport { Action } from 'redux'\nimport { combineEpics, StateObservable } from 'redux-observable'\nimport { concat, Observable, of } from 'rxjs'\nimport { delay, filter, flatMap, map, mapTo } from 'rxjs/operators'\nimport { DEFAULT_ACTION_DELAY } from '../config'\nimport {\n    enqueue,\n    GameStateAware,\n    nextAction,\n    queueEnd,\n    removeObject,\n    tmpSpawn,\n    tryNextAction,\n    win,\n    reset,\n    lose,\n    showWinDialog,\n} from './gameReducer'\nimport { addCompletedMap } from './localReducer'\n\nconst enqueueEpic = (\n    actions$: Observable<Action>,\n    state$: StateObservable<GameStateAware>,\n): Observable<Action> =>\n    actions$.pipe(\n        filter(enqueue.match),\n        filter(() => !state$.value.game.queueStared),\n        mapTo(tryNextAction()),\n    )\n\nconst tryNextEpic = (\n    actions$: Observable<Action>,\n    state$: StateObservable<GameStateAware>,\n): Observable<Action> =>\n    actions$.pipe(\n        filter(tryNextAction.match),\n        map(() => first(state$.value.game.queue)),\n        map(action => (action ? nextAction(action) : queueEnd())),\n    )\n\nconst nextActionEpic = (\n    actions$: Observable<Action>,\n    state$: StateObservable<GameStateAware>,\n): Observable<Action> =>\n    actions$.pipe(\n        filter(nextAction.match),\n        flatMap(action => {\n            const newActionDelay = (action.payload as any).meta?.delay || DEFAULT_ACTION_DELAY\n            return concat(of(action.payload), of(tryNextAction()).pipe(delay(newActionDelay)))\n        }),\n    )\n\nconst tmpSpawnEpic = (\n    actions$: Observable<Action>,\n    state$: StateObservable<GameStateAware>,\n): Observable<Action> =>\n    actions$.pipe(\n        filter(tmpSpawn.match),\n        delay(600),\n        map(action => removeObject(action.payload.instance.id)),\n    )\n\nconst winEpic = (\n    actions$: Observable<Action>,\n    state$: StateObservable<GameStateAware>,\n): Observable<Action> =>\n    actions$.pipe(\n        filter(win.match),\n        delay(600),\n        flatMap(() => concat(of(showWinDialog()), of(addCompletedMap(state$.value.game.mapId!)))),\n    )\n\nconst loseEpic = (\n    actions$: Observable<Action>,\n    state$: StateObservable<GameStateAware>,\n): Observable<Action> =>\n    actions$.pipe(\n        filter(lose.match),\n        delay(600),\n        map(() => reset()),\n    )\n\nexport const gameEpics = combineEpics(\n    enqueueEpic,\n    tryNextEpic,\n    nextActionEpic,\n    tmpSpawnEpic,\n    winEpic,\n    loseEpic,\n)\n","import { Action } from 'redux'\nimport { combineEpics } from 'redux-observable'\nimport { Observable } from 'rxjs'\nimport { filter, ignoreElements, tap } from 'rxjs/operators'\nimport { play, playEngine } from '../audio/play'\nimport { equip, move, lose, grapple } from './gameReducer'\nimport { PLAYER_ID } from '../types/consts'\n\nconst moveSoundEpic = (actions$: Observable<Action>): Observable<Action> =>\n    actions$.pipe(\n        filter(move.match),\n        filter(action => action.payload.targetId === PLAYER_ID),\n        tap(() => playEngine(0.05)),\n        ignoreElements(),\n    )\n\nconst equipSoundEpic = (actions$: Observable<Action>): Observable<Action> =>\n    actions$.pipe(\n        filter(equip.match),\n        tap(target => play('Hero_2', 0.7)),\n        ignoreElements(),\n    )\n\nconst loseSoundEpic = (actions$: Observable<Action>): Observable<Action> =>\n    actions$.pipe(\n        filter(lose.match),\n        tap(target => play('Engine_NO_2', 0.7)),\n        ignoreElements(),\n    )\n\nconst grappleSoundEpic = (actions$: Observable<Action>): Observable<Action> =>\n    actions$.pipe(\n        filter(grapple.match),\n        tap(target => play('Crossbow', 0.7)),\n        ignoreElements(),\n    )\n\nexport const soundEpics = combineEpics(\n    moveSoundEpic,\n    equipSoundEpic,\n    loseSoundEpic,\n    grappleSoundEpic,\n)\n","import { applyMiddleware, combineReducers, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { combineEpics, createEpicMiddleware } from 'redux-observable'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { gameEpics } from './gameEpics'\nimport { gameReducer } from './gameReducer'\nimport { localReducer } from './localReducer'\nimport { soundEpics } from './soundEpics'\n\nconst epicMiddleware = createEpicMiddleware()\n\nconst composeEnhancers = composeWithDevTools({\n    name: 'App',\n})\n\nconst rootReducer = combineReducers({\n    game: gameReducer,\n    local: persistReducer({ key: 'local', storage }, localReducer),\n})\n\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(epicMiddleware)))\nexport const persistor = persistStore(store)\n\nepicMiddleware.run(combineEpics(soundEpics, gameEpics))\n","import { isEqual, uniqueId } from 'lodash'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Action } from 'redux'\nimport { play } from '../audio/play'\nimport { PROJECTILE_ELEVATION } from '../config'\nimport { findById } from '../helpers'\nimport {\n    enqueue,\n    equip,\n    GameStateAware,\n    grapple,\n    loadMap,\n    move,\n    projectile,\n    reset,\n    rotate,\n    unloadMap,\n} from '../state/gameReducer'\nimport { PLAYER_ID } from '../types/consts'\nimport { MapData, ObjectInstance, ObjectTypes, Vector2 } from '../types/types'\n\nexport const useGame = () => {\n    const state = useSelector((state: GameStateAware) => state.game)\n    const dispatch = useDispatch()\n    const player = findById(state.objects, PLAYER_ID)!\n    const rdy = !state.queueStared && !!player\n\n    const triggerMove = (vector: Vector2) => {\n        if (!rdy) return\n\n        const actions: Action[] = []\n\n        if (!isEqual(player.rotation, vector)) {\n            // Hmm it's ok without enqueue?\n            dispatch(rotate({ targetId: player.id, rotation: vector }))\n        } else {\n            actions.push(move({ targetId: player.id, vector }))\n        }\n\n        dispatch(enqueue(actions))\n    }\n\n    const triggerEquip = () => {\n        if (!rdy) return\n        dispatch(enqueue(equip({ targetId: player.id })))\n    }\n\n    const triggerGrapple = () => {\n        if (!rdy) return\n\n        if (!player.data.hasGrapple) {\n            play('Alert_NO')\n            return\n        }\n\n        dispatch(enqueue(grapple({ targetId: player.id })))\n    }\n\n    const triggerFire = () => {\n        if (!rdy) return\n        const { id, xy, rotation, elevation, data } = player\n\n        if (!data.hasCannon) {\n            play('Alert_NO')\n            return\n        }\n\n        const instance: ObjectInstance = {\n            type: ObjectTypes.RocketProjectile,\n            id: uniqueId(),\n            xy,\n            rotation,\n            elevation: elevation + PROJECTILE_ELEVATION,\n            aIndex: 100,\n            zIndex: 10,\n            data,\n        }\n\n        dispatch(enqueue(projectile({ byId: id, instance })))\n    }\n\n    const triggerReset = () => {\n        if (!rdy) return\n        dispatch(reset())\n    }\n\n    const triggerLoadMap = (map: MapData) => {\n        dispatch(loadMap(map))\n    }\n\n    const triggerUnloadMap = () => {\n        dispatch(unloadMap())\n    }\n\n    return {\n        ...state,\n        player,\n\n        loadMap: triggerLoadMap,\n        unloadMap: triggerUnloadMap,\n        reset: triggerReset,\n\n        move: triggerMove,\n        equip: triggerEquip,\n        fire: triggerFire,\n        grapple: triggerGrapple,\n    }\n}\n","import React, { useEffect } from 'react'\nimport { Color } from 'three'\nimport { useGame } from '../hooks/useGame'\nimport { useThree } from 'react-three-fiber'\nimport { ObjectInstance } from '../types/types'\nimport { CAMERA_OFFSET } from '../config'\n\nconst d = 5\n\ninterface EnvironmentProps {\n    // player: ObjectInstance,\n    mapId: string | null\n    objectsList: ObjectInstance[]\n}\n\nexport const Environment = ({ objectsList, mapId }: EnvironmentProps) => {\n    const { camera, size } = useThree()\n\n    useEffect(() => {\n        const xValues = objectsList.map(obj => obj.xy[0])\n        const yValues = objectsList.map(obj => obj.xy[1])\n\n        const mapCenterX = Math.max(...xValues) / 2\n        const mapCenterY = Math.max(...yValues) / 2\n\n        const offsetX =\n            (CAMERA_OFFSET[0] * Math.max(mapCenterX, mapCenterY) * 7) /\n            (size.width / size.height) /\n            0.9\n        const offsetY =\n            (CAMERA_OFFSET[1] * Math.max(mapCenterX, mapCenterY) * 7) /\n            (size.width / size.height) /\n            0.9\n        const offsetZ =\n            (CAMERA_OFFSET[2] * Math.max(mapCenterX, mapCenterY) * 7) /\n            (size.width / size.height) /\n            0.9\n\n        camera.position.set(mapCenterX + offsetX, offsetZ, mapCenterY + offsetY)\n        camera.lookAt(mapCenterX, 0, mapCenterY)\n    }, [mapId, size])\n\n    return (\n        <group>\n            <ambientLight intensity={2} color={new Color('#dbab93')} />\n            <pointLight\n                position={[6, 7, 8]}\n                intensity={2.2}\n                color={new Color('#c86b6f')}\n                shadow-mapSize-Height=\"1024\"\n                shadow-mapSize-width=\"1024\"\n                shadow-camera-far={30}\n                shadow-bias={-0.01}\n                castShadow\n                shadow-camera-left={-d}\n                shadow-camera-right={d}\n                shadow-camera-top={d}\n                shadow-camera-bottom={-d}\n            />\n            <pointLight position={[1, 3, 5]} intensity={2.2} color={new Color('#3a8dc2')} />\n        </group>\n    )\n}\n","import React, { Suspense } from 'react'\nimport { Canvas } from 'react-three-fiber'\nimport { PCFSoftShadowMap } from 'three'\nimport { Dialog } from '../components/Dialog'\nimport { maps } from '../data/maps'\nimport { useGame } from '../hooks/useGame'\nimport { getDefinition } from '../objects/definitions'\nimport { Environment } from './Environment'\n\nexport const GameInstance = () => {\n    const { objects, mapId } = useGame()\n\n    if (!mapId) return null\n\n    return (\n        <>\n            {mapId && (\n                <Canvas\n                    key={mapId}\n                    camera={{\n                        zoom: 20,\n                    }}\n                    onCreated={scene => {\n                        if (scene.gl?.shadowMap) {\n                            scene.gl.shadowMap.type = PCFSoftShadowMap\n                            scene.gl.shadowMap.enabled = true\n                        }\n                    }}\n                >\n                    <group>\n                        <Environment objectsList={objects} mapId={mapId} />\n                        <Suspense\n                            fallback={\n                                <mesh>\n                                    <boxBufferGeometry attach=\"geometry\" args={[0.5, 0.5, 0.5]} />\n                                    <meshStandardMaterial attach=\"material\" color=\"red\" />\n                                </mesh>\n                            }\n                        >\n                            {objects.map(obj => {\n                                const { Component3d } = getDefinition(obj.type)\n                                return <Component3d key={obj.id} instance={obj} />\n                            })}\n                        </Suspense>\n                    </group>\n                </Canvas>\n            )}\n        </>\n    )\n}\n","import styled from 'styled-components'\n\nexport const Button = styled.button`\n    background: none;\n    color: rgba(205, 236, 255, 0.7);\n    font-size: 14px;\n    border: 1px solid currentColor;\n    padding: 10px 20px;\n    margin: 4px;\n    border-radius: 4px;\n    text-transform: uppercase;\n    display: inline-block;\n    cursor: pointer;\n\n    &:hover {\n        background-color: rgba(205, 236, 255, 0.2);\n    }\n\n    small {\n        display: block;\n        font-size: 10;\n        text-transform: uppercase;\n        margin-top: 2px;\n    }\n    strong {\n        font-size: 27px;\n    }\n`\n\nexport const ButtonBlock = styled.div`\n    display: inline-block;\n    ${Button} {\n        display: block;\n        margin-top: 6px;\n    }\n`\n","import React, { FC } from 'react'\nimport styled from 'styled-components'\n\nexport const Dialog: FC = ({ children }) => {\n    return (\n        <Container>\n            <DialogBG>{children}</DialogBG>\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    position: fixed;\n    z-index: 50;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(0, 0, 0, 0.5);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nconst DialogBG = styled.div`\n    background-color: #0b4566;\n    padding: 30px 50px;\n    border-radius: 4px;\n    text-align: center;\n`\n","import { MapData } from '../types/types'\n\nimport level1 from './level1.json'\nimport level1img from './images/1.png'\n\nimport level2 from './level2.json'\nimport level2img from './images/2.png'\n\nimport level3 from './level3.json'\nimport level3img from './images/3.png'\n\nimport level4 from './level4.json'\nimport level4img from './images/4.png'\n\nimport level5 from './level5.json'\nimport level5img from './images/5.png'\n\nimport level6 from './level6.json'\nimport level6img from './images/6.png'\n\nimport level7 from './level7.json'\nimport level7img from './images/7.png'\n\nimport level8 from './level8.json'\nimport level8img from './images/8.png'\n\nimport level9 from './level9.json'\nimport level9img from './images/9.png'\n\nimport map0 from './map0.json'\nimport map1 from './map1.json'\nimport map2 from './map2.json'\nimport mapStarter from './starter.json'\n\nexport const maps: MapData[] = [\n    { id: 'level1', name: 'level1', image: level1img, objects: level1 as any },\n    { id: 'level2', name: 'level2', image: level2img, objects: level2 as any },\n    { id: 'level3', name: 'level3', image: level3img, objects: level3 as any },\n    { id: 'level4', name: 'level4', image: level4img, objects: level4 as any },\n    { id: 'level5', name: 'level5', image: level5img, objects: level5 as any },\n    { id: 'level6', name: 'level6', image: level6img, objects: level6 as any },\n    { id: 'level7', name: 'level7', image: level7img, objects: level7 as any },\n    { id: 'level8', name: 'level8', image: level8img, objects: level8 as any },\n    { id: 'level9', name: 'level9', image: level9img, objects: level9 as any },\n    { id: 'map-0', name: 'Test 0', objects: map0 as any },\n    { id: 'map-1', name: 'Test 1', objects: map1 as any },\n    { id: 'map-2', name: 'Test 2', objects: map2 as any },\n    { id: 'starter', name: 'Editor', objects: mapStarter as any },\n]\n","import { uniqueId } from 'lodash'\nimport { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { randomRotation } from '../helpers'\nimport { addObject, GameStateAware, removeObject, updateObject } from '../state/gameReducer'\nimport { ObjectInstance, ObjectTypes } from '../types/types'\n\nexport const useEditor = () => {\n    const state = useSelector((state: GameStateAware) => state.game)\n    const [editMode, setEditMode] = useState(false)\n    const dispatch = useDispatch()\n\n    const toggleEditMode = () => {\n        setEditMode(!editMode)\n    }\n\n    const update = (targetId: string) => (objectValues: Partial<ObjectInstance>) => {\n        dispatch(updateObject({ targetId, objectValues }))\n    }\n\n    const add = (partialInstance: Partial<ObjectInstance>) => {\n        const { type = ObjectTypes.Grass, ...rest } = partialInstance\n\n        const instance: ObjectInstance = {\n            type,\n            id: partialInstance.id || uniqueId(type + '-') + `-${state.objects.length}`,\n            xy: [0, 0],\n            rotation: randomRotation(),\n            zIndex: 0,\n            aIndex: 0,\n            data: {},\n            elevation: 0,\n            ...partialInstance,\n        }\n\n        dispatch(addObject(instance))\n    }\n\n    const remove = (targetId: string) => {\n        dispatch(removeObject(targetId))\n    }\n\n    const copyMap = () => {\n        const serializedMap = JSON.stringify(state.objects)\n\n        navigator.clipboard.writeText(serializedMap).then(() => {\n            console.log('Copied to clipboard')\n        }, console.error)\n    }\n\n    return { update, add, remove, toggleEditMode, editMode, copyMap }\n}\n","// import { useEffect } from 'react'\n\n// export const useKeyboardEvent = (key: string, callback: Function) => {\n//     useEffect(() => {\n//         const handler = (event: KeyboardEvent) => {\n//             if (event.key === key) callback()\n//         }\n\n//         window.addEventListener('keydown', handler)\n\n//         return () => window.removeEventListener('keydown', handler)\n//     })\n// }\n\nimport hotkeys from 'hotkeys-js'\nimport { DependencyList, useEffect, useCallback } from 'react'\n\nexport const useKeyboardEvent = (\n    key: string | false,\n    callback: (event: KeyboardEvent) => void,\n    deps: DependencyList = [],\n) => {\n    const memoisedCallback = useCallback(callback, deps)\n\n    useEffect(() => {\n        if (!key) return\n\n        hotkeys(key, memoisedCallback)\n\n        return () => hotkeys.unbind(key, memoisedCallback)\n    }, [key, memoisedCallback])\n}\n","import { isEmpty, isEqual } from 'lodash'\nimport React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { createArray, findByXY } from '../helpers'\nimport { useEditor } from '../hooks/useEditor'\nimport { getDefinition, objectDefinitions } from '../objects/definitions'\nimport { DOWN, LEFT, RIGHT, UP } from '../types/consts'\nimport { ObjectInstance, ObjectTypes, Vector2, XY } from '../types/types'\n\ninterface DebugViewProps {\n    objects: ObjectInstance[]\n}\n\nconst size = 150\nconst grid = 10\n\nconst color: Record<ObjectTypes, string> = {\n    [ObjectTypes.Player]: 'red',\n    [ObjectTypes.WinTrigger]: 'green',\n\n    [ObjectTypes.Grass]: 'green',\n    [ObjectTypes.Water]: 'blue',\n    [ObjectTypes.RockFloor]: 'gray',\n    [ObjectTypes.Wall]: 'white',\n    [ObjectTypes.Box]: 'brown',\n    [ObjectTypes.BigRock]: 'silver',\n\n    [ObjectTypes.Pipe]: 'lightblue',\n    [ObjectTypes.PipeLeft]: 'lightblue',\n    [ObjectTypes.PipeRight]: 'lightblue',\n    [ObjectTypes.PipePlace]: 'lightblue',\n    [ObjectTypes.PipeUp]: 'lightblue',\n    [ObjectTypes.PipeDown]: 'lightblue',\n    [ObjectTypes.PipeElement]: 'lightblue',\n\n    [ObjectTypes.Fence]: 'white',\n\n    [ObjectTypes.Button]: 'pink',\n    [ObjectTypes.Door]: 'pink',\n    [ObjectTypes.WallMetal]: 'black',\n    [ObjectTypes.Ice]: 'white',\n\n    [ObjectTypes.Crossbow]: 'purple',\n    [ObjectTypes.Cannon]: 'purple',\n    [ObjectTypes.Boom]: 'white',\n\n    [ObjectTypes.CrossbowProjectile]: 'white',\n    [ObjectTypes.RocketProjectile]: 'white',\n}\n\nexport const DebugView = ({ objects }: DebugViewProps) => {\n    const { copyMap } = useEditor()\n\n    return (\n        <Container>\n            <button onClick={copyMap}>Copy map</button>\n            <MapGrid>\n                {createArray(grid).map(y => (\n                    <Row key={y}>\n                        {createArray(grid).map(x => (\n                            <Cell key={x} objects={findByXY(objects, [x, y])} xy={[x, y]} />\n                        ))}\n                    </Row>\n                ))}\n            </MapGrid>\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    position: absolute;\n    z-index: 100;\n    top: 0;\n    right: 0;\n    left: 0;\n    bottom: 0;\n    opacity: 0.8;\n    background-color: rgba(0, 0, 0, 0.7);\n    overflow: auto;\n`\n\nconst MapGrid = styled.div`\n    border: 1px solid #333;\n    font-size: 12px;\n`\n\nconst Row = styled.div`\n    display: flex;\n`\n\nconst Cols = styled.div`\n    display: grid;\n    grid-auto-flow: column;\n    grid-auto-columns: auto;\n    margin: 5px 0;\n`\n\ninterface CellProps {\n    xy: XY\n    objects: ObjectInstance[]\n}\n\nexport const Cell = ({ objects, xy }: CellProps) => {\n    const [open, setOpen] = useState(false)\n    const { update, add, remove, copyMap } = useEditor()\n\n    const addEmpty = () => add({ type: ObjectTypes.RockFloor, xy })\n    const openAndAdd = () => {\n        setOpen(true)\n        if (!objects.length) addEmpty()\n    }\n\n    const getHeight = (obj: ObjectInstance) => {\n        const def = getDefinition(obj.type)\n        return def.height(obj)\n    }\n\n    if (open) {\n        return (\n            <CellContainer>\n                {objects.map(obj => (\n                    <CellObj key={obj.id}>\n                        <Remove onClick={() => remove(obj.id)} />\n                        <TextInput obj={obj} field=\"id\" onChange={update(obj.id)} />\n                        <TypeSelect obj={obj} onChange={update(obj.id)} />\n                        elevation:\n                        <ElevationInput obj={obj} onChange={update(obj.id)} />\n                        rotation:\n                        <RotationInput obj={obj} onChange={update(obj.id)} />\n                        <Cols>\n                            <div>\n                                zIndex:\n                                <NumberInput obj={obj} field=\"zIndex\" onChange={update(obj.id)} />\n                            </div>\n                            <div>\n                                aIndex:\n                                <NumberInput obj={obj} field=\"aIndex\" onChange={update(obj.id)} />\n                            </div>\n                            <div>\n                                Size: <br />\n                                h: <b>{getHeight(obj)}</b> e: <b>{obj.elevation}</b>\n                            </div>\n                        </Cols>\n                        <DataInput obj={obj} onChange={update(obj.id)} />\n                    </CellObj>\n                ))}\n                <button onClick={addEmpty}>+</button>\n                <button onClick={() => setOpen(false)}>Close</button>\n            </CellContainer>\n        )\n    }\n\n    return (\n        <CellInfoContainer onClick={openAndAdd}>\n            {objects.map(obj => (\n                <CellObj key={obj.id}>\n                    <div>\n                        <strong style={{ color: color[obj.type] }}>{obj.type}</strong> <br />\n                        <small>{obj.id}</small>\n                    </div>\n                    {!isEmpty(obj.data) && <pre>{JSON.stringify(obj.data, null, 1)}</pre>}\n                    <small>\n                        h: {getHeight(obj)} e: {obj.elevation}\n                    </small>\n                </CellObj>\n            ))}\n        </CellInfoContainer>\n    )\n}\n\nconst CellInfoContainer = styled.div`\n    width: ${size}px;\n    min-height: ${size}px;\n    border: 1px solid #333;\n`\n\nconst CellObj = styled.div`\n    position: relative;\n    background: #333;\n    padding: 7px 10px;\n    margin: 4px;\n    line-height: 1;\n    font-size: 12px;\n    pre {\n        font-size: 10px;\n    }\n`\n\nconst Remove = styled.div`\n    position: absolute;\n    top: 0;\n    right: 0;\n    cursor: pointer;\n    &::after {\n        content: '❌';\n    }\n`\n\nconst CellContainer = styled.div`\n    width: ${size * 1.5}px;\n    min-height: ${size}px;\n    border: 1px solid #333;\n`\n\ninterface TextInputProps {\n    obj: ObjectInstance\n    field: keyof ObjectInstance\n    onChange(partial: Partial<ObjectInstance>): void\n}\n\nconst TextInput = ({ obj, field, onChange }: TextInputProps) => {\n    return (\n        <div>\n            <input\n                value={obj[field] as string}\n                onChange={event => onChange({ [field]: event.target.value })}\n            />\n        </div>\n    )\n}\n\ninterface NumberInputProps {\n    obj: ObjectInstance\n    field: keyof ObjectInstance\n    onChange(partial: Partial<ObjectInstance>): void\n    style?: React.CSSProperties\n}\n\nconst NumberInput = ({ obj, field, onChange, style }: NumberInputProps) => {\n    return (\n        <div>\n            <input\n                type=\"number\"\n                step=\"0.1\"\n                value={obj[field] as string}\n                style={style || { width: 30 }}\n                onChange={event => {\n                    const value = parseFloat(event.target.value)\n                    if (Number.isNaN(value)) return\n                    onChange({ [field]: parseFloat(event.target.value) })\n                }}\n            />\n        </div>\n    )\n}\n\ninterface TypeSelectProps {\n    obj: ObjectInstance\n    onChange(partial: Partial<ObjectInstance>): void\n}\n\nconst TypeSelect = ({ obj, onChange }: TypeSelectProps) => {\n    return (\n        <div>\n            <select\n                value={obj.type}\n                onChange={event => onChange({ type: event.target.value as ObjectTypes })}\n            >\n                {Object.keys(objectDefinitions).map(item => (\n                    <option>{item}</option>\n                ))}\n            </select>\n        </div>\n    )\n}\n\ninterface ElevationInputProps {\n    obj: ObjectInstance\n    onChange(partial: Partial<ObjectInstance>): void\n}\n\nconst ElevationInput = ({ obj, onChange }: ElevationInputProps) => {\n    const f = 100\n    return (\n        <div>\n            <Cols>\n                <NumberInput obj={obj} field=\"elevation\" onChange={onChange} />\n                <input\n                    type=\"range\"\n                    min={-1 * f}\n                    max={10 * f}\n                    value={obj.elevation * f}\n                    onChange={event => onChange({ elevation: parseFloat(event.target.value) / f })}\n                />\n            </Cols>\n        </div>\n    )\n}\n\ninterface RotationInputProps {\n    obj: ObjectInstance\n    onChange(partial: Partial<ObjectInstance>): void\n}\n\nconst RotationInput = ({ obj, onChange }: RotationInputProps) => {\n    return (\n        <div>\n            <RotationInputButton obj={obj} label={'UP'} rotation={UP} onChange={onChange} />\n            <RotationInputButton obj={obj} label={'RIGHT'} rotation={RIGHT} onChange={onChange} />\n            <RotationInputButton obj={obj} label={'DOWN'} rotation={DOWN} onChange={onChange} />\n            <RotationInputButton obj={obj} label={'LEFT'} rotation={LEFT} onChange={onChange} />\n        </div>\n    )\n}\n\ninterface RotationInputButtonProps {\n    label: string\n    obj: ObjectInstance\n    rotation: Vector2\n    onChange(partial: Partial<ObjectInstance>): void\n}\n\nconst RotationInputButton = ({ obj, onChange, rotation, label }: RotationInputButtonProps) => {\n    return (\n        <RotationBtn\n            active={isEqual(obj.rotation, rotation)}\n            onClick={() => onChange({ rotation })}\n        >\n            {label}\n        </RotationBtn>\n    )\n}\n\nconst RotationBtn = styled.span<{ active: boolean }>`\n    margin-right: 5px;\n    cursor: pointer;\n    ${p => p.active && 'font-weight: bold;'};\n`\n\ninterface DataInputProps {\n    obj: ObjectInstance\n    onChange(partial: Partial<ObjectInstance>): void\n}\n\nconst DataInput = ({ obj, onChange }: DataInputProps) => {\n    const data = JSON.stringify(obj.data)\n    const [localData, setLocalData] = useState(data)\n    return (\n        <div>\n            <textarea\n                value={localData}\n                onFocus={() => setLocalData(JSON.stringify(obj.data))}\n                onChange={event => {\n                    setLocalData(event.target.value)\n                    try {\n                        const data = JSON.parse(event.target.value)\n                        onChange({ data })\n                    } catch (e) {\n                        console.error(e)\n                    }\n                }}\n            />\n        </div>\n    )\n}\n","import React, { FC } from 'react'\nimport introVideo from './intro.mp4'\nimport styled from 'styled-components'\nimport { Button } from '../../components/Button'\n\ninterface IntroProps {\n    onEnded(): void\n}\n\nexport const Intro = ({ onEnded }: IntroProps) => {\n    return (\n        <Container>\n            <Video autoPlay onEnded={onEnded}>\n                <source src={introVideo} type=\"video/mp4\" />\n            </Video>\n            <SkipButton onClick={onEnded}>Skip Intro</SkipButton>\n        </Container>\n    )\n}\n\nconst SkipButton = styled(Button)`\n    position: absolute;\n    bottom: 30px;\n    left: 0;\n    right: 0;\n    margin: auto;\n    width: 200px;\n    background-color: rgba(0, 0, 0, 0.5);\n`\n\nconst Container = styled.div`\n    position: fixed;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    background: #000;\n`\n\nconst Video = styled.video`\n    width: 100%;\n    height: 100%;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { AUTHORS } from '../config'\nimport { shuffleArray } from '../helpers'\n\nexport const Authors = () => (\n    <>\n        <Info>\n            <b>Twórcy</b>\n        </Info>\n        <AuthorList>\n            {shuffleArray(AUTHORS).map(({ name, tech }, index) => (\n                <li key={index}>\n                    <b>{name}</b> {tech}\n                </li>\n            ))}\n        </AuthorList>\n        <Info>\n            Gra stworzona w ramach Game Jam{' '}\n            <a href=\"https://zostanwdomurobgry.pl\">ZostanWDomuRobGry.pl</a>\n        </Info>\n    </>\n)\n\nconst Info = styled.p`\n    text-align: center;\n`\n\nconst AuthorList = styled.ul`\n    text-align: center;\n    list-style: none;\n    line-height: 1.4;\n`\n","import React, { useEffect, useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport { getAudio } from '../audio/play'\nimport { Button, ButtonBlock } from '../components/Button'\nimport { Dialog } from '../components/Dialog'\nimport { maps } from '../data/maps'\nimport { useEditor } from '../hooks/useEditor'\nimport { useGame } from '../hooks/useGame'\nimport { useKeyboardEvent } from '../hooks/useKeyboardEvent'\nimport { useLocal } from '../hooks/useLocal'\nimport { DOWN, LEFT, RIGHT, UP } from '../types/consts'\nimport { DebugView } from './DebugView'\nimport { Intro } from './intro/Intro'\nimport { Authors } from './Authors'\n\nexport const Menu = () => {\n    const {\n        objects,\n        winDialog,\n        mapId,\n        mapName,\n        move,\n        equip,\n        grapple,\n        fire,\n        loadMap,\n        unloadMap,\n        reset,\n    } = useGame()\n    const { player } = useGame()\n    const { editMode, toggleEditMode } = useEditor()\n    const { isCompleted } = useLocal()\n\n    const [introPlayed, setIntroPlayed] = useState(false)\n    const [gameStarted, setGameStarted] = useState(false)\n\n    const musicRef = useRef(getAudio('Music', 0.3))\n    const droneRef = useRef(getAudio('Drone', 1))\n    const playMusic = !mapId || winDialog\n\n    useEffect(() => {\n        if (!gameStarted || !introPlayed) return\n        if (playMusic) {\n            droneRef.current.pause()\n\n            musicRef.current.currentTime = 0\n            musicRef.current.play()\n        } else {\n            musicRef.current.pause()\n\n            droneRef.current.currentTime = 0\n            droneRef.current.play()\n\n            const onEnd = () => droneRef.current.play()\n            droneRef.current.addEventListener('ended', onEnd)\n            return () => droneRef.current.removeEventListener('ended', onEnd)\n        }\n    }, [playMusic, gameStarted, introPlayed])\n\n    const nextMap = () => {\n        const currentIndex = maps.findIndex(m => m.id === mapId)\n        const nextMap = maps[currentIndex + 1]\n        if (nextMap) loadMap(nextMap)\n        else unloadMap()\n    }\n\n    useKeyboardEvent('m', toggleEditMode, [editMode])\n\n    const left = () => move(LEFT)\n    const up = () => move(UP)\n    const down = () => move(DOWN)\n    const right = () => move(RIGHT)\n\n    useKeyboardEvent('r', reset, [mapId])\n    useKeyboardEvent('q', unloadMap)\n    useKeyboardEvent(winDialog && 'enter', nextMap, [winDialog])\n\n    useKeyboardEvent('w', up, [up])\n    useKeyboardEvent('s', down, [down])\n    useKeyboardEvent('a', left, [left])\n    useKeyboardEvent('d', right, [right])\n\n    useKeyboardEvent('up', up, [up])\n    useKeyboardEvent('down', down, [down])\n    useKeyboardEvent('left', left, [left])\n    useKeyboardEvent('right', right, [right])\n\n    useKeyboardEvent('e', equip, [equip])\n    useKeyboardEvent('f', grapple, [grapple])\n    useKeyboardEvent('space', fire, [fire])\n\n    useKeyboardEvent(\n        '*',\n        event => {\n            const index = +event.key\n            if (index && maps[index]) loadMap(maps[index])\n        },\n        [],\n    )\n\n    return (\n        <>\n            {!introPlayed && gameStarted && <Intro onEnded={() => setIntroPlayed(true)} />}\n            {!mapId && (\n                <>\n                    <Title>Alpha Mechanical</Title>\n                    {gameStarted ? (\n                        <LevelWrapper>\n                            {maps.map(map => (\n                                <LevelButton key={map.id} onClick={() => loadMap(map)}>\n                                    {map.name} {isCompleted(map.id) && <Completed />}\n                                    {map.image && <img src={map.image} width=\"200\" alt=\"\" />}\n                                </LevelButton>\n                            ))}\n                        </LevelWrapper>\n                    ) : (\n                        <StartButtonWrapper>\n                            <StartButton onClick={() => setGameStarted(true)}>Play</StartButton>\n                        </StartButtonWrapper>\n                    )}\n                </>\n            )}\n\n            {editMode && <DebugView objects={objects} />}\n\n            {mapId && (\n                <SmallMenuWrapper>\n                    <Button onClick={unloadMap}>\n                        Exit\n                        <small>{`[Q]`}</small>\n                    </Button>\n                    <Button onClick={reset}>\n                        Restart <small>{`[R]`}</small>\n                    </Button>\n                </SmallMenuWrapper>\n            )}\n            {mapName && <MapName>Map: {mapName}</MapName>}\n            {mapId && player && (\n                <ControlsWrapper>\n                    <Button onClick={left}>\n                        <strong>←</strong>\n                        <small>{`[A]`}</small>\n                    </Button>\n                    <ButtonBlock>\n                        <Button onClick={up}>\n                            <strong>↑</strong>\n                            <small>{`[W]`}</small>\n                        </Button>\n                        <Button onClick={down}>\n                            <strong>↓</strong>\n                            <small>{`[S]`}</small>\n                        </Button>\n                    </ButtonBlock>\n                    <Button onClick={right}>\n                        <strong>→</strong>\n                        <small>{`[D]`}</small>\n                    </Button>\n                    <Button onClick={equip}>\n                        Equip <small>{`[E]`}</small>\n                    </Button>\n                    {player.data.hasGrapple && (\n                        <Button onClick={grapple}>\n                            Grapple <small>{`[F]`}</small>\n                        </Button>\n                    )}\n                    {player.data.hasCannon && (\n                        <Button onClick={fire}>\n                            Fire <small>{'[SPACE]'}</small>\n                        </Button>\n                    )}\n                </ControlsWrapper>\n            )}\n            {winDialog && (\n                <Dialog>\n                    <h1>Congratulations!</h1>\n                    <p>Level complete</p> <br />\n                    <Button onClick={nextMap}>\n                        Next level <small>[enter]</small>\n                    </Button>\n                </Dialog>\n            )}\n            {!mapId && <Authors />}\n        </>\n    )\n}\n\nconst Completed = styled.span`\n    &::after {\n        content: '✓';\n        color: #8fe34f;\n    }\n`\n\nconst StartButtonWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    padding: 120px 0;\n`\n\nconst StartButton = styled(Button)`\n    font-size: 50px;\n    padding: 40px 60px;\n`\n\nconst Title = styled.h1`\n    font-family: 'Megrim', sans-serif;\n    font-size: 80px;\n    text-align: center;\n    font-weight: normal;\n`\n\nconst LevelWrapper = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n    grid-auto-rows: 1fr;\n    grid-gap: 24px;\n    padding: 24px;\n`\n\nconst LevelButton = styled.button`\n    cursor: pointer;\n    background: none;\n    border: none;\n    color: rgba(205, 236, 255, 0.726);\n    font-size: 30px;\n    padding: 20px 30px;\n    margin: 4px;\n    border-radius: 4px;\n    text-transform: uppercase;\n    text-align: center;\n    transition: all ease 150ms;\n\n    &:hover {\n        background-color: rgba(205, 236, 255, 0.2);\n    }\n\n    img {\n        display: block;\n        margin: auto;\n        margin-top: 20px;\n        height: 200px;\n        object-fit: contain;\n    }\n`\n\nconst MapName = styled.div`\n    position: absolute;\n    z-index: 5;\n    top: 0;\n    right: 0;\n    padding: 5px 5px 0 0;\n    font-size: 18px;\n`\n\nconst ControlsWrapper = styled.div`\n    position: absolute;\n    z-index: 5;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    text-align: center;\n`\n\nconst SmallMenuWrapper = styled.div`\n    position: absolute;\n    z-index: 5;\n    top: 0;\n    left: 0;\n`\n","import { useSelector } from 'react-redux'\nimport { LocalStateAware } from '../state/localReducer'\n\nexport const useLocal = () => {\n    const state = useSelector((state: LocalStateAware) => state.local)\n    const isCompleted = (mapId: string) => state.completedMaps.includes(mapId)\n\n    return { isCompleted }\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { store, persistor } from '../state/store'\nimport { GameInstance } from './GameInstance'\nimport { Menu } from './Menu'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nexport const App = () => {\n    return (\n        <Provider store={store}>\n            <PersistGate loading={null} persistor={persistor}>\n                <GameInstance />\n                <Menu />\n            </PersistGate>\n        </Provider>\n    )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './app/App'\nimport './styles/global.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","module.exports = __webpack_public_path__ + \"static/media/1.95cda525.png\";","module.exports = __webpack_public_path__ + \"static/media/2.2492224d.png\";","module.exports = __webpack_public_path__ + \"static/media/3.730fc322.png\";","module.exports = __webpack_public_path__ + \"static/media/4.6206b09f.png\";","module.exports = __webpack_public_path__ + \"static/media/5.04c35559.png\";","module.exports = __webpack_public_path__ + \"static/media/6.0727068f.png\";","module.exports = __webpack_public_path__ + \"static/media/7.388f7bd1.png\";","module.exports = __webpack_public_path__ + \"static/media/8.5a21b17c.png\";","module.exports = __webpack_public_path__ + \"static/media/9.ad09a8cc.png\";"],"sourceRoot":""}