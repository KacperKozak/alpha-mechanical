{"version":3,"sources":["types/types.ts","config.ts","types/consts.ts","helpers.ts","objects/models/Items.tsx","objects/tileTypeDefinitions.tsx","audio/play.ts","objects/propTypeDefinitions.tsx","objects/definitions.ts","state/resolvers/flyResolver.ts","state/resolvers/moveResolver.ts","state/resolvers/grappleResolver.ts","state/gameReducer.ts","state/resolvers/rotateResolver.ts","state/resolvers/equipResolver.ts","state/gameEpics.ts","state/soundEpics.ts","state/store.ts","hooks/useEditor.ts","hooks/useKeyboardEvent.tsx","app/DebugView.tsx","app/Environment.tsx","data/maps.ts","app/GameInstance.tsx","hooks/useGame.ts","app/App.tsx","index.tsx"],"names":["ObjectTypes","CAMERA_OFFSET","UP","RIGHT","DOWN","LEFT","applyVector","x","y","findById","props","id","find","prop","findByXY","objects","xy","filter","tile","x1","y1","x2","y2","samePosition","asArray","item","Array","isArray","arrMerge","a","b","limitVector","vector","min","max","map","v","value","Math","limit","vectorDiff","v1","v2","i","createArray","length","from","color","useMyLoader","rocket","useLoader","GLTFLoader","process","cannon","box","rock","fence","arrow","crossbow","graund","wall","grass","water","ice","button","door","pipe","pipeLeft","pipeRight","pipePlace","pipeElement","pipeUp","pipeDown","scene","clone","useAnimationLoader","boring","boom","AssetPreload","model","instance","elevation","rotation","data","castShadow","receiveShadow","elevationFix","anim","useSpring","pos","rot","vectorToThree","children","el","scale","set","open","position","setY","active","setX","primitive","object","AnimatieAsset","boringMixer","AnimationMixer","animations","forEach","clip","clipAction","play","useFrame","update","group","visible","hasCannon","hasGrapple","AnimateSelfAsset","animateModel","gltfScene","mixer","index","animation","setLoop","LoopOnce","PI","tileTypeDefinitions","Grass","name","height","Component3d","Water","enter","who","lose","Ice","move","targetId","RockFloor","Wall","soundList","music","Alert_NO","Alert_YES","Bazooka","Crossbow","Engine_start","Engine_LOOP_128","Engine_NO_1","Engine_NO_2","Engine_stop","Equip_1","Equip_2","Equip_3","Equip_4","Hero_1","Hero_2","Jump","volume","sound","Audio","playEquip","round","random","engineStart","propTypeDefinitions","Player","BigRock","Pipe","PipeLeft","PipeRight","PipeUp","PipeDown","PipeElement","push","self","PipePlace","state","type","win","Box","Fence","force","removeObject","Button","console","warn","toggle","setObjectData","WinTrigger","attach","args","Door","Cannon","equip","Boom","RocketProjectile","projectileLaunch","delay","projectileHit","what","tmpSpawn","uniqueId","aIndex","zIndex","CrossbowProjectile","objectDefinitions","getDefinition","def","Error","isTooHight","ontoObj","flyer","objDef","maxElevation","obj","initialState","queueStared","queue","mapId","mapName","cleanObjectsState","gameAction","actionCreatorFactory","queueAction","loadMap","reset","enqueue","tryNextAction","nextAction","queueEnd","rotate","fall","projectile","fly","flyEnd","grapple","updateObject","addObject","gameReducer","reducerWithInitialState","case","cases","action","actions","addActions","target","newXY","newXYObjects","sort","objectValues","event","moveResolver","rotateResolver","myObjects","equipResolver","byId","launchActions","abortResults","hitTargetId","flyResolver","undefined","hitActions","projectileInstance","prevXY","grappleResolver","gameEpics","combineEpics","actions$","state$","match","game","mapTo","first","flatMap","newActionDelay","payload","meta","concat","of","soundEpics","tap","ignoreElements","epicMiddleware","createEpicMiddleware","composeEnhancers","composeWithDevTools","rootReducer","combineReducers","store","createStore","applyMiddleware","run","useEditor","useSelector","useState","editMode","setEditMode","dispatch","useDispatch","add","partialInstance","sample","remove","toggleEditMode","copyMap","serializedMap","JSON","stringify","navigator","clipboard","writeText","then","log","error","useKeyboardEvent","key","callback","useEffect","handler","window","addEventListener","removeEventListener","DebugView","Container","onClick","MapGrid","Row","styled","div","Cell","setOpen","addEmpty","CellContainer","CellObj","Remove","field","onChange","isEmpty","CellInfoContainer","size","TextInput","NumberInput","parseInt","TypeSelect","Object","keys","ElevationInput","f","RotationInput","label","RotationInputButton","RotationBtn","isEqual","span","p","Environment","objectsList","useThree","camera","xValues","yValues","mapCenterX","mapCenterY","offsetX","width","offsetY","offsetZ","lookAt","intensity","Color","shadow-mapSize-Height","shadow-mapSize-width","shadow-camera-far","shadow-bias","shadow-camera-left","shadow-camera-right","shadow-camera-top","shadow-camera-bottom","maps","GameInstance","player","fire","useGame","left","up","down","right","mapCenter","style","top","bottom","textAlign","zoom","onCreated","gl","shadowMap","PCFSoftShadowMap","enabled","fallback","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.37e4fcde.chunk.js","sourcesContent":["import { GameState } from '../state/gameReducer'\nimport { Action } from 'redux'\nimport { FC, ReactNode } from 'react'\n\nexport type XY = [number, number]\nexport type Vector2 = [number, number]\n\nexport enum ObjectTypes {\n    Player = 'Player',\n    WinTrigger = 'WinTrigger',\n\n    Grass = 'Grass',\n    Water = 'Water',\n    RockFloor = 'RockFloor',\n    Wall = 'Wall',\n    Box = 'Box',\n    BigRock = 'BigRock',\n\n    Pipe = 'Pipe',\n    PipeLeft = 'PipeLeft',\n    PipeRight = 'PipeRight',\n    PipePlace = 'PipePlace',\n    PipeUp = 'PipeUp',\n    PipeDown = 'PipeDown',\n    PipeElement = 'PipeElement',\n\n    Fence = 'Fence',\n\n    Button = 'Button',\n    Door = 'Door',\n    Ice = 'Ice',\n\n    Crossbow = 'Crossbow',\n    Cannon = 'Cannon',\n    Boom = 'Boom',\n\n    CrossbowProjectile = 'CrossbowProjectile',\n    RocketProjectile = 'RocketProjectile',\n}\n\nexport interface ObjectInstance {\n    type: ObjectTypes\n    id: string\n    xy: XY\n    rotation: Vector2\n    elevation: number\n    zIndex: number\n    aIndex: number\n    data: Partial<ObjectInstanceData>\n}\n\nexport interface ObjectInstanceData {\n    hasCannon: boolean\n    hasGrapple: boolean\n    info: string\n    open: boolean\n    active: boolean\n    targetId: string\n}\n\nexport interface ActionEvent {\n    who: ObjectInstance\n    self: ObjectInstance\n    what?: ObjectInstance\n    vector: Vector2\n    state: GameState\n    force?: number\n}\n\nexport interface ObjectDefinition {\n    name: string\n    height: (instance: ObjectInstance) => number\n    push?(event: ActionEvent): Action[] // triggered when elevation is to big\n    enter?(event: ActionEvent): Action[]\n    leave?(event: ActionEvent): Action[]\n    equip?(event: ActionEvent): Action[]\n    projectileLaunch?(event: ActionEvent): Action[] // eg. for projectile\n    projectileHit?(event: ActionEvent): Action[] // eg. for projectile\n    Component3d(props: RenderComponentProps): any\n}\n\nexport interface RenderComponentProps {\n    instance: ObjectInstance\n}\n\nexport interface MapData {\n    id: string\n    name: string\n    objects: ObjectInstance[]\n}\n","export const CAMERA_OFFSET = [-2, 4, 6]\n\nexport const MAX_MOVE_ELEVATION = 0.5\n\nexport const PROJECTILE_ELEVATION = 0.8\n\nexport const GRAPPLE_RANGE = 5\nexport const GRAPPLE_ELEVATION = 0.5\nexport const GRAPPLE_MOVE_DELAY = 300\n\nexport const DEFAULT_ACTION_DELAY = 65\n\nexport const FALL_TRIGGER_DELAY = 400\nexport const FALL_REMOVE_DELAY = 800\nexport const FALL_ELEVATION = -5\n","import { Vector2 } from './types'\n\nexport const PLAYER_ID = 'player'\n\nexport const UP: Vector2 = [0, -1]\nexport const RIGHT: Vector2 = [1, 0]\nexport const DOWN: Vector2 = [0, 1]\nexport const LEFT: Vector2 = [-1, 0]\n","import { XY, Vector2 } from './types/types'\nimport { sample } from 'lodash'\nimport { UP, LEFT, RIGHT, DOWN } from './types/consts'\n\nexport const reverseVector = (vector: Vector2) => vector.map(v => v * -1) as Vector2\n\nexport const applyVector = ([x, y]: XY, [vx, vy]: Vector2): XY => [x + vx, y + vy]\n\nexport const samePosition = ([x1, y1]: XY, [x2, y2]: XY) => x1 === x2 && y1 === y2\n\nexport const findById = <T extends { id: string }>(props: T[], id: string) => {\n    return props.find(prop => prop.id === id)\n}\n\nexport const findByXY = <T extends { xy: XY }>(objects: T[], xy: XY) => {\n    return objects.filter(tile => samePosition(tile.xy, xy))\n}\n\nexport const asArray = <T>(item: T | T[]): T[] => (Array.isArray(item) ? item : [item])\nexport const arrMerge = <T>(a: T[], b: T | T[] = []): T[] => [...a, ...asArray(b)]\n\nexport const limit = (value: number, min: number, max: number) =>\n    Math.min(max, Math.max(min, value))\n\nexport const limitVector = (vector: Vector2, min: number, max: number) =>\n    vector.map(v => limit(v, min, max)) as Vector2\n\nexport const vectorDiff = (v1: Vector2, v2: Vector2) => v1.map((v, i) => v2[i] - v) as Vector2\n\nexport const createArray = (length: number): number[] =>\n    Array.from({ length: length + 1 }, (v, i) => i)\n\nexport const randomRotation = () => {\n    return sample([UP, LEFT, RIGHT, DOWN])!\n}\n","import React, { useEffect } from 'react'\nimport { useLoader, useFrame } from 'react-three-fiber'\nimport { GLTFLoader, GLTF } from 'three/examples/jsm/loaders/GLTFLoader'\nimport { RenderComponentProps, Vector2 } from '../../types/types'\nimport { AnimationMixer, Group, LoopOnce } from 'three'\nimport { setInterval } from 'timers'\nimport { useSpring, animated } from 'react-spring/three'\nimport { timeInterval } from 'rxjs/operators'\n\nconst useMyLoader = () => {\n    // const robot = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/robot_model.gltf`)\n    const rocket = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/rocket.gltf`)\n    const cannon = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/cannon.gltf`)\n    const box = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/box.gltf`)\n    const rock = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/rock1.gltf`)\n    const fence = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/fence.gltf`)\n    const arrow = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/arrow.gltf`)\n    const crossbow = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/crossbow.gltf`)\n    const graund = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/graund.gltf`)\n    const wall = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/wall.gltf`)\n    const grass = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/grass.gltf`)\n    const water = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/water.gltf`)\n    const ice = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/ice.gltf`)\n    const button = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/button.gltf`)\n    const door = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/door.gltf`)\n    const pipe = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/pipe.gltf`)\n    const pipeLeft = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/pipe-left.gltf`)\n    const pipeRight = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/pipe-right.gltf`)\n    const pipePlace = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/pipe-place.gltf`)\n    const pipeElement = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/pipe-element.gltf`)\n    const pipeUp = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/pipe-down.gltf`)\n    const pipeDown = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/pipe-down.gltf`)\n    return {\n        // robot: robot.scene.clone(),\n        rocket: rocket.scene.clone(),\n        cannon: cannon.scene.clone(),\n        box: box.scene.clone(),\n        rock: rock.scene.clone(),\n        fence: fence.scene.clone(),\n        arrow: arrow.scene.clone(),\n        crossbow: crossbow.scene.clone(),\n        graund: graund.scene.clone(),\n        wall: wall.scene.clone(),\n        grass: grass.scene.clone(),\n        water: water.scene.clone(),\n        ice: ice.scene.clone(),\n        button: button.scene.clone(),\n        door: door.scene.clone(),\n        pipe: pipe.scene.clone(),\n        pipeLeft: pipeLeft.scene.clone(),\n        pipeRight: pipeRight.scene.clone(),\n        pipePlace: pipePlace.scene.clone(),\n        pipeElement: pipeElement.scene.clone(),\n        pipeUp: pipeUp.scene.clone(),\n        pipeDown: pipeDown.scene.clone(),\n    }\n}\nconst useAnimationLoader = () => {\n    // const jump = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/animations/jump.gltf`)\n    const boring = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/animations/boring.gltf`)\n    const boom = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/boom.gltf`)\n\n    return {\n        // jump,\n        boring,\n        boom,\n    }\n}\nexport const Player = (props: RenderComponentProps) => {\n    // const { robot } = useMyLoader()\n    return <AnimatieAsset {...props} />\n}\nexport const Box = (props: RenderComponentProps) => {\n    const { box } = useMyLoader()\n    return <AssetPreload {...props} model={box} />\n}\nexport const Rock = (props: RenderComponentProps) => {\n    const { rock } = useMyLoader()\n    return <AssetPreload {...props} model={rock} />\n}\nexport const Fence = (props: RenderComponentProps) => {\n    const { fence } = useMyLoader()\n    return <AssetPreload {...props} model={fence} />\n}\nexport const Arrow = (props: RenderComponentProps) => {\n    const { arrow } = useMyLoader()\n    return <AssetPreload {...props} model={arrow} />\n}\nexport const Boom = (props: RenderComponentProps) => {\n    const { boom } = useAnimationLoader()\n    return <AnimateSelfAsset {...props} animateModel={boom} />\n}\nexport const Cannon = (props: RenderComponentProps) => {\n    const { cannon } = useMyLoader()\n    return <AssetPreload {...props} model={cannon} elevationFix={-0.8} />\n}\nexport const Rocket = (props: RenderComponentProps) => {\n    const { rocket } = useMyLoader()\n    return <AssetPreload {...props} model={rocket} />\n}\nexport const Crossbow = (props: RenderComponentProps) => {\n    const { crossbow } = useMyLoader()\n    return <AssetPreload {...props} model={crossbow} elevationFix={-0.8} />\n}\nexport const Ground = (props: RenderComponentProps) => {\n    const { graund } = useMyLoader()\n    return <AssetPreload {...props} model={graund} castShadow={false} receiveShadow={true} />\n}\nexport const Wall = (props: RenderComponentProps) => {\n    const { wall } = useMyLoader()\n    return <AssetPreload {...props} model={wall} castShadow={false} receiveShadow={true} />\n}\nexport const Grass = (props: RenderComponentProps) => {\n    const { grass } = useMyLoader()\n    return <AssetPreload {...props} model={grass} castShadow={false} receiveShadow={true} />\n}\nexport const Water = (props: RenderComponentProps) => {\n    const { water } = useMyLoader()\n    return <AssetPreload {...props} model={water} castShadow={false} receiveShadow={true} />\n}\nexport const Ice = (props: RenderComponentProps) => {\n    const { ice } = useMyLoader()\n    return <AssetPreload {...props} model={ice} castShadow={true} receiveShadow={true} />\n}\nexport const Button = (props: RenderComponentProps) => {\n    const { button } = useMyLoader()\n    return <AssetPreload {...props} model={button} castShadow={true} receiveShadow={true} />\n}\nexport const Door = (props: RenderComponentProps) => {\n    const { door } = useMyLoader()\n    return <AssetPreload {...props} model={door} castShadow={true} receiveShadow={true} />\n}\nexport const Pipe = (props: RenderComponentProps) => {\n    const { pipe } = useMyLoader()\n    return <AssetPreload {...props} model={pipe} castShadow={true} receiveShadow={true} />\n}\nexport const PipeLeft = (props: RenderComponentProps) => {\n    const { pipeLeft } = useMyLoader()\n    return <AssetPreload {...props} model={pipeLeft} castShadow={true} receiveShadow={true} />\n}\nexport const PipeRight = (props: RenderComponentProps) => {\n    const { pipeRight } = useMyLoader()\n    return <AssetPreload {...props} model={pipeRight} castShadow={true} receiveShadow={true} />\n}\nexport const PipeDown = (props: RenderComponentProps) => {\n    const { pipeDown } = useMyLoader()\n    return <AssetPreload {...props} model={pipeDown} castShadow={true} receiveShadow={true} />\n}\nexport const PipeUp = (props: RenderComponentProps) => {\n    const { pipeUp } = useMyLoader()\n    return <AssetPreload {...props} model={pipeUp} castShadow={true} receiveShadow={true} />\n}\nexport const PipePlace = (props: RenderComponentProps) => {\n    const { pipePlace } = useMyLoader()\n    return <AssetPreload {...props} model={pipePlace} castShadow={true} receiveShadow={true} />\n}\nexport const PipeElement = (props: RenderComponentProps) => {\n    const { pipeElement } = useMyLoader()\n    return <AssetPreload {...props} model={pipeElement} castShadow={true} receiveShadow={true} />\n}\nexport const createTrigger = (color: string) => ({ instance }: RenderComponentProps) => {\n    const { xy, elevation, rotation } = instance\n\n    return (\n        <mesh position={[xy[0], elevation, xy[1]]} rotation={[0, vectorToThree(rotation), 0]}>\n            <boxBufferGeometry attach=\"geometry\" args={[0.5, 1, 0.5]} />\n            <meshStandardMaterial attach=\"material\" color={color} />\n        </mesh>\n    )\n}\n\ninterface AssetsProps extends RenderComponentProps {\n    color?: string\n    castShadow?: boolean\n    receiveShadow?: boolean\n    elevationFix?: number\n}\n\ninterface PreloadAssetProps extends AssetsProps {\n    model: GLTF['scene']\n}\ninterface PreloadAssetAnimateProps extends AssetsProps {\n    animateModel: GLTF\n}\n\nconst AssetPreload = ({\n    model,\n    instance: { xy, elevation, rotation, data },\n    castShadow = true,\n    receiveShadow = true,\n    elevationFix = 0,\n}: PreloadAssetProps) => {\n    const anim = useSpring({\n        pos: [xy[0], elevation + elevationFix, xy[1]],\n        rot: [0, vectorToThree(rotation), 0],\n    })\n\n    if (castShadow) model.children.map(el => (el.castShadow = true))\n    if (receiveShadow) model.children.map(el => (el.receiveShadow = true))\n    model.scale.set(0.5, 0.5, 0.5)\n    if (model.children.length > 1) {\n        data.open && model.children[1].position.setY(2)\n        data.active && model.children[1].position.setX(-0.2)\n    }\n    return <animated.primitive object={model} position={anim.pos} rotation={anim.rot} />\n}\n\nconst AnimatieAsset = ({\n    instance: { xy, elevation, rotation, data },\n    castShadow = true,\n    receiveShadow = true,\n}: AssetsProps) => {\n    const anim = useSpring({\n        pos: [xy[0], elevation, xy[1]],\n        rot: [0, vectorToThree(rotation), 0],\n    })\n\n    const robot = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/robot_model.gltf`)\n    const model = robot.scene\n    model.scale.set(0.5, 0.5, 0.5)\n    if (castShadow) model.children[0].castShadow = true\n    if (receiveShadow) model.children[0].receiveShadow = true\n\n    // const { jump } = useAnimationLoader()\n    const { boring } = useAnimationLoader()\n    // const { push } = useAnimationLoader()\n\n    const boringMixer = new AnimationMixer(boring.scene)\n    boring.animations.forEach(clip => {\n        boringMixer.clipAction(clip, model).play()\n    })\n\n    useFrame(() => {\n        boringMixer.update(0.02)\n    })\n\n    const { cannon } = useMyLoader()\n    const { crossbow } = useMyLoader()\n\n    return (\n        <animated.group position={anim.pos} rotation={anim.rot}>\n            <primitive object={model}>\n                <primitive object={cannon} visible={!!data.hasCannon} />\n                <primitive object={crossbow} visible={!!data.hasGrapple} />\n            </primitive>\n        </animated.group>\n    )\n}\n\nconst AnimateSelfAsset = ({\n    animateModel,\n    instance: { xy, elevation, rotation, data },\n    castShadow = true,\n    receiveShadow = true,\n}: PreloadAssetAnimateProps) => {\n    const anim = useSpring({\n        pos: [xy[0], elevation, xy[1]],\n        rot: [0, vectorToThree(rotation), 0],\n    })\n\n    const gltfScene = animateModel.scene.clone()\n    // useEffect(() => {\n    if (castShadow) gltfScene.children[0].castShadow = true\n    if (receiveShadow) gltfScene.children[0].receiveShadow = true\n\n    gltfScene.scale.set(0.6, 0.6, 0.6)\n\n    const mixer = new AnimationMixer(gltfScene)\n\n    animateModel.animations.forEach((clip, index) => {\n        const animation = mixer.clipAction(clip, gltfScene.children[index])\n        animation.setLoop(LoopOnce, 1)\n        animation.play()\n    })\n    // }, [xy])\n    useFrame(() => {\n        mixer.update(0.03)\n    })\n\n    return (\n        <animated.group position={anim.pos} rotation={anim.rot}>\n            <primitive object={gltfScene} />\n        </animated.group>\n    )\n}\n\nconst vectorToThree = (vector: Vector2) => {\n    if (vector[0] === 1 && vector[1] === 0) return Math.PI / 2\n    if (vector[0] === 0 && vector[1] === -1) return (Math.PI / 2) * 2\n    if (vector[0] === -1 && vector[1] === 0) return (Math.PI / 2) * 3\n    if (vector[0] === 0 && vector[1] === 1) return (Math.PI / 2) * 4\n    // return (Math.PI / 2) * 4\n    return 0\n}\n","import { limitVector } from '../helpers'\nimport { lose, move } from '../state/gameReducer'\nimport { PLAYER_ID } from '../types/consts'\nimport { ObjectDefinition, ObjectTypes } from '../types/types'\nimport { Grass, Ground, Ice, Wall, Water } from './models/Items'\n\nexport const tileTypeDefinitions: Partial<Record<ObjectTypes, ObjectDefinition>> = {\n    [ObjectTypes.Grass]: {\n        name: 'Grass',\n        height: () => 0,\n        Component3d: Grass,\n    },\n    [ObjectTypes.Water]: {\n        name: 'Water',\n        height: () => -1,\n        enter: ({ who }) => (who.id === PLAYER_ID ? [lose()] : []),\n        Component3d: Water,\n    },\n\n    [ObjectTypes.Ice]: {\n        name: 'Ice',\n        height: () => 0,\n        enter: ({ who, vector }) => [\n            move({ targetId: who.id, vector: limitVector(vector, -1, 1) }),\n        ],\n        Component3d: Ice,\n    },\n    [ObjectTypes.RockFloor]: {\n        name: 'Rock floor',\n        height: () => 0,\n        Component3d: Ground,\n    },\n    [ObjectTypes.Wall]: {\n        name: 'Wall',\n        height: () => 0,\n        Component3d: Wall,\n    },\n}\n","const soundList = {\n    button: `${process.env.PUBLIC_URL}/sounds/Button_gameplay.mp3`,\n    music: `${process.env.PUBLIC_URL}/sounds/elementary1.mp3`,\n    Alert_NO: `${process.env.PUBLIC_URL}/sounds/Alert_NO.mp3`,\n    Alert_YES: `${process.env.PUBLIC_URL}/sounds/Alert_YES.mp3`,\n    Bazooka: `${process.env.PUBLIC_URL}/sounds/Bazooka.mp3`,\n    Crossbow: `${process.env.PUBLIC_URL}/sounds/Crossbow.mp3`,\n    Engine_start: `${process.env.PUBLIC_URL}/sounds/Engine_start.mp3`,\n    Engine_LOOP_128: `${process.env.PUBLIC_URL}/sounds/Engine_LOOP_128.mp3`,\n    Engine_NO_1: `${process.env.PUBLIC_URL}/sounds/Engine_NO_1.mp3`,\n    Engine_NO_2: `${process.env.PUBLIC_URL}/sounds/Engine_NO_2.mp3`,\n    Engine_stop: `${process.env.PUBLIC_URL}/sounds/Engine_stop.mp3`,\n    Equip_1: `${process.env.PUBLIC_URL}/sounds/Equip_1.mp3`,\n    Equip_2: `${process.env.PUBLIC_URL}/sounds/Equip_2.mp3`,\n    Equip_3: `${process.env.PUBLIC_URL}/sounds/Equip_3.mp3`,\n    Equip_4: `${process.env.PUBLIC_URL}/sounds/Equip_4.mp3`,\n    Hero_1: `${process.env.PUBLIC_URL}/sounds/Hero_1.mp3`,\n    Hero_2: `${process.env.PUBLIC_URL}/sounds/Hero_2.mp3`,\n    Jump: `${process.env.PUBLIC_URL}/sounds/Jump.mp3`,\n}\n\nexport type SoundName = keyof typeof soundList\n\nexport const play = (name: SoundName, volume?: number) => {\n    const sound = new Audio(soundList[name])\n    sound.volume = 0.5\n    if (volume) sound.volume = volume / 2\n    sound.play()\n    // sound.addEventListener('ended', () => {\n    //     sound.play()\n    // })\n}\nexport const playEquip = (volume?: number) => {\n    const list = ['Equip_1', 'Equip_2', 'Equip_3', 'Equip_4']\n    play(list[Math.round(Math.random() * 4)] as SoundName, volume)\n}\n\nconst engineStart = new Audio(soundList['Engine_LOOP_128'])\n\nexport const playEngine = (volume?: number) => {\n    if (volume) engineStart.volume = volume\n    // const playEnd = () => {\n    //     play('Engine_stop', volume)\n    //     engineStart.removeEventListener('ended', playEnd)\n    // }\n    engineStart.play()\n    // engineStart.removeEventListener('ended', playEnd)\n    // engineStart.addEventListener('ended', playEnd)\n}\n","import { uniqueId } from 'lodash'\nimport { play, playEquip } from '../audio/play'\nimport { reverseVector } from '../helpers'\nimport { move, removeObject, setObjectData, tmpSpawn, win } from '../state/gameReducer'\nimport { PLAYER_ID } from '../types/consts'\nimport { ObjectDefinition, ObjectTypes } from '../types/types'\nimport {\n    Arrow,\n    Boom,\n    Box,\n    Button,\n    Cannon,\n    createTrigger,\n    Crossbow,\n    Door,\n    Fence,\n    Pipe,\n    PipeDown,\n    PipeElement,\n    PipeLeft,\n    PipePlace,\n    PipeRight,\n    PipeUp,\n    Player,\n    Rock,\n    Rocket,\n} from './models/Items'\n\nexport const propTypeDefinitions: Partial<Record<ObjectTypes, ObjectDefinition>> = {\n    [ObjectTypes.Player]: {\n        name: 'Player',\n        height: () => 2,\n        Component3d: Player,\n    },\n\n    [ObjectTypes.BigRock]: {\n        name: 'Big rock',\n        height: () => 0.55,\n        Component3d: Rock,\n    },\n    [ObjectTypes.Pipe]: {\n        name: 'Pipe',\n        height: () => 0.75,\n        Component3d: Pipe,\n    },\n\n    [ObjectTypes.PipeLeft]: {\n        name: 'PipeLeft',\n        height: () => 0.75,\n        Component3d: PipeLeft,\n    },\n    [ObjectTypes.PipeRight]: {\n        name: 'PipeRight',\n        height: () => 0.75,\n        Component3d: PipeRight,\n    },\n    [ObjectTypes.PipeUp]: {\n        name: 'PipeUp',\n        height: () => 0.75,\n        Component3d: PipeUp,\n    },\n    [ObjectTypes.PipeDown]: {\n        name: 'PipeDown',\n        height: () => 0.75,\n        Component3d: PipeDown,\n    },\n    [ObjectTypes.PipeElement]: {\n        name: 'PipeElement',\n        height: () => 0.75,\n        push: ({ self, vector }) => [move({ targetId: self.id, vector })],\n        Component3d: PipeElement,\n    },\n    [ObjectTypes.PipePlace]: {\n        name: 'PipePlace',\n        height: () => 0.14,\n        enter: ({ who, state, self }) => {\n            if (who.type === 'PipeElement') {\n                play('Engine_start')\n                return [win()]\n            }\n            return []\n        },\n        Component3d: PipePlace,\n    },\n\n    [ObjectTypes.Box]: {\n        name: 'Box',\n        height: () => 1,\n        push: ({ self, vector }) => [move({ targetId: self.id, vector })],\n        Component3d: Box,\n    },\n\n    [ObjectTypes.Fence]: {\n        name: 'Fence',\n        height: () => 1.5,\n        push: ({ force, self }) => {\n            if (force && force >= 50) return [removeObject(self.id)]\n            return []\n        },\n        Component3d: Fence,\n    },\n\n    [ObjectTypes.Button]: {\n        name: 'Button',\n        height: () => 2,\n        push: ({ state, self }) => {\n            play('button')\n            if (!self.data.targetId) {\n                console.warn('Missing Button data.targetId')\n                return []\n            }\n            const toggle = !self.data.active\n            return [\n                setObjectData({ targetId: self.id, data: { active: toggle } }),\n                setObjectData({ targetId: self.data.targetId, data: { open: toggle } }),\n            ]\n        },\n        Component3d: Button,\n    },\n\n    [ObjectTypes.WinTrigger]: {\n        name: 'WinTrigger',\n        height: () => 0,\n        enter: ({ who, state, self }) => {\n            if (who.id === PLAYER_ID) {\n                play('Engine_start')\n                return [win()]\n            }\n            return []\n        },\n        Component3d: createTrigger('#ABC123'),\n    },\n\n    [ObjectTypes.Door]: {\n        name: 'Door',\n        height: instance => (instance.data.open ? 0 : 1.5),\n        Component3d: Door,\n    },\n\n    [ObjectTypes.Cannon]: {\n        name: 'Cannon',\n        height: () => 0,\n        equip: ({ who, self }) => {\n            playEquip(0.8)\n            return [\n                setObjectData({ targetId: who.id, data: { hasCannon: true } }),\n                removeObject(self.id),\n            ]\n        },\n        Component3d: Cannon,\n    },\n\n    [ObjectTypes.Boom]: {\n        name: 'Boom',\n        height: () => 0,\n        Component3d: Boom,\n    },\n\n    [ObjectTypes.Crossbow]: {\n        name: 'Crossbow',\n        height: () => 0,\n        equip: ({ who, self }) => {\n            playEquip(0.8)\n            return [\n                setObjectData({ targetId: who.id, data: { hasGrapple: true } }),\n                removeObject(self.id),\n            ]\n        },\n        Component3d: Crossbow,\n    },\n\n    [ObjectTypes.RocketProjectile]: {\n        name: 'RocketProjectile',\n        height: () => 0,\n        projectileLaunch: ({ who }) => {\n            play('Bazooka')\n            return [\n                move(\n                    { targetId: who.id, vector: reverseVector(who.rotation) },\n                    { delay: 250 }, // delay remove from projectileHit\n                ),\n            ]\n        },\n        projectileHit: ({ self, what, who }) => {\n            if (!what) {\n                return [removeObject(self.id)]\n            }\n\n            play('Alert_YES') // TODO Boom!\n            return [\n                removeObject(self.id),\n                tmpSpawn({\n                    instance: {\n                        type: ObjectTypes.Boom,\n                        id: uniqueId(),\n                        xy: self.xy,\n                        elevation: self.elevation,\n                        rotation: self.rotation,\n                        aIndex: 0,\n                        zIndex: 20,\n                        data: {},\n                    },\n                }),\n            ]\n        },\n        Component3d: Rocket,\n    },\n\n    [ObjectTypes.CrossbowProjectile]: {\n        name: 'Projectile',\n        height: () => 0,\n        projectileLaunch: ({ who }) => {\n            play('Crossbow')\n            return [\n                move(\n                    { targetId: who.id, vector: [0, 0] },\n                    { delay: 250 }, // delay remove from projectileHit\n                ),\n            ]\n        },\n        projectileHit: ({ self, what, who }) => {\n            if (what) {\n                play('Alert_YES') // TODO Hit!\n            }\n            return [removeObject(self.id)]\n        },\n        Component3d: Arrow,\n    },\n}\n","import { ObjectDefinition, ObjectTypes } from '../types/types'\nimport { tileTypeDefinitions } from './tileTypeDefinitions'\nimport { propTypeDefinitions } from './propTypeDefinitions'\n\nexport const objectDefinitions: Partial<Record<ObjectTypes, ObjectDefinition>> = {\n    ...tileTypeDefinitions,\n    ...propTypeDefinitions,\n}\n\nexport const getDefinition = (type: ObjectTypes): ObjectDefinition => {\n    const def = objectDefinitions[type]\n\n    if (!def) throw new Error(`[getDefinition] Definition for ${type} not found`)\n\n    return def\n}\n","import { Action } from 'redux'\nimport { applyVector, asArray, findById, findByXY } from '../../helpers'\nimport { getDefinition } from '../../objects/definitions'\nimport { ActionEvent, ObjectInstance } from '../../types/types'\nimport { GameState, flyEnd } from '../gameReducer'\nimport { ResolverResults } from './types'\n\nexport const flyResolver = (state: GameState, targetId: string): ResolverResults => {\n    let objects = state.objects\n    const actions: Action[] = []\n    const addActions = (a: Action | Action[] = []) => actions.push(...asArray(a))\n    const abortResults = { objects, actions }\n\n    const target = findById(objects, targetId)\n\n    if (!target) {\n        console.warn(`[move] Target ${targetId} not found`)\n        return abortResults\n    }\n\n    const vector = target.rotation\n    let xy = target.xy\n\n    let limit = 15\n\n    while (limit) {\n        limit--\n\n        xy = applyVector(xy, vector)\n        const newXYObjects = findByXY(objects, xy).sort((a, b) => b.aIndex - a.aIndex)\n\n        for (const obj of newXYObjects) {\n            const objDef = getDefinition(obj.type)\n            const event: ActionEvent = { who: target, vector, state, self: obj, force: 100 }\n\n            if (isTooHight(obj, target)) {\n                objects = objects.map(obj => {\n                    if (obj !== target) return obj\n                    return { ...obj, xy }\n                })\n\n                addActions(flyEnd({ targetId, hitTargetId: obj.id }))\n                addActions(objDef.push?.(event))\n                return { objects, actions }\n            }\n        }\n    }\n\n    addActions(flyEnd({ targetId }))\n\n    objects = objects.map(obj => {\n        if (obj !== target) return obj\n        return { ...obj, xy }\n    })\n\n    return { objects, actions }\n}\n\nconst isTooHight = (ontoObj: ObjectInstance, flyer: ObjectInstance) => {\n    const objDef = getDefinition(ontoObj.type)\n    return ontoObj.elevation + objDef.height(ontoObj) > flyer.elevation\n}\n","import { Action } from 'redux'\nimport { FALL_REMOVE_DELAY, FALL_TRIGGER_DELAY, MAX_MOVE_ELEVATION } from '../../config'\nimport { applyVector, asArray, findById, findByXY } from '../../helpers'\nimport { getDefinition } from '../../objects/definitions'\nimport { PLAYER_ID } from '../../types/consts'\nimport { ActionEvent, ObjectInstance, Vector2 } from '../../types/types'\nimport { fall, GameState, lose, removeObject, updateObject } from '../gameReducer'\nimport { ResolverResults } from './types'\n\nexport const moveResolver = (\n    state: GameState,\n    targetId: string,\n    vector: Vector2,\n): ResolverResults => {\n    let objects = state.objects\n    const actions: Action[] = []\n    const addActions = (a: Action | Action[] = []) => actions.push(...asArray(a))\n\n    const target = findById(objects, targetId)\n\n    if (!target) {\n        console.warn(`[move] Target ${targetId} not found`)\n        return { objects, actions }\n    }\n\n    const newXY = applyVector(target.xy, vector)\n    const newXYObjects = findByXY(objects, newXY).sort((a, b) => b.aIndex - a.aIndex)\n\n    // Nothing there, fall and die\n    if (!newXYObjects.length) {\n        addActions([\n            updateObject({ targetId, objectValues: { xy: newXY } }, { delay: FALL_TRIGGER_DELAY }),\n            fall({ targetId }, { delay: FALL_REMOVE_DELAY }),\n            targetId === PLAYER_ID ? lose() : removeObject(targetId),\n        ])\n        return { objects, actions }\n    }\n\n    // Can enter to this region?\n    for (const obj of newXYObjects) {\n        const objDef = getDefinition(obj.type)\n        const event: ActionEvent = { who: target, vector, state, self: obj }\n\n        if (isTooHight(obj, target)) {\n            addActions(objDef.push?.(event))\n            return { objects, actions }\n        }\n    }\n\n    // Move target to new location\n    objects = objects.map(obj => {\n        if (obj !== target) return obj\n        return { ...obj, xy: newXY, elevation: maxElevation(newXYObjects) }\n    })\n\n    // Post enter events\n    for (const obj of newXYObjects) {\n        const objDef = getDefinition(obj.type)\n        const event: ActionEvent = { who: target, vector, state, self: obj }\n        addActions(objDef.enter?.(event))\n    }\n\n    return { objects, actions }\n}\n\nconst maxElevation = (objects: ObjectInstance[]): number =>\n    Math.max(\n        ...objects.map(obj => {\n            const objDef = getDefinition(obj.type)\n            return objDef.height(obj) + obj.elevation\n        }),\n    )\n\nconst isTooHight = (ontoObj: ObjectInstance, who: ObjectInstance) => {\n    const objDef = getDefinition(ontoObj.type)\n    return ontoObj.elevation + objDef.height(ontoObj) - who.elevation > MAX_MOVE_ELEVATION\n}\n","import { uniqueId } from 'lodash'\nimport { Action } from 'redux'\nimport {\n    GRAPPLE_ELEVATION,\n    PROJECTILE_ELEVATION,\n    GRAPPLE_MOVE_DELAY,\n    GRAPPLE_RANGE,\n} from '../../config'\nimport { applyVector, asArray, findById, findByXY, vectorDiff } from '../../helpers'\nimport { getDefinition } from '../../objects/definitions'\nimport { ObjectInstance, ObjectTypes, Vector2 } from '../../types/types'\nimport { GameState, move, tmpSpawn, updateObject } from '../gameReducer'\nimport { ResolverResults } from './types'\n\nexport const grappleResolver = (state: GameState, targetId: string): ResolverResults => {\n    let objects = state.objects\n    const actions: Action[] = []\n    const addActions = (a: Action | Action[] = []) => actions.push(...asArray(a))\n    const abortResults = { objects, actions }\n\n    const target = findById(objects, targetId)\n\n    if (!target) {\n        console.warn(`[grappleResolver] Target ${targetId} not found`)\n        return abortResults\n    }\n\n    const projectileInstance: ObjectInstance = {\n        type: ObjectTypes.CrossbowProjectile,\n        id: uniqueId(),\n        xy: target.xy,\n        rotation: target.rotation,\n        elevation: target.elevation + PROJECTILE_ELEVATION,\n        aIndex: 100,\n        zIndex: 10,\n        data: {},\n    }\n\n    const vector = target.rotation\n    let xy = target.xy\n\n    let limit = GRAPPLE_RANGE\n\n    while (limit) {\n        limit--\n\n        const prevXY = xy\n        xy = applyVector(xy, vector)\n        const newXYObjects = findByXY(objects, xy).sort((a, b) => b.aIndex - a.aIndex)\n\n        for (const obj of newXYObjects) {\n            if (isTooHight(obj, target)) {\n                addActions(tmpSpawn({ instance: projectileInstance }))\n                addActions(\n                    updateObject(\n                        { targetId: projectileInstance.id, objectValues: { xy } },\n                        { delay: GRAPPLE_MOVE_DELAY },\n                    ),\n                )\n                addActions(\n                    move({\n                        targetId,\n                        vector: vectorDiff(target.xy, prevXY),\n                    }),\n                )\n\n                return { objects, actions }\n            }\n        }\n    }\n\n    return abortResults\n}\n\nconst isTooHight = (ontoObj: ObjectInstance, flyer: ObjectInstance) => {\n    const objDef = getDefinition(ontoObj.type)\n    return ontoObj.elevation + objDef.height(ontoObj) > flyer.elevation + GRAPPLE_ELEVATION\n}\n","import { uniqueId } from 'lodash'\nimport { Action } from 'redux'\nimport actionCreatorFactory from 'typescript-fsa'\nimport { reducerWithInitialState } from 'typescript-fsa-reducers'\nimport { PROJECTILE_ELEVATION, FALL_ELEVATION } from '../config'\nimport { arrMerge, findById } from '../helpers'\nimport { createMap } from '../mocks/mapMock'\nimport { getDefinition } from '../objects/definitions'\nimport {\n    ActionEvent,\n    ObjectInstance,\n    ObjectInstanceData,\n    ObjectTypes,\n    Vector2,\n    XY,\n    MapData,\n} from '../types/types'\nimport { flyResolver } from './resolvers/flyResolver'\nimport { moveResolver } from './resolvers/moveResolver'\nimport { rotateResolver } from './resolvers/rotateResolver'\nimport { grappleResolver } from './resolvers/grappleResolver'\nimport { equipResolver } from './resolvers/equipResolver'\n\nexport interface GameState {\n    queueStared: boolean\n    queue: Action[]\n    mapId: string | null\n    mapName: string | null\n    objects: ObjectInstance[]\n    cleanObjectsState: ObjectInstance[]\n}\n\nexport interface GameStateAware {\n    game: GameState\n}\n\n// const mockObjects = createMap()\n\nexport const initialState: GameState = {\n    queueStared: false,\n    queue: [],\n    mapId: null,\n    mapName: null,\n    objects: [],\n    cleanObjectsState: [],\n}\n\nconst gameAction = actionCreatorFactory('GG')\nconst queueAction = actionCreatorFactory('QUEUE')\n\nexport const loadMap = gameAction<MapData>('LOAD_MAP')\nexport const reset = gameAction('RESET')\nexport const win = gameAction('WIN')\nexport const lose = gameAction('LOSE')\n\nexport const enqueue = queueAction<Action | Action[]>('ENQUEUE')\nexport const tryNextAction = queueAction('TRY_NEXT_ACTION')\nexport const nextAction = queueAction<Action>('NEXT_ACTION')\nexport const queueEnd = queueAction('QUEUE_END')\n\nexport const move = gameAction<{ targetId: string; vector: Vector2 }>('MOVE')\nexport const rotate = gameAction<{ targetId: string; rotation: Vector2 }>('ROTATE')\nexport const equip = gameAction<{ targetId: string }>('EQUIP')\nexport const fall = gameAction<{ targetId: string }>('FALL')\n\nexport const projectile = gameAction<{ instance: ObjectInstance; byId: string }>('PROJECTILE')\nexport const fly = gameAction<{ targetId: string }>('FLY')\nexport const flyEnd = gameAction<{ targetId: string; hitTargetId?: string }>('FLY_END')\nexport const grapple = gameAction<{ targetId: string }>('GRAPPLE')\n\nexport const updateObject = gameAction<{\n    targetId: string\n    objectValues: Partial<ObjectInstance>\n}>('UPDATE_OBJECT')\nexport const setObjectData = gameAction<{\n    targetId: string\n    data: Partial<ObjectInstanceData>\n}>('SET_OBJECT_DATA')\nexport const removeObject = gameAction<string>('REMOVE')\nexport const addObject = gameAction<ObjectInstance>('ADD')\nexport const tmpSpawn = gameAction<{ instance: ObjectInstance }>('TMP_SPAWN')\n\nexport const gameReducer = reducerWithInitialState(initialState)\n    /*\n     * Loading\n     */\n    .case(\n        loadMap,\n        (state, { id, name, objects }): GameState => ({\n            ...initialState,\n            mapId: id,\n            mapName: name,\n            objects,\n            cleanObjectsState: objects,\n        }),\n    )\n    .cases(\n        [reset, lose],\n        (state): GameState => ({\n            ...state,\n            queue: [],\n            queueStared: false,\n            objects: state.cleanObjectsState,\n            cleanObjectsState: state.cleanObjectsState,\n        }),\n    )\n    .case(\n        win,\n        (state): GameState => ({\n            ...initialState,\n        }),\n    )\n\n    /*\n     * Queue\n     */\n    .case(\n        enqueue,\n        (state, action): GameState => ({\n            ...state,\n            queue: arrMerge(state.queue, action),\n        }),\n    )\n    .case(\n        nextAction,\n        (state, action): GameState => ({\n            ...state,\n            queueStared: true,\n            queue: state.queue.filter(a => a !== action),\n        }),\n    )\n    .case(queueEnd, (state): GameState => ({ ...state, queueStared: false }))\n\n    /*\n     * User actions\n     */\n    .case(\n        move,\n        (state, { targetId, vector }): GameState => {\n            const { actions, objects } = moveResolver(state, targetId, vector)\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n    .case(\n        rotate,\n        (state, { targetId, rotation }): GameState => {\n            const { actions, objects } = rotateResolver(state, targetId, rotation)\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n    .case(\n        equip,\n        (state, { targetId }): GameState => {\n            const { actions, objects } = equipResolver(state, targetId)\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n\n    /*\n     * Projectiles\n     */\n    .case(\n        projectile,\n        (state, { instance, byId }): GameState => {\n            const objDef = getDefinition(instance.type)\n            const objects = [...state.objects, instance]\n\n            const who = findById(state.objects, byId)!\n            const event: ActionEvent = { who, vector: instance.rotation, state, self: instance }\n\n            const launchActions = objDef.projectileLaunch?.(event) || []\n            const actions = [fly({ targetId: instance.id }), ...launchActions]\n\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n    .case(\n        fly,\n        (state, { targetId }): GameState => {\n            const { actions, objects } = flyResolver(state, targetId)\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n    .case(\n        flyEnd,\n        (state, { targetId, hitTargetId }): GameState => {\n            const obj = findById(state.objects, targetId)\n            const what = hitTargetId ? findById(state.objects, hitTargetId) : undefined\n\n            const actions: Action[] = []\n            if (obj) {\n                const objDef = getDefinition(obj.type)\n                const event: ActionEvent = {\n                    who: null as any, // TODO,\n                    what,\n                    vector: obj.rotation,\n                    state,\n                    self: obj,\n                }\n                const hitActions = objDef.projectileHit?.(event) || []\n                actions.push(...hitActions)\n            }\n            return { ...state, queue: arrMerge(state.queue, actions) }\n        },\n    )\n\n    /*\n     * Grapple\n     */\n    .case(\n        grapple,\n        (state, { targetId }): GameState => {\n            const { actions, objects } = grappleResolver(state, targetId)\n            return {\n                ...state,\n                objects,\n                queue: arrMerge(state.queue, actions),\n            }\n        },\n    )\n\n    /*\n     * Edit and internal actions\n     */\n    .case(\n        setObjectData,\n        (state, { targetId, data }): GameState => {\n            const target = findById(state.objects, targetId)\n\n            return {\n                ...state,\n                objects: state.objects.map(obj => {\n                    if (obj !== target) return obj\n                    return { ...obj, data: { ...obj.data, ...data } }\n                }),\n            }\n        },\n    )\n    .case(\n        updateObject,\n        (state, { targetId, objectValues }): GameState => {\n            return {\n                ...state,\n                objects: state.objects.map(obj =>\n                    obj.id === targetId ? { ...obj, ...objectValues } : obj,\n                ),\n            }\n        },\n    )\n    .case(\n        removeObject,\n        (state, targetId): GameState => ({\n            ...state,\n            objects: state.objects.filter(obj => obj.id !== targetId),\n        }),\n    )\n    .case(\n        addObject,\n        (state, instance): GameState => ({\n            ...state,\n            objects: arrMerge(state.objects, instance),\n        }),\n    )\n    .case(\n        tmpSpawn,\n        (state, { instance }): GameState => ({\n            ...state,\n            objects: [...state.objects, instance],\n        }),\n    )\n    .case(\n        fall,\n        (state, { targetId }): GameState => {\n            return {\n                ...state,\n                objects: state.objects.map(obj =>\n                    obj.id === targetId ? { ...obj, elevation: FALL_ELEVATION } : obj,\n                ),\n            }\n        },\n    )\n","import { findById } from '../../helpers'\nimport { Vector2 } from '../../types/types'\nimport { ResolverResults } from './types'\nimport { GameState } from '../gameReducer'\n\nexport const rotateResolver = (\n    { objects }: GameState,\n    targetId: string,\n    rotation: Vector2,\n): ResolverResults => {\n    const target = findById(objects, targetId)\n\n    return {\n        objects: objects.map(obj => {\n            if (obj !== target) return obj\n            return { ...obj, rotation }\n        }),\n        actions: [],\n    }\n}\n","import { Action } from 'redux'\nimport { findById, findByXY } from '../../helpers'\nimport { getDefinition } from '../../objects/definitions'\nimport { ActionEvent } from '../../types/types'\nimport { ResolverResults } from './types'\nimport { GameState } from '../gameReducer'\n\nexport const equipResolver = (state: GameState, targetId: string): ResolverResults => {\n    const actions: Action[] = []\n    const target = findById(state.objects, targetId)\n    if (!target) return { objects: state.objects, actions: [] }\n\n    const myObjects = findByXY(state.objects, target.xy).sort((a, b) => b.aIndex - a.aIndex)\n\n    for (const obj of myObjects) {\n        const objDef = getDefinition(obj.type)\n        const event: ActionEvent = { who: target, vector: [0, 0], state, self: obj }\n        actions.push(...(objDef.equip?.(event) || []))\n    }\n\n    return {\n        actions,\n        objects: state.objects,\n    }\n}\n","import { first } from 'lodash'\nimport { Action } from 'redux'\nimport { combineEpics, StateObservable } from 'redux-observable'\nimport { concat, Observable, of } from 'rxjs'\nimport { delay, filter, flatMap, map, mapTo } from 'rxjs/operators'\nimport { DEFAULT_ACTION_DELAY } from '../config'\nimport {\n    enqueue,\n    GameStateAware,\n    nextAction,\n    queueEnd,\n    removeObject,\n    tmpSpawn,\n    tryNextAction,\n} from './gameReducer'\n\nconst enqueueEpic = (\n    actions$: Observable<Action>,\n    state$: StateObservable<GameStateAware>,\n): Observable<Action> =>\n    actions$.pipe(\n        filter(enqueue.match),\n        filter(() => !state$.value.game.queueStared),\n        mapTo(tryNextAction()),\n    )\n\nconst tryNextEpic = (\n    actions$: Observable<Action>,\n    state$: StateObservable<GameStateAware>,\n): Observable<Action> =>\n    actions$.pipe(\n        filter(tryNextAction.match),\n        map(() => first(state$.value.game.queue)),\n        map(action => (action ? nextAction(action) : queueEnd())),\n    )\n\nconst nextActionEpic = (\n    actions$: Observable<Action>,\n    state$: StateObservable<GameStateAware>,\n): Observable<Action> =>\n    actions$.pipe(\n        filter(nextAction.match),\n        flatMap(action => {\n            const newActionDelay = (action.payload as any).meta?.delay || DEFAULT_ACTION_DELAY\n            return concat(of(action.payload), of(tryNextAction()).pipe(delay(newActionDelay)))\n        }),\n    )\n\nconst tmpSpawnEpic = (\n    actions$: Observable<Action>,\n    state$: StateObservable<GameStateAware>,\n): Observable<Action> =>\n    actions$.pipe(\n        filter(tmpSpawn.match),\n        delay(600),\n        map(action => removeObject(action.payload.instance.id)),\n    )\n\nexport const gameEpics = combineEpics(enqueueEpic, tryNextEpic, nextActionEpic, tmpSpawnEpic)\n","import { Action } from 'redux'\nimport { combineEpics } from 'redux-observable'\nimport { Observable } from 'rxjs'\nimport { filter, ignoreElements, tap } from 'rxjs/operators'\nimport { play, playEngine } from '../audio/play'\nimport { equip, move, lose, grapple } from './gameReducer'\nimport { PLAYER_ID } from '../types/consts'\n\nconst moveSoundEpic = (actions$: Observable<Action>): Observable<Action> =>\n    actions$.pipe(\n        filter(move.match),\n        filter(action => action.payload.targetId === PLAYER_ID),\n        tap(() => playEngine(0.1)),\n        ignoreElements(),\n    )\n\nconst equipSoundEpic = (actions$: Observable<Action>): Observable<Action> =>\n    actions$.pipe(\n        filter(equip.match),\n        tap(target => play('Hero_2', 0.7)),\n        ignoreElements(),\n    )\n\nconst loseSoundEpic = (actions$: Observable<Action>): Observable<Action> =>\n    actions$.pipe(\n        filter(lose.match),\n        tap(target => play('Engine_NO_2', 0.7)),\n        ignoreElements(),\n    )\n\nconst grappleSoundEpic = (actions$: Observable<Action>): Observable<Action> =>\n    actions$.pipe(\n        filter(grapple.match),\n        tap(target => play('Crossbow', 0.7)),\n        ignoreElements(),\n    )\n\nexport const soundEpics = combineEpics(\n    moveSoundEpic,\n    equipSoundEpic,\n    loseSoundEpic,\n    grappleSoundEpic,\n)\n","import { applyMiddleware, combineReducers, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { combineEpics, createEpicMiddleware } from 'redux-observable'\nimport { gameEpics } from './gameEpics'\nimport { gameReducer } from './gameReducer'\nimport { soundEpics } from './soundEpics'\n\nconst epicMiddleware = createEpicMiddleware()\n\nconst composeEnhancers = composeWithDevTools({\n    name: 'App',\n})\n\nconst rootReducer = combineReducers({\n    game: gameReducer,\n})\n\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(epicMiddleware)))\n\nepicMiddleware.run(combineEpics(soundEpics, gameEpics))\n","import { uniqueId } from 'lodash'\nimport { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { randomRotation } from '../helpers'\nimport { addObject, GameStateAware, removeObject, updateObject } from '../state/gameReducer'\nimport { ObjectInstance, ObjectTypes } from '../types/types'\n\nexport const useEditor = () => {\n    const state = useSelector((state: GameStateAware) => state.game)\n    const [editMode, setEditMode] = useState(false)\n    const dispatch = useDispatch()\n\n    const toggleEditMode = () => {\n        setEditMode(!editMode)\n    }\n\n    const update = (targetId: string) => (objectValues: Partial<ObjectInstance>) => {\n        dispatch(updateObject({ targetId, objectValues }))\n    }\n\n    const add = (partialInstance: Partial<ObjectInstance>) => {\n        const { type = ObjectTypes.Grass, ...rest } = partialInstance\n\n        const instance: ObjectInstance = {\n            type,\n            id: partialInstance.id || uniqueId(type + '-'),\n            xy: [0, 0],\n            rotation: randomRotation(),\n            zIndex: 0,\n            aIndex: 0,\n            data: {},\n            elevation: 0,\n            ...partialInstance,\n        }\n\n        dispatch(addObject(instance))\n    }\n\n    const remove = (targetId: string) => {\n        dispatch(removeObject(targetId))\n    }\n\n    const copyMap = () => {\n        const serializedMap = JSON.stringify(state.objects)\n\n        navigator.clipboard.writeText(serializedMap).then(() => {\n            console.log('Copied to clipboard')\n        }, console.error)\n    }\n\n    return { update, add, remove, toggleEditMode, editMode, copyMap }\n}\n","import { useEffect } from 'react'\n\nexport const useKeyboardEvent = (key: string, callback: Function) => {\n    useEffect(() => {\n        const handler = (event: KeyboardEvent) => {\n            if (event.key === key) callback()\n        }\n\n        window.addEventListener('keydown', handler)\n\n        return () => window.removeEventListener('keydown', handler)\n    })\n}\n","import { isEmpty, isEqual } from 'lodash'\nimport React, { useState } from 'react'\nimport { findById, createArray, findByXY } from '../helpers'\nimport { useEditor } from '../hooks/useEditor'\nimport { getDefinition, objectDefinitions } from '../objects/definitions'\nimport { ObjectInstance, ObjectTypes, XY, Vector2 } from '../types/types'\nimport styled from 'styled-components'\nimport { UP, RIGHT, DOWN, LEFT } from '../types/consts'\n\ninterface DebugViewProps {\n    objects: ObjectInstance[]\n}\n\nconst size = 150\nconst grid = 10\n\nexport const DebugView = ({ objects }: DebugViewProps) => {\n    const { copyMap } = useEditor()\n\n    return (\n        <Container>\n            <button onClick={copyMap}>Copy map</button>\n            <MapGrid>\n                {createArray(grid).map(y => (\n                    <Row key={y}>\n                        {createArray(grid).map(x => (\n                            <Cell key={x} objects={findByXY(objects, [x, y])} xy={[x, y]} />\n                        ))}\n                    </Row>\n                ))}\n            </MapGrid>\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    position: absolute;\n    z-index: 100;\n    top: 0;\n    right: 0;\n    left: 0;\n    bottom: 0;\n    opacity: 0.8;\n    background-color: black;\n    overflow: auto;\n`\n\nconst MapGrid = styled.div`\n    border: 1px solid #333;\n    font-size: 12px;\n`\n\nconst Row = styled.div`\n    display: flex;\n`\n\ninterface CellProps {\n    xy: XY\n    objects: ObjectInstance[]\n}\n\nexport const Cell = ({ objects, xy }: CellProps) => {\n    const [open, setOpen] = useState(false)\n    const { update, add, remove, copyMap } = useEditor()\n\n    const addEmpty = () => add({ type: ObjectTypes.RockFloor, xy })\n    const openAndAdd = () => {\n        setOpen(true)\n        if (!objects.length) addEmpty()\n    }\n\n    if (open) {\n        return (\n            <CellContainer>\n                {objects.map(obj => (\n                    <CellObj key={obj.id}>\n                        <Remove onClick={() => remove(obj.id)} />\n                        <TextInput obj={obj} field=\"id\" onChange={update(obj.id)} />\n                        <TypeSelect obj={obj} onChange={update(obj.id)} />\n                        <ElevationInput obj={obj} onChange={update(obj.id)} />\n                        <RotationInput obj={obj} onChange={update(obj.id)} />\n                        zIndex:\n                        <NumberInput obj={obj} field=\"zIndex\" onChange={update(obj.id)} />\n                        aIndex:\n                        <NumberInput obj={obj} field=\"aIndex\" onChange={update(obj.id)} />\n                        {!isEmpty(obj.data) && <pre>{JSON.stringify(obj.data, null, 1)}</pre>}\n                    </CellObj>\n                ))}\n                <button onClick={addEmpty}>+</button>\n                <button onClick={() => setOpen(false)}>Close</button>\n            </CellContainer>\n        )\n    }\n\n    return (\n        <CellInfoContainer onClick={openAndAdd}>\n            {objects.map(obj => (\n                <CellObj key={obj.id}>\n                    <strong>{obj.type}</strong> - <small>{obj.id}</small>\n                    {!isEmpty(obj.data) && <pre>{JSON.stringify(obj.data, null, 1)}</pre>}\n                </CellObj>\n            ))}\n        </CellInfoContainer>\n    )\n}\n\nconst CellInfoContainer = styled.div`\n    width: ${size}px;\n    min-height: ${size}px;\n    border: 1px solid #333;\n`\n\nconst CellObj = styled.div`\n    position: relative;\n    background: #333;\n    padding: 7px 10px;\n    margin: 4px;\n    pre {\n        font-size: 10px;\n    }\n`\n\nconst Remove = styled.div`\n    position: absolute;\n    top: 0;\n    right: 0;\n    cursor: pointer;\n    &::after {\n        content: '❌';\n    }\n`\n\nconst CellContainer = styled.div`\n    width: ${size * 1.5}px;\n    min-height: ${size}px;\n    border: 1px solid #333;\n`\n\ninterface TextInputProps {\n    obj: ObjectInstance\n    field: keyof ObjectInstance\n    onChange(partial: Partial<ObjectInstance>): void\n}\n\nconst TextInput = ({ obj, field, onChange }: TextInputProps) => {\n    return (\n        <div>\n            <input\n                value={obj[field] as string}\n                onChange={event => onChange({ [field]: event.target.value })}\n            />\n        </div>\n    )\n}\n\ninterface NumberInputProps {\n    obj: ObjectInstance\n    field: keyof ObjectInstance\n    onChange(partial: Partial<ObjectInstance>): void\n}\n\nconst NumberInput = ({ obj, field, onChange }: NumberInputProps) => {\n    return (\n        <div>\n            <input\n                type=\"number\"\n                value={obj[field] as string}\n                onChange={event => onChange({ [field]: parseInt(event.target.value, 10) })}\n            />\n        </div>\n    )\n}\n\ninterface TypeSelectProps {\n    obj: ObjectInstance\n    onChange(partial: Partial<ObjectInstance>): void\n}\n\nconst TypeSelect = ({ obj, onChange }: TypeSelectProps) => {\n    return (\n        <div>\n            <select\n                value={obj.type}\n                onChange={event => onChange({ type: event.target.value as ObjectTypes })}\n            >\n                {Object.keys(objectDefinitions).map(item => (\n                    <option>{item}</option>\n                ))}\n            </select>\n        </div>\n    )\n}\n\ninterface ElevationInputProps {\n    obj: ObjectInstance\n    onChange(partial: Partial<ObjectInstance>): void\n}\n\nconst ElevationInput = ({ obj, onChange }: ElevationInputProps) => {\n    const f = 100\n    return (\n        <div>\n            <input\n                type=\"range\"\n                min={-1 * f}\n                max={10 * f}\n                value={obj.elevation * f}\n                onChange={event => onChange({ elevation: parseInt(event.target.value, 10) / f })}\n            />\n            {Math.round(obj.elevation * 10) / 10}\n        </div>\n    )\n}\n\ninterface RotationInputProps {\n    obj: ObjectInstance\n    onChange(partial: Partial<ObjectInstance>): void\n}\n\nconst RotationInput = ({ obj, onChange }: RotationInputProps) => {\n    return (\n        <div>\n            <RotationInputButton obj={obj} label={'UP'} rotation={UP} onChange={onChange} />\n            <RotationInputButton obj={obj} label={'RIGHT'} rotation={RIGHT} onChange={onChange} />\n            <RotationInputButton obj={obj} label={'DOWN'} rotation={DOWN} onChange={onChange} />\n            <RotationInputButton obj={obj} label={'LEFT'} rotation={LEFT} onChange={onChange} />\n        </div>\n    )\n}\n\ninterface RotationInputButtonProps {\n    label: string\n    obj: ObjectInstance\n    rotation: Vector2\n    onChange(partial: Partial<ObjectInstance>): void\n}\n\nconst RotationInputButton = ({ obj, onChange, rotation, label }: RotationInputButtonProps) => {\n    return (\n        <RotationBtn\n            active={isEqual(obj.rotation, rotation)}\n            onClick={() => onChange({ rotation })}\n        >\n            {label}\n        </RotationBtn>\n    )\n}\n\nconst RotationBtn = styled.span<{ active: boolean }>`\n    margin-right: 5px;\n    cursor: pointer;\n    ${p => p.active && 'font-weight: bold;'};\n`\n","import React, { useEffect } from 'react'\nimport { Color } from 'three'\nimport { useGame } from '../hooks/useGame'\nimport { useThree } from 'react-three-fiber'\nimport { ObjectInstance } from '../types/types'\nimport { CAMERA_OFFSET } from '../config'\n\nconst d = 5\n\ninterface EnvironmentProps {\n    // player: ObjectInstance,\n    mapId: string | null\n    objectsList: ObjectInstance[]\n}\n\nexport const Environment = ({ objectsList, mapId }: EnvironmentProps) => {\n    const { camera, size } = useThree()\n\n    useEffect(() => {\n        const xValues = objectsList.map(obj => obj.xy[0])\n        const yValues = objectsList.map(obj => obj.xy[1])\n\n        const mapCenterX = Math.max(...xValues) / 2\n        const mapCenterY = Math.max(...yValues) / 2\n\n        const offsetX =\n            (CAMERA_OFFSET[0] * Math.max(mapCenterX, mapCenterY) * 7) /\n            (size.width / size.height) /\n            0.9\n        const offsetY =\n            (CAMERA_OFFSET[1] * Math.max(mapCenterX, mapCenterY) * 7) /\n            (size.width / size.height) /\n            0.9\n        const offsetZ =\n            (CAMERA_OFFSET[2] * Math.max(mapCenterX, mapCenterY) * 7) /\n            (size.width / size.height) /\n            0.9\n\n        camera.position.set(mapCenterX + offsetX, offsetZ, mapCenterY + offsetY)\n        camera.lookAt(mapCenterX, 0, mapCenterY)\n    }, [mapId, size])\n\n    return (\n        <group>\n            <ambientLight intensity={2} color={new Color('#dbab93')} />\n            <pointLight\n                position={[6, 7, 8]}\n                intensity={2.2}\n                color={new Color('#c86b6f')}\n                shadow-mapSize-Height=\"1024\"\n                shadow-mapSize-width=\"1024\"\n                shadow-camera-far={30}\n                shadow-bias={-0.01}\n                castShadow\n                shadow-camera-left={-d}\n                shadow-camera-right={d}\n                shadow-camera-top={d}\n                shadow-camera-bottom={-d}\n            />\n            <pointLight position={[1, 3, 5]} intensity={2.2} color={new Color('#3a8dc2')} />\n        </group>\n    )\n}\n","import { ObjectInstance, MapData } from '../types/types'\nimport map0 from './map0.json'\nimport map1 from './map1.json'\nimport map2 from './map2.json'\n\nexport const maps: MapData[] = [\n    { id: 'map-0', name: 'Test 0', objects: map0 as any },\n    { id: 'map-1', name: 'Test 1', objects: map1 as any },\n    { id: 'map-2', name: 'Test 2', objects: map2 as any },\n]\n","import React, { Suspense, useEffect } from 'react'\nimport { Canvas } from 'react-three-fiber'\nimport { PCFSoftShadowMap } from 'three'\nimport { useEditor } from '../hooks/useEditor'\nimport { useGame } from '../hooks/useGame'\nimport { useKeyboardEvent } from '../hooks/useKeyboardEvent'\nimport { getDefinition } from '../objects/definitions'\nimport { DOWN, LEFT, RIGHT, UP } from '../types/consts'\nimport { DebugView } from './DebugView'\nimport { Environment } from './Environment'\nimport map1 from '../data/map1.json'\nimport map2 from '../data/map2.json'\nimport { ObjectInstance } from '../types/types'\nimport { CAMERA_OFFSET } from '../config'\nimport { maps } from '../data/maps'\n\nexport const GameInstance = () => {\n    const { objects, mapId, mapName, move, equip, grapple, fire, loadMap, reset } = useGame()\n    // a ja szukam jakiegos objaect map :(\n    const { editMode, toggleEditMode } = useEditor()\n    useKeyboardEvent('e', toggleEditMode)\n\n    const left = () => move(LEFT)\n    const up = () => move(UP)\n    const down = () => move(DOWN)\n    const right = () => move(RIGHT)\n\n    useKeyboardEvent('r', reset)\n\n    useKeyboardEvent('ArrowLeft', left)\n    useKeyboardEvent('ArrowUp', up)\n    useKeyboardEvent('ArrowDown', down)\n    useKeyboardEvent('ArrowRight', right)\n    useKeyboardEvent('Enter', equip)\n    useKeyboardEvent('Shift', grapple)\n    useKeyboardEvent(' ', fire)\n\n    let mapCenter = [0, 0]\n    objects.forEach(el => {\n        if (el.xy[0] > mapCenter[0]) mapCenter[0] = el.xy[0]\n        if (el.xy[1] > mapCenter[1]) mapCenter[1] = el.xy[0]\n    })\n    mapCenter = mapCenter.map(el => el / 2)\n    // TODO remove when menu will be added\n    useEffect(() => {\n        loadMap(maps[0])\n    }, [])\n\n    return (\n        <>\n            {editMode && <DebugView objects={objects} />}\n            <div\n                style={{\n                    position: 'absolute',\n                    zIndex: 5,\n                    top: 0,\n                    left: 0,\n                }}\n            >\n                {maps.map(map => (\n                    <button key={map.id} onClick={() => loadMap(map)}>\n                        Map {map.name}\n                    </button>\n                ))}\n            </div>\n            {mapName && (\n                <div\n                    style={{\n                        position: 'absolute',\n                        zIndex: 5,\n                        top: 0,\n                        right: 10,\n                    }}\n                >\n                    <h1>Map: {mapName}</h1>\n                </div>\n            )}\n            <div\n                style={{\n                    position: 'absolute',\n                    zIndex: 5,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    textAlign: 'center',\n                }}\n            >\n                <button onClick={left}>\n                    <strong>←</strong>\n                </button>\n                <button onClick={up}>\n                    <strong>↑</strong>\n                </button>\n                <button onClick={down}>\n                    <strong>↓</strong>\n                </button>\n                <button onClick={right}>\n                    <strong>→</strong>\n                </button>\n                <button onClick={equip}>\n                    Equip <small>{`[enter]`}</small>\n                </button>\n                <button onClick={grapple}>\n                    Grapple <small>{`[shift]`}</small>\n                </button>\n                <button onClick={fire}>\n                    Fire <small>{'[space]'}</small>\n                </button>\n                <button onClick={reset}>\n                    Restart <small>{`[R]`}</small>\n                </button>\n            </div>\n            {mapId && (\n                <Canvas\n                    // orthographic\n                    camera={{\n                        zoom: 20,\n                    }}\n                    onCreated={scene => {\n                        scene.gl.shadowMap.type = PCFSoftShadowMap\n                        scene.gl.shadowMap.enabled = true\n                    }}\n                >\n                    <group>\n                        <Environment objectsList={objects} mapId={mapId} />\n                        <Suspense\n                            fallback={\n                                <mesh>\n                                    <boxBufferGeometry attach=\"geometry\" args={[0.5, 0.5, 0.5]} />\n                                    <meshStandardMaterial attach=\"material\" color=\"red\" />\n                                </mesh>\n                            }\n                        >\n                            {objects.map(obj => {\n                                const { Component3d } = getDefinition(obj.type)\n                                return <Component3d key={obj.id} instance={obj} />\n                            })}\n                        </Suspense>\n                    </group>\n                </Canvas>\n            )}\n        </>\n    )\n}\n","import { isEqual, uniqueId } from 'lodash'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Action } from 'redux'\nimport { play } from '../audio/play'\nimport { PROJECTILE_ELEVATION } from '../config'\nimport { findById } from '../helpers'\nimport {\n    enqueue,\n    equip,\n    GameStateAware,\n    grapple,\n    loadMap,\n    move,\n    projectile,\n    reset,\n    rotate,\n} from '../state/gameReducer'\nimport { PLAYER_ID } from '../types/consts'\nimport { MapData, ObjectInstance, ObjectTypes, Vector2 } from '../types/types'\n\nexport const useGame = () => {\n    const state = useSelector((state: GameStateAware) => state.game)\n    const dispatch = useDispatch()\n    const player = findById(state.objects, PLAYER_ID)!\n\n    if (!player) console.warn(`Player don't exists`)\n\n    const triggerMove = (vector: Vector2) => {\n        if (state.queueStared) return\n\n        const actions: Action[] = []\n\n        if (!player) {\n            return console.warn(`Player don't exists`)\n        }\n\n        if (!isEqual(player.rotation, vector)) {\n            actions.push(rotate({ targetId: player.id, rotation: vector }))\n        } else {\n            actions.push(move({ targetId: player.id, vector }))\n        }\n\n        dispatch(enqueue(actions))\n    }\n\n    const triggerEquip = () => {\n        if (state.queueStared) return\n        dispatch(enqueue(equip({ targetId: player.id })))\n    }\n\n    const triggerGrapple = () => {\n        if (state.queueStared) return\n\n        if (!player.data.hasGrapple) {\n            play('Alert_NO')\n            return\n        }\n\n        dispatch(enqueue(grapple({ targetId: player.id })))\n    }\n\n    const triggerFire = () => {\n        if (state.queueStared) return\n        const { id, xy, rotation, elevation, data } = player\n\n        if (!data.hasCannon) {\n            play('Alert_NO')\n            return\n        }\n\n        const instance: ObjectInstance = {\n            type: ObjectTypes.RocketProjectile,\n            id: uniqueId(),\n            xy,\n            rotation,\n            elevation: elevation + PROJECTILE_ELEVATION,\n            aIndex: 100,\n            zIndex: 10,\n            data,\n        }\n\n        dispatch(enqueue(projectile({ byId: id, instance })))\n    }\n\n    const triggerLoadMap = (map: MapData) => {\n        dispatch(loadMap(map))\n    }\n\n    const triggerReset = () => {\n        dispatch(reset())\n    }\n\n    return {\n        ...state,\n        player,\n\n        loadMap: triggerLoadMap,\n        reset: triggerReset,\n\n        move: triggerMove,\n        equip: triggerEquip,\n        fire: triggerFire,\n        grapple: triggerGrapple,\n    }\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { store } from '../state/store'\nimport { GameInstance } from './GameInstance'\n\nexport const App = () => {\n    return (\n        <Provider store={store}>\n            <GameInstance />\n        </Provider>\n    )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './app/App'\nimport './styles/global.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}