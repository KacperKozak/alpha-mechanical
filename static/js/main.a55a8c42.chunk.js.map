{"version":3,"sources":["data/images/lake.png","app/intro/intro.mp4","types/types.ts","config.ts","types/consts.ts","helpers.ts","objects/models/Items.tsx","objects/tileTypeDefinitions.tsx","audio/play.ts","objects/propTypeDefinitions.tsx","objects/definitions.ts","state/resolvers/flyResolver.ts","state/resolvers/grappleResolver.ts","state/resolvers/moveResolver.ts","state/gameReducer.ts","state/resolvers/rotateResolver.ts","state/resolvers/equipResolver.ts","state/localReducer.ts","state/gameEpics.ts","state/soundEpics.ts","state/store.ts","hooks/useGame.ts","app/Environment.tsx","app/GameInstance.tsx","components/Button.tsx","components/Dialog.tsx","data/maps.ts","hooks/useEditor.ts","hooks/useKeyboardEvent.ts","app/Authors.tsx","app/DebugView.tsx","app/intro/Intro.tsx","app/Menu.tsx","hooks/useLocal.ts","app/App.tsx","index.tsx","data/images/button.png","data/images/stairs.png","data/images/wall.png","data/images/cliff.png","data/images/cannonRecoil.png","data/images/dustRiver.png","data/images/dustPipe.png","data/images/greenRiver.png"],"names":["module","exports","ObjectTypes","CAMERA_OFFSET","AUTHORS","name","tech","UP","RIGHT","DOWN","LEFT","applyVector","x","y","findById","props","id","find","prop","findByXY","objects","xy","filter","tile","x1","y1","x2","y2","samePosition","asArray","item","Array","isArray","arrMerge","a","b","limitVector","vector","min","max","map","v","value","Math","limit","vectorDiff","v1","v2","i","createArray","length","from","color","useMyLoader","rocket","useLoader","GLTFLoader","process","cannon","box","rock","rock2","fence","arrow","crossbow","graund","wall","grass","water","ice","button","door","wallMetal","pipe","pipeLeft","pipeRight","pipePlace","pipeElement","pipeUp","pipeDown","tree","tree2","metal","metal2","scene","useAnimationLoader","boring","boom","AssetPreload","model","instance","elevation","rotation","data","castShadow","receiveShadow","elevationFix","clonedModel","useMemo","m","clone","scale","set","children","el","open","position","setY","active","setX","anim","useSpring","pos","rot","vectorToThree","primitive","object","AnimateSelfAsset","animateModel","gltfScene","mixer","AnimationMixer","animations","forEach","clip","index","animation","clipAction","setLoop","LoopOnce","play","useFrame","update","group","PI","tileTypeDefinitions","Grass","height","Component3d","Water","enter","who","self","lose","Ice","move","targetId","RockFloor","Wall","soundList","Alert_NO","Alert_YES","Bazooka","Crossbow","Engine_start","Engine_LOOP_128","Engine_NO_1","Engine_NO_2","Engine_stop","Equip_1","Equip_2","Equip_3","Equip_4","Hero_1","Hero_2","Jump","Explosion_1","Explosion_2","Music","Drone","getAudio","volume","audio","Audio","playEquip","round","random","explosionIndex","engineStart","propTypeDefinitions","Player","models","robotModel","robot","animMixer","visible","hasCannon","hasGrapple","BigRock","BigRock2","Pipe","PipeLeft","PipeRight","PipeUp","PipeDown","PipeElement","push","PipePlace","type","win","Tree","Tree2","Metal","Metal2","Box","Fence","force","removeObject","Button","state","console","warn","toggle","setObjectData","WinTrigger","attach","args","Door","WallMetal","Cannon","equip","Boom","RocketProjectile","projectileLaunch","delay","projectileHit","what","list","playExplosion","tmpSpawn","uniqueId","aIndex","zIndex","CrossbowProjectile","objectDefinitions","getDefinition","def","Error","isTooHight","ontoObj","flyer","objDef","maxElevation","obj","initialState","queueStared","queue","mapId","mapName","cleanObjectsState","winDialog","gameAction","actionCreatorFactory","queueAction","loadMap","unloadMap","reset","showWinDialog","enqueue","tryNextAction","nextAction","queueEnd","rotate","fall","projectile","fly","flyEnd","grapple","updateObject","addObject","replaceObjects","updateCleanObjectsState","gameReducer","reducerWithInitialState","case","action","actions","addActions","target","newXY","newXYObjects","sort","objectValues","event","newElevation","moveResolver","rotateResolver","myObjects","equipResolver","byId","launchActions","abortResults","hitTargetId","flyResolver","undefined","hitActions","projectileInstance","addGrappleAnimation","prevXY","grappleResolver","addCompletedMap","localReducer","completedMaps","uniq","gameEpics","combineEpics","actions$","state$","match","game","mapTo","first","flatMap","newActionDelay","payload","meta","concat","of","soundEpics","tap","setTimeout","pause","ignoreElements","epicMiddleware","createEpicMiddleware","composeEnhancers","composeWithDevTools","rootReducer","combineReducers","local","persistReducer","key","storage","store","createStore","applyMiddleware","persistor","persistStore","run","useGame","useSelector","dispatch","useDispatch","player","rdy","isEqual","fire","Environment","objectsList","useThree","camera","size","useEffect","xValues","yValues","mapCenterX","mapCenterY","offsetX","width","offsetY","offsetZ","lookAt","intensity","Color","shadow-mapSize-Height","shadow-mapSize-width","shadow-camera-far","shadow-bias","shadow-camera-left","shadow-camera-right","shadow-camera-top","shadow-camera-bottom","GameInstance","zoom","onCreated","gl","shadowMap","PCFSoftShadowMap","enabled","fallback","styled","ButtonBlock","div","Dialog","Container","DialogBG","maps","walk","image","buttonImg","stairsImg","stairs","cliffImg","cliff","wallImg","cannonRecoilImg","cannonRecoil","dustRiverImg","dustRiver","dustPipeImg","dustPipe","greenRiverImg","greenRiver","mountains","lakeImg","lake","useEditor","useState","editMode","setEditMode","lastType","setLastType","lastElevation","setLastElevation","updateCleanState","add","sample","remove","moveMap","toggleEditMode","copyMap","serializedMap","JSON","stringify","navigator","clipboard","writeText","then","log","error","useKeyboardEvent","callback","deps","memoisedCallback","useCallback","hotkeys","unbind","Authors","Info","AuthorList","array","arr","slice","j","floor","shuffleArray","href","p","ul","DebugView","editor","onClick","MapGrid","Row","Cols","Cell","setOpen","addEmpty","getHeight","CellContainer","CellObj","Remove","field","onChange","CellInfoContainer","style","isEmpty","TextInput","NumberInput","step","parseFloat","Number","isNaN","TypeSelect","Object","keys","ElevationInput","f","RotationInput","label","RotationInputButton","RotationBtn","span","MoveInput","DataInput","localData","setLocalData","onFocus","parse","e","Intro","onEnded","Video","autoPlay","src","introVideo","SkipButton","video","Menu","isCompleted","includes","useLocal","introPlayed","setIntroPlayed","gameStarted","setGameStarted","musicRef","useRef","droneRef","playMusic","current","currentTime","onEnd","addEventListener","removeEventListener","nextMap","currentIndex","findIndex","left","up","down","right","Title","LevelWrapper","LevelButton","Completed","alt","StartButtonWrapper","StartButton","SmallMenuWrapper","MapName","ControlsWrapper","h1","App","loading","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a55a8c42.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/lake.ad09a8cc.png\";","module.exports = __webpack_public_path__ + \"static/media/intro.cc1ac876.mp4\";","import { GameState } from '../state/gameReducer'\nimport { Action } from 'redux'\nimport { FC, ReactNode } from 'react'\n\nexport type XY = [number, number]\nexport type Vector2 = [number, number]\n\nexport enum ObjectTypes {\n    Player = 'Player',\n    WinTrigger = 'WinTrigger',\n\n    Grass = 'Grass',\n    Water = 'Water',\n    RockFloor = 'RockFloor',\n    Wall = 'Wall',\n    Box = 'Box',\n    BigRock = 'BigRock',\n    BigRock2 = 'BigRock2',\n\n    Pipe = 'Pipe',\n    PipeLeft = 'PipeLeft',\n    PipeRight = 'PipeRight',\n    PipePlace = 'PipePlace',\n    PipeUp = 'PipeUp',\n    PipeDown = 'PipeDown',\n    PipeElement = 'PipeElement',\n\n    Tree = 'Tree',\n    Tree2 = 'Tree2',\n    Metal = 'Metal',\n    Metal2 = 'Metal2',\n\n    Fence = 'Fence',\n\n    Button = 'Button',\n    Door = 'Door',\n    WallMetal = 'WallMetal',\n    Ice = 'Ice',\n\n    Crossbow = 'Crossbow',\n    Cannon = 'Cannon',\n    Boom = 'Boom',\n\n    CrossbowProjectile = 'CrossbowProjectile',\n    RocketProjectile = 'RocketProjectile',\n}\n\nexport interface ObjectInstance {\n    type: ObjectTypes\n    id: string\n    xy: XY\n    rotation: Vector2\n    elevation: number\n    zIndex: number\n    aIndex: number\n    data: Partial<ObjectInstanceData>\n}\n\nexport interface ObjectInstanceData {\n    hasCannon: boolean\n    hasGrapple: boolean\n    info: string\n    open: boolean\n    active: boolean\n    targetId: string\n}\n\nexport interface ActionEvent {\n    who: ObjectInstance\n    self: ObjectInstance\n    what?: ObjectInstance\n    vector: Vector2\n    state: GameState\n    force?: number\n}\n\nexport interface ObjectDefinition {\n    name: string\n    height: (instance: ObjectInstance) => number\n    push?(event: ActionEvent): Action[] // triggered when elevation is to big\n    enter?(event: ActionEvent): Action[]\n    leave?(event: ActionEvent): Action[]\n    equip?(event: ActionEvent): Action[]\n    projectileLaunch?(event: ActionEvent): Action[] // eg. for projectile\n    projectileHit?(event: ActionEvent): Action[] // eg. for projectile\n    Component3d(props: RenderComponentProps): any\n}\n\nexport interface RenderComponentProps {\n    instance: ObjectInstance\n}\n\nexport interface MapData {\n    id: string\n    name: string\n    objects: ObjectInstance[]\n    image?: string\n}\n","export const IS_DEV = process.env.NODE_ENV !== 'production'\n\nexport const CAMERA_OFFSET = [-2, 4, 6]\n\nexport const MAX_MOVE_ELEVATION = 0.5\n\nexport const PROJECTILE_ELEVATION = 0.8\n\nexport const GRAPPLE_RANGE = 5\nexport const GRAPPLE_ELEVATION = 0.5\nexport const GRAPPLE_MOVE_DELAY = 300\n\nexport const DEFAULT_ACTION_DELAY = 65\n\nexport const FALL_TRIGGER_DELAY = 400\nexport const FALL_REMOVE_DELAY = 800\nexport const FALL_ELEVATION = -5\n\nexport const GAME_NAME = 'rObbit'\n\nexport const BTN_LEVEL = 'Level'\n\nexport const BTN_EXIT = 'Exit'\nexport const BTN_RESTART = 'Restart'\n\nexport const BTN_EQUIP = 'Equip'\nexport const BTN_GRAPPLE = 'Grapple'\nexport const BTN_FIRE = 'Fire'\n\nexport const CONGRATULATIONS = 'Congratulations!'\nexport const LEVEL_COMPLETE = 'Level complete'\nexport const NEXT_LEVEL = 'Next level'\n\nexport const AUTHORS = [\n    { name: 'Kacper Kozak', tech: '(silnik gry)' },\n    { name: 'Bartosz Kozak', tech: '(renderer gry, level design, grafika 3D)' },\n    { name: 'Maciek Wierzejski | Redhatto', tech: '(grafika, 3D, filmy i artwork)' },\n    { name: 'Leszek Karczewski | DamnDog', tech: '(muzyka i dźwięk)' },\n]\n","import { Vector2 } from './types'\n\nexport const PLAYER_ID = 'player'\n\nexport const UP: Vector2 = [0, -1]\nexport const RIGHT: Vector2 = [1, 0]\nexport const DOWN: Vector2 = [0, 1]\nexport const LEFT: Vector2 = [-1, 0]\n","import { XY, Vector2 } from './types/types'\nimport { sample } from 'lodash'\nimport { UP, LEFT, RIGHT, DOWN } from './types/consts'\n\nexport const reverseVector = (vector: Vector2) => vector.map(v => v * -1) as Vector2\n\nexport const applyVector = ([x, y]: XY, [vx, vy]: Vector2): XY => [x + vx, y + vy]\n\nexport const samePosition = ([x1, y1]: XY, [x2, y2]: XY) => x1 === x2 && y1 === y2\n\nexport const findById = <T extends { id: string }>(props: T[], id: string) => {\n    return props.find(prop => prop.id === id)\n}\n\nexport const findByXY = <T extends { xy: XY }>(objects: T[], xy: XY) => {\n    return objects.filter(tile => samePosition(tile.xy, xy))\n}\n\nexport const asArray = <T>(item: T | T[]): T[] => (Array.isArray(item) ? item : [item])\nexport const arrMerge = <T>(a: T[], b: T | T[] = []): T[] => [...a, ...asArray(b)]\n\nexport const limit = (value: number, min: number, max: number) =>\n    Math.min(max, Math.max(min, value))\n\nexport const limitVector = (vector: Vector2, min: number, max: number) =>\n    vector.map(v => limit(v, min, max)) as Vector2\n\nexport const vectorDiff = (v1: Vector2, v2: Vector2) => v1.map((v, i) => v2[i] - v) as Vector2\n\nexport const createArray = (length: number): number[] =>\n    Array.from({ length: length + 1 }, (v, i) => i)\n\nexport const randomRotation = () => {\n    return sample([UP, LEFT, RIGHT, DOWN])!\n}\n\nexport const shuffleArray = <T>(array: T[]): T[] => {\n    const arr = array.slice()\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1))\n        ;[arr[i], arr[j]] = [arr[j], arr[i]]\n    }\n    return arr\n}\n","import React, { useMemo, useRef } from 'react'\nimport { animated, useSpring } from 'react-spring/three'\nimport { useFrame, useLoader } from 'react-three-fiber'\nimport { AnimationMixer, LoopOnce } from 'three'\nimport { GLTF, GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport { RenderComponentProps, Vector2 } from '../../types/types'\n\nconst useMyLoader = () => {\n    // const robot = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/robot_model.gltf`)\n    const rocket = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/rocket.gltf`)\n    const cannon = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/cannon.gltf`)\n    const box = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/box.gltf`)\n    const rock = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/rock1.gltf`)\n    const rock2 = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/rock2.gltf`)\n    const fence = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/fence.gltf`)\n    const arrow = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/arrow.gltf`)\n    const crossbow = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/crossbow.gltf`)\n    const graund = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/graund.gltf`)\n    const wall = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/wall.gltf`)\n    const grass = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/grass.gltf`)\n    const water = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/water.gltf`)\n    const ice = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/ice.gltf`)\n    const button = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/button.gltf`)\n    const door = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/door.gltf`)\n    const wallMetal = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/wall-metal.gltf`)\n    const pipe = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/pipe.gltf`)\n    const pipeLeft = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/pipe-left.gltf`)\n    const pipeRight = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/pipe-right.gltf`)\n    const pipePlace = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/pipe-place.gltf`)\n    const pipeElement = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/pipe-element.gltf`)\n    const pipeUp = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/pipe-down.gltf`)\n    const pipeDown = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/pipe-down.gltf`)\n    const tree = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/tree.gltf`)\n    const tree2 = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/tree2.gltf`)\n    const metal = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/metal1.gltf`)\n    const metal2 = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/metal2.gltf`)\n    return {\n        // robot: robot.scene,\n        rocket: rocket.scene,\n        cannon: cannon.scene,\n        box: box.scene,\n        rock: rock.scene,\n        rock2: rock2.scene,\n        fence: fence.scene,\n        arrow: arrow.scene,\n        crossbow: crossbow.scene,\n        graund: graund.scene,\n        wall: wall.scene,\n        grass: grass.scene,\n        water: water.scene,\n        ice: ice.scene,\n        button: button.scene,\n        door: door.scene,\n        wallMetal: wallMetal.scene,\n        pipe: pipe.scene,\n        pipeLeft: pipeLeft.scene,\n        pipeRight: pipeRight.scene,\n        pipePlace: pipePlace.scene,\n        pipeElement: pipeElement.scene,\n        pipeUp: pipeUp.scene,\n        pipeDown: pipeDown.scene,\n        tree: tree.scene,\n        tree2: tree2.scene,\n        metal: metal.scene,\n        metal2: metal2.scene,\n    }\n}\nconst useAnimationLoader = () => {\n    // const jump = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/animations/jump.gltf`)\n    const boring = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/animations/boring.gltf`)\n    const boom = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/boom.gltf`)\n\n    return {\n        // jump,\n        boring,\n        boom,\n    }\n}\n\nexport const Box = (props: RenderComponentProps) => {\n    const { box } = useMyLoader()\n    return <AssetPreload {...props} model={box} />\n}\nexport const Rock = (props: RenderComponentProps) => {\n    const { rock } = useMyLoader()\n    return <AssetPreload {...props} model={rock} />\n}\nexport const Rock2 = (props: RenderComponentProps) => {\n    const { rock2 } = useMyLoader()\n    return <AssetPreload {...props} model={rock2} />\n}\nexport const Fence = (props: RenderComponentProps) => {\n    const { fence } = useMyLoader()\n    return <AssetPreload {...props} model={fence} />\n}\nexport const Arrow = (props: RenderComponentProps) => {\n    const { arrow } = useMyLoader()\n    return <AssetPreload {...props} model={arrow} />\n}\nexport const Boom = (props: RenderComponentProps) => {\n    const { boom } = useAnimationLoader()\n    return <AnimateSelfAsset {...props} animateModel={boom} />\n}\nexport const Cannon = (props: RenderComponentProps) => {\n    const { cannon } = useMyLoader()\n    return <AssetPreload {...props} model={cannon} elevationFix={-0.8} />\n}\nexport const Rocket = (props: RenderComponentProps) => {\n    const { rocket } = useMyLoader()\n    return <AssetPreload {...props} model={rocket} />\n}\nexport const Crossbow = (props: RenderComponentProps) => {\n    const { crossbow } = useMyLoader()\n    return <AssetPreload {...props} model={crossbow} elevationFix={-0.8} />\n}\nexport const Ground = (props: RenderComponentProps) => {\n    const { graund } = useMyLoader()\n    return <AssetPreload {...props} model={graund} castShadow={true} receiveShadow={true} />\n}\nexport const Wall = (props: RenderComponentProps) => {\n    const { wall } = useMyLoader()\n    return <AssetPreload {...props} model={wall} castShadow={true} receiveShadow={true} />\n}\nexport const Grass = (props: RenderComponentProps) => {\n    const { grass } = useMyLoader()\n    return <AssetPreload {...props} model={grass} castShadow={false} receiveShadow={true} />\n}\nexport const Water = (props: RenderComponentProps) => {\n    const { water } = useMyLoader()\n    return <AssetPreload {...props} model={water} castShadow={false} receiveShadow={true} />\n}\nexport const Ice = (props: RenderComponentProps) => {\n    const { ice } = useMyLoader()\n    return <AssetPreload {...props} model={ice} castShadow={false} receiveShadow={true} />\n}\nexport const Button = (props: RenderComponentProps) => {\n    const { button } = useMyLoader()\n    return <AssetPreload {...props} model={button} castShadow={true} receiveShadow={true} />\n}\nexport const Door = (props: RenderComponentProps) => {\n    const { door } = useMyLoader()\n    return <AssetPreload {...props} model={door} castShadow={true} receiveShadow={true} />\n}\nexport const WallMetal = (props: RenderComponentProps) => {\n    const { wallMetal } = useMyLoader()\n    return <AssetPreload {...props} model={wallMetal} castShadow={true} receiveShadow={true} />\n}\nexport const Pipe = (props: RenderComponentProps) => {\n    const { pipe } = useMyLoader()\n    return <AssetPreload {...props} model={pipe} castShadow={true} receiveShadow={true} />\n}\nexport const PipeLeft = (props: RenderComponentProps) => {\n    const { pipeLeft } = useMyLoader()\n    return <AssetPreload {...props} model={pipeLeft} castShadow={true} receiveShadow={true} />\n}\nexport const PipeRight = (props: RenderComponentProps) => {\n    const { pipeRight } = useMyLoader()\n    return <AssetPreload {...props} model={pipeRight} castShadow={true} receiveShadow={true} />\n}\nexport const PipeDown = (props: RenderComponentProps) => {\n    const { pipeDown } = useMyLoader()\n    return <AssetPreload {...props} model={pipeDown} castShadow={true} receiveShadow={true} />\n}\nexport const PipeUp = (props: RenderComponentProps) => {\n    const { pipeUp } = useMyLoader()\n    return <AssetPreload {...props} model={pipeUp} castShadow={true} receiveShadow={true} />\n}\nexport const PipePlace = (props: RenderComponentProps) => {\n    const { pipePlace } = useMyLoader()\n    return <AssetPreload {...props} model={pipePlace} castShadow={true} receiveShadow={true} />\n}\nexport const PipeElement = (props: RenderComponentProps) => {\n    const { pipeElement } = useMyLoader()\n    return <AssetPreload {...props} model={pipeElement} castShadow={true} receiveShadow={true} />\n}\nexport const Tree = (props: RenderComponentProps) => {\n    const { tree } = useMyLoader()\n    return <AssetPreload {...props} model={tree} castShadow={true} receiveShadow={true} />\n}\nexport const Tree2 = (props: RenderComponentProps) => {\n    const { tree2 } = useMyLoader()\n    return <AssetPreload {...props} model={tree2} castShadow={true} receiveShadow={true} />\n}\nexport const Metal = (props: RenderComponentProps) => {\n    const { metal } = useMyLoader()\n    return <AssetPreload {...props} model={metal} castShadow={true} receiveShadow={true} />\n}\nexport const Metal2 = (props: RenderComponentProps) => {\n    const { metal2 } = useMyLoader()\n    return <AssetPreload {...props} model={metal2} castShadow={true} receiveShadow={true} />\n}\nexport const createTrigger = (color: string) => ({ instance }: RenderComponentProps) => {\n    const { xy, elevation, rotation } = instance\n\n    return (\n        <mesh position={[xy[0], elevation + 0.5, xy[1]]} rotation={[0, vectorToThree(rotation), 0]}>\n            <sphereGeometry attach=\"geometry\" args={[0.4, 6, 6]} />\n            <meshStandardMaterial attach=\"material\" color={color} />\n        </mesh>\n    )\n}\n\ninterface AssetsProps extends RenderComponentProps {\n    color?: string\n    castShadow?: boolean\n    receiveShadow?: boolean\n    elevationFix?: number\n}\n\ninterface PreloadAssetProps extends AssetsProps {\n    model: GLTF['scene']\n}\ninterface PreloadAssetAnimateProps extends AssetsProps {\n    animateModel: GLTF\n}\n\nconst AssetPreload = ({\n    model,\n    instance: { xy, elevation, rotation, data },\n    castShadow = true,\n    receiveShadow = true,\n    elevationFix = 0,\n}: PreloadAssetProps) => {\n    const clonedModel = useMemo(() => {\n        const m = model.clone()\n        m.scale.set(0.5, 0.5, 0.5)\n        if (castShadow) m.children.map(el => (el.castShadow = true))\n        if (receiveShadow) m.children.map(el => (el.receiveShadow = true))\n        if (m.children.length > 1) {\n            // data.open && m.children[1].position.setZ(1.5)\n            data.open && m.children[1].position.setY(3)\n            data.active && m.children[1].position.setX(-0.2)\n        }\n        return m\n    }, [model, castShadow, receiveShadow, data])\n\n    const anim = useSpring({\n        pos: [xy[0], elevation + elevationFix, xy[1]],\n        rot: [0, vectorToThree(rotation), 0],\n    })\n\n    return <animated.primitive object={clonedModel} position={anim.pos} rotation={anim.rot} />\n}\n\nexport const Player = ({\n    instance: { xy, elevation, rotation, data },\n    castShadow = true,\n    receiveShadow = true,\n}: AssetsProps) => {\n    const anim = useSpring({\n        pos: [xy[0], elevation, xy[1]],\n        rot: [0, vectorToThree(rotation), 0],\n    })\n\n    const models = useMyLoader()\n    const robotModel = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/robot_model.gltf`)\n\n    const { boring } = useAnimationLoader()\n\n    const { robot, cannon, crossbow, animMixer } = useMemo(() => {\n        const cannon = models.cannon.clone()\n        const crossbow = models.crossbow.clone()\n        const robot = robotModel.scene.clone()\n        const animMixer = new AnimationMixer(boring.scene)\n        robot.scale.set(0.5, 0.5, 0.5)\n        robot.children.map(el => (el.castShadow = true))\n        robot.children.map(el => (el.receiveShadow = true))\n\n        boring.animations.forEach(clip => {\n            animMixer.clipAction(clip, robot).play()\n        })\n\n        return {\n            cannon,\n            crossbow,\n            robot,\n            animMixer,\n        }\n    }, [models.cannon, models.crossbow, castShadow, receiveShadow])\n\n    useFrame(() => {\n        animMixer.update(0.02)\n    })\n\n    return (\n        <animated.group position={anim.pos} rotation={anim.rot}>\n            <primitive object={robot}>\n                <primitive object={cannon} visible={!!data.hasCannon} />\n                <primitive object={crossbow} visible={!!data.hasGrapple} />\n            </primitive>\n        </animated.group>\n    )\n}\n\nconst AnimateSelfAsset = ({\n    animateModel,\n    instance: { xy, elevation, rotation, data },\n    castShadow = true,\n    receiveShadow = true,\n}: PreloadAssetAnimateProps) => {\n    const anim = useSpring({\n        pos: [xy[0], elevation, xy[1]],\n        rot: [0, vectorToThree(rotation), 0],\n    })\n\n    const { gltfScene, mixer } = useMemo(() => {\n        const gltfScene = animateModel.scene.clone()\n        gltfScene.scale.set(0.6, 0.6, 0.6)\n\n        if (castShadow) gltfScene.children[0].castShadow = true\n        if (receiveShadow) gltfScene.children[0].receiveShadow = true\n\n        const mixer = new AnimationMixer(gltfScene)\n        animateModel.animations.forEach((clip, index) => {\n            const animation = mixer.clipAction(clip, gltfScene.children[index])\n            animation.setLoop(LoopOnce, 1)\n            animation.play()\n        })\n\n        return { gltfScene, mixer }\n    }, [castShadow, receiveShadow, animateModel])\n\n    useFrame(() => {\n        mixer.update(0.03)\n    })\n\n    return (\n        <animated.group position={anim.pos} rotation={anim.rot}>\n            <primitive object={gltfScene} />\n        </animated.group>\n    )\n}\n\nconst vectorToThree = (vector: Vector2) => {\n    if (vector[0] === 1 && vector[1] === 0) return Math.PI / 2\n    if (vector[0] === 0 && vector[1] === -1) return (Math.PI / 2) * 2\n    if (vector[0] === -1 && vector[1] === 0) return (Math.PI / 2) * 3\n    if (vector[0] === 0 && vector[1] === 1) return (Math.PI / 2) * 4\n    // return (Math.PI / 2) * 4\n    return 0\n}\n","import { limitVector } from '../helpers'\nimport { lose, move } from '../state/gameReducer'\nimport { PLAYER_ID } from '../types/consts'\nimport { ObjectDefinition, ObjectTypes } from '../types/types'\nimport { Grass, Ground, Ice, Wall, Water } from './models/Items'\n\nexport const tileTypeDefinitions: Partial<Record<ObjectTypes, ObjectDefinition>> = {\n    [ObjectTypes.Grass]: {\n        name: 'Grass',\n        height: () => 0,\n        Component3d: Grass,\n    },\n    [ObjectTypes.Water]: {\n        name: 'Water',\n        height: () => -1,\n        enter: ({ who, self }) => {\n            return who.id === PLAYER_ID ? [lose()] : []\n        },\n        Component3d: Water,\n    },\n\n    [ObjectTypes.Ice]: {\n        name: 'Ice',\n        height: () => 0,\n        enter: ({ who, vector }) => [\n            move({ targetId: who.id, vector: limitVector(vector, -1, 1) }),\n        ],\n        Component3d: Ice,\n    },\n    [ObjectTypes.RockFloor]: {\n        name: 'Rock floor',\n        height: () => 0,\n        Component3d: Ground,\n    },\n    [ObjectTypes.Wall]: {\n        name: 'Wall',\n        height: () => 0,\n        Component3d: Wall,\n    },\n}\n","const soundList = {\n    button: `${process.env.PUBLIC_URL}/sounds/Button_gameplay.mp3`,\n    // music: `${process.env.PUBLIC_URL}/sounds/elementary1.mp3`,\n    Alert_NO: `${process.env.PUBLIC_URL}/sounds/Alert_NO.mp3`,\n    Alert_YES: `${process.env.PUBLIC_URL}/sounds/Alert_YES.mp3`,\n    Bazooka: `${process.env.PUBLIC_URL}/sounds/Bazooka.mp3`,\n    Crossbow: `${process.env.PUBLIC_URL}/sounds/Crossbow.mp3`,\n    Engine_start: `${process.env.PUBLIC_URL}/sounds/Engine_start.mp3`,\n    Engine_LOOP_128: `${process.env.PUBLIC_URL}/sounds/Engine_LOOP_128.mp3`,\n    Engine_NO_1: `${process.env.PUBLIC_URL}/sounds/Engine_NO_1.mp3`,\n    Engine_NO_2: `${process.env.PUBLIC_URL}/sounds/Engine_NO_2.mp3`,\n    Engine_stop: `${process.env.PUBLIC_URL}/sounds/Engine_stop.mp3`,\n    Equip_1: `${process.env.PUBLIC_URL}/sounds/Equip_1.mp3`,\n    Equip_2: `${process.env.PUBLIC_URL}/sounds/Equip_2.mp3`,\n    Equip_3: `${process.env.PUBLIC_URL}/sounds/Equip_3.mp3`,\n    Equip_4: `${process.env.PUBLIC_URL}/sounds/Equip_4.mp3`,\n    Hero_1: `${process.env.PUBLIC_URL}/sounds/Hero_1.mp3`,\n    Hero_2: `${process.env.PUBLIC_URL}/sounds/Hero_2.mp3`,\n    Jump: `${process.env.PUBLIC_URL}/sounds/Jump.mp3`,\n    Explosion_1: `${process.env.PUBLIC_URL}/sounds/Explosion_1.mp3`,\n    Explosion_2: `${process.env.PUBLIC_URL}/sounds/Explosion_2.mp3`,\n\n    Music: `${process.env.PUBLIC_URL}/music/Music.mp3`,\n    Drone: `${process.env.PUBLIC_URL}/music/Drone.mp3`,\n}\n\nexport type SoundName = keyof typeof soundList\n\nconst masterVolume = 0.5\n\nexport const getAudio = (name: SoundName, volume?: number) => {\n    const audio = new Audio(soundList[name])\n    audio.volume = masterVolume\n    if (volume) audio.volume = volume * masterVolume\n    return audio\n}\n\nexport const play = (name: SoundName, volume?: number) => {\n    getAudio(name).play()\n}\n\nexport const playEquip = (volume?: number) => {\n    const list = ['Equip_1', 'Equip_2', 'Equip_3', 'Equip_4']\n    play(list[Math.round(Math.random() * 4)] as SoundName, volume)\n}\n\nlet explosionIndex = 0\nexport const playExplosion = (volume?: number) => {\n    const list = ['Explosion_1', 'Explosion_2']\n    play(list[explosionIndex] as SoundName, volume)\n    explosionIndex += 1\n    if (explosionIndex > list.length - 1) explosionIndex = 0\n}\n\nconst engineStart = new Audio(soundList['Engine_LOOP_128'])\n\nexport const playEngine = (volume?: number) => {\n    if (volume) engineStart.volume = volume\n    // const playEnd = () => {\n    //     play('Engine_stop', volume)\n    //     engineStart.removeEventListener('ended', playEnd)\n    // }\n    engineStart.play()\n    setTimeout(() => engineStart.pause(), 300)\n    // engineStart.removeEventListener('ended', playEnd)\n    // engineStart.addEventListener('ended', playEnd)\n}\n","import { uniqueId } from 'lodash'\nimport { play, playEquip, playExplosion } from '../audio/play'\nimport { reverseVector } from '../helpers'\nimport { move, removeObject, setObjectData, tmpSpawn, win } from '../state/gameReducer'\nimport { PLAYER_ID } from '../types/consts'\nimport { ObjectDefinition, ObjectTypes } from '../types/types'\nimport {\n    Arrow,\n    Boom,\n    Box,\n    Button,\n    Cannon,\n    createTrigger,\n    Crossbow,\n    Door,\n    Fence,\n    Pipe,\n    PipeDown,\n    PipeElement,\n    PipeLeft,\n    PipePlace,\n    PipeRight,\n    PipeUp,\n    Player,\n    Rock,\n    Rocket,\n    WallMetal,\n    Tree,\n    Tree2,\n    Metal,\n    Metal2,\n    Rock2,\n} from './models/Items'\n\nexport const propTypeDefinitions: Partial<Record<ObjectTypes, ObjectDefinition>> = {\n    [ObjectTypes.Player]: {\n        name: 'Player',\n        height: () => 2,\n        Component3d: Player,\n    },\n\n    [ObjectTypes.BigRock]: {\n        name: 'Big rock',\n        height: () => 0.55,\n        Component3d: Rock,\n    },\n    [ObjectTypes.BigRock2]: {\n        name: 'Big rock2',\n        height: () => 0.55,\n        Component3d: Rock2,\n    },\n    [ObjectTypes.Pipe]: {\n        name: 'Pipe',\n        height: () => 0.75,\n        Component3d: Pipe,\n    },\n\n    [ObjectTypes.PipeLeft]: {\n        name: 'PipeLeft',\n        height: () => 0.75,\n        Component3d: PipeLeft,\n    },\n    [ObjectTypes.PipeRight]: {\n        name: 'PipeRight',\n        height: () => 0.75,\n        Component3d: PipeRight,\n    },\n    [ObjectTypes.PipeUp]: {\n        name: 'PipeUp',\n        height: () => 0.75,\n        Component3d: PipeUp,\n    },\n    [ObjectTypes.PipeDown]: {\n        name: 'PipeDown',\n        height: () => 0.75,\n        Component3d: PipeDown,\n    },\n    [ObjectTypes.PipeElement]: {\n        name: 'PipeElement',\n        height: () => 0.9,\n        push: ({ self, vector }) => [move({ targetId: self.id, vector })],\n        Component3d: PipeElement,\n    },\n    [ObjectTypes.PipePlace]: {\n        name: 'PipePlace',\n        height: () => 0.14,\n        enter: ({ who }) => {\n            if (who.type === ObjectTypes.PipeElement) {\n                play('Engine_start')\n                return [win()]\n            }\n            return []\n        },\n        Component3d: PipePlace,\n    },\n    [ObjectTypes.Tree]: {\n        name: 'Tree',\n        height: () => 2,\n        Component3d: Tree,\n    },\n    [ObjectTypes.Tree2]: {\n        name: 'Tree2',\n        height: () => 2,\n        Component3d: Tree2,\n    },\n    [ObjectTypes.Metal]: {\n        name: 'Metal',\n        height: () => 2,\n        Component3d: Metal,\n    },\n    [ObjectTypes.Metal2]: {\n        name: 'Metal2',\n        height: () => 2,\n        Component3d: Metal2,\n    },\n\n    [ObjectTypes.Box]: {\n        name: 'Box',\n        height: () => 1,\n        push: ({ self, vector }) => [move({ targetId: self.id, vector })],\n        Component3d: Box,\n    },\n\n    [ObjectTypes.Fence]: {\n        name: 'Fence',\n        height: () => 1.2,\n        push: ({ force, self }) => {\n            if (force && force >= 50) return [removeObject(self.id)]\n            return []\n        },\n        Component3d: Fence,\n    },\n\n    [ObjectTypes.Button]: {\n        name: 'Button',\n        height: () => 2,\n        push: ({ state, self }) => {\n            play('button')\n            if (!self.data.targetId) {\n                console.warn('Missing Button data.targetId')\n                return []\n            }\n            const toggle = !self.data.active\n            return [\n                setObjectData({ targetId: self.id, data: { active: toggle } }),\n                setObjectData({ targetId: self.data.targetId, data: { open: toggle } }),\n            ]\n        },\n        Component3d: Button,\n    },\n\n    [ObjectTypes.WinTrigger]: {\n        name: 'WinTrigger',\n        height: () => 0,\n        enter: ({ who, state, self }) => {\n            if (who.id === PLAYER_ID) {\n                play('Engine_start')\n                return [win()]\n            }\n            return []\n        },\n        Component3d: createTrigger('#22FF22'),\n    },\n\n    [ObjectTypes.Door]: {\n        name: 'Door',\n        height: instance => (instance.data.open ? 0 : 1.2),\n        Component3d: Door,\n    },\n    [ObjectTypes.WallMetal]: {\n        name: 'WallMetal',\n        height: () => 1.2,\n        Component3d: WallMetal,\n    },\n\n    [ObjectTypes.Cannon]: {\n        name: 'Cannon',\n        height: () => 0,\n        equip: ({ who, self }) => {\n            playEquip(0.8)\n            return [\n                setObjectData({ targetId: who.id, data: { hasCannon: true } }),\n                removeObject(self.id),\n            ]\n        },\n        Component3d: Cannon,\n    },\n\n    [ObjectTypes.Boom]: {\n        name: 'Boom',\n        height: () => 0,\n        Component3d: Boom,\n    },\n\n    [ObjectTypes.Crossbow]: {\n        name: 'Crossbow',\n        height: () => 0,\n        equip: ({ who, self }) => {\n            playEquip(0.8)\n            return [\n                setObjectData({ targetId: who.id, data: { hasGrapple: true } }),\n                removeObject(self.id),\n            ]\n        },\n        Component3d: Crossbow,\n    },\n\n    [ObjectTypes.RocketProjectile]: {\n        name: 'RocketProjectile',\n        height: () => 0,\n        projectileLaunch: ({ who }) => {\n            play('Bazooka')\n            return [\n                move(\n                    { targetId: who.id, vector: reverseVector(who.rotation) },\n                    { delay: 250 }, // delay remove from projectileHit\n                ),\n            ]\n        },\n        projectileHit: ({ self, what, who }) => {\n            if (!what) {\n                return [removeObject(self.id)]\n            }\n\n            playExplosion(1)\n            return [\n                removeObject(self.id),\n                tmpSpawn({\n                    instance: {\n                        type: ObjectTypes.Boom,\n                        id: uniqueId(),\n                        xy: self.xy,\n                        elevation: self.elevation,\n                        rotation: self.rotation,\n                        aIndex: 0,\n                        zIndex: 20,\n                        data: {},\n                    },\n                }),\n            ]\n        },\n        Component3d: Rocket,\n    },\n\n    [ObjectTypes.CrossbowProjectile]: {\n        name: 'Projectile',\n        height: () => 0,\n        projectileLaunch: ({ who }) => {\n            play('Crossbow')\n            return [\n                move(\n                    { targetId: who.id, vector: [0, 0] },\n                    { delay: 250 }, // delay remove from projectileHit\n                ),\n            ]\n        },\n        projectileHit: ({ self, what, who }) => {\n            if (what) {\n                play('Alert_YES') // TODO Hit!\n            }\n            return [removeObject(self.id)]\n        },\n        Component3d: Arrow,\n    },\n}\n","import { ObjectDefinition, ObjectTypes } from '../types/types'\nimport { tileTypeDefinitions } from './tileTypeDefinitions'\nimport { propTypeDefinitions } from './propTypeDefinitions'\n\nexport const objectDefinitions: Partial<Record<ObjectTypes, ObjectDefinition>> = {\n    ...tileTypeDefinitions,\n    ...propTypeDefinitions,\n}\n\nexport const getDefinition = (type: ObjectTypes): ObjectDefinition => {\n    const def = objectDefinitions[type]\n\n    if (!def) throw new Error(`[getDefinition] Definition for ${type} not found`)\n\n    return def\n}\n","import { Action } from 'redux'\nimport { applyVector, asArray, findById, findByXY } from '../../helpers'\nimport { getDefinition } from '../../objects/definitions'\nimport { ActionEvent, ObjectInstance } from '../../types/types'\nimport { GameState, flyEnd } from '../gameReducer'\nimport { ResolverResults } from './types'\n\nexport const flyResolver = (state: GameState, targetId: string): ResolverResults => {\n    let objects = state.objects\n    const actions: Action[] = []\n    const addActions = (a: Action | Action[] = []) => actions.push(...asArray(a))\n    const abortResults = { objects, actions }\n\n    const target = findById(objects, targetId)\n\n    if (!target) {\n        console.warn(`[move] Target ${targetId} not found`)\n        return abortResults\n    }\n\n    const vector = target.rotation\n    let xy = target.xy\n\n    let limit = 15\n\n    while (limit) {\n        limit--\n\n        xy = applyVector(xy, vector)\n        const newXYObjects = findByXY(objects, xy).sort((a, b) => b.aIndex - a.aIndex)\n\n        for (const obj of newXYObjects) {\n            const objDef = getDefinition(obj.type)\n            const event: ActionEvent = { who: target, vector, state, self: obj, force: 100 }\n\n            if (isTooHight(obj, target)) {\n                objects = objects.map(obj => {\n                    if (obj !== target) return obj\n                    return { ...obj, xy }\n                })\n\n                addActions(flyEnd({ targetId, hitTargetId: obj.id }))\n                addActions(objDef.push?.(event))\n                return { objects, actions }\n            }\n        }\n    }\n\n    addActions(flyEnd({ targetId }))\n\n    objects = objects.map(obj => {\n        if (obj !== target) return obj\n        return { ...obj, xy }\n    })\n\n    return { objects, actions }\n}\n\nconst isTooHight = (ontoObj: ObjectInstance, flyer: ObjectInstance) => {\n    const objDef = getDefinition(ontoObj.type)\n    return ontoObj.elevation + objDef.height(ontoObj) > flyer.elevation\n}\n","import { uniqueId } from 'lodash'\nimport { Action } from 'redux'\nimport {\n    GRAPPLE_ELEVATION,\n    PROJECTILE_ELEVATION,\n    GRAPPLE_MOVE_DELAY,\n    GRAPPLE_RANGE,\n} from '../../config'\nimport { applyVector, asArray, findById, findByXY, vectorDiff } from '../../helpers'\nimport { getDefinition } from '../../objects/definitions'\nimport { ObjectInstance, ObjectTypes, Vector2 } from '../../types/types'\nimport { GameState, move, tmpSpawn, updateObject } from '../gameReducer'\nimport { ResolverResults } from './types'\n\nexport const grappleResolver = (state: GameState, targetId: string): ResolverResults => {\n    let objects = state.objects\n    const actions: Action[] = []\n    const addActions = (a: Action | Action[] = []) => actions.push(...asArray(a))\n    const abortResults = { objects, actions }\n\n    const target = findById(objects, targetId)\n\n    if (!target) {\n        console.warn(`[grappleResolver] Target ${targetId} not found`)\n        return abortResults\n    }\n\n    const projectileInstance: ObjectInstance = {\n        type: ObjectTypes.CrossbowProjectile,\n        id: uniqueId(),\n        xy: target.xy,\n        rotation: target.rotation,\n        elevation: target.elevation + PROJECTILE_ELEVATION,\n        aIndex: 100,\n        zIndex: 10,\n        data: {},\n    }\n\n    const addGrappleAnimation = () => {\n        addActions(tmpSpawn({ instance: projectileInstance }))\n        addActions(\n            updateObject(\n                { targetId: projectileInstance.id, objectValues: { xy } },\n                { delay: GRAPPLE_MOVE_DELAY },\n            ),\n        )\n    }\n\n    const vector = target.rotation\n    let xy = target.xy\n\n    let limit = GRAPPLE_RANGE\n\n    while (limit) {\n        limit--\n\n        const prevXY = xy\n        xy = applyVector(xy, vector)\n        const newXYObjects = findByXY(objects, xy).sort((a, b) => b.aIndex - a.aIndex)\n\n        for (const obj of newXYObjects) {\n            if (isTooHight(obj, target)) {\n                addGrappleAnimation()\n                addActions(\n                    move({\n                        targetId,\n                        vector: vectorDiff(target.xy, prevXY),\n                    }),\n                )\n\n                return { objects, actions }\n            }\n        }\n    }\n\n    // miss\n    xy = applyVector(xy, vector)\n    addGrappleAnimation()\n\n    return { objects, actions }\n}\n\nconst isTooHight = (ontoObj: ObjectInstance, flyer: ObjectInstance) => {\n    const objDef = getDefinition(ontoObj.type)\n    return ontoObj.elevation + objDef.height(ontoObj) > flyer.elevation + GRAPPLE_ELEVATION\n}\n","import { Action } from 'redux'\nimport { FALL_REMOVE_DELAY, FALL_TRIGGER_DELAY, MAX_MOVE_ELEVATION } from '../../config'\nimport { applyVector, asArray, findById, findByXY } from '../../helpers'\nimport { getDefinition } from '../../objects/definitions'\nimport { PLAYER_ID } from '../../types/consts'\nimport { ActionEvent, ObjectInstance, Vector2 } from '../../types/types'\nimport { fall, GameState, lose, removeObject, updateObject } from '../gameReducer'\nimport { ResolverResults } from './types'\n\nexport const moveResolver = (\n    state: GameState,\n    targetId: string,\n    vector: Vector2,\n): ResolverResults => {\n    const { objects } = state\n    const actions: Action[] = []\n    const addActions = (a: Action | Action[] = []) => actions.push(...asArray(a))\n\n    const target = findById(objects, targetId)\n\n    if (!target) {\n        console.warn(`[move] Target ${targetId} not found`)\n        return { objects, actions }\n    }\n\n    const newXY = applyVector(target.xy, vector)\n    const newXYObjects = findByXY(objects, newXY).sort((a, b) => b.aIndex - a.aIndex)\n\n    // Nothing there, fall and die\n    if (!newXYObjects.length) {\n        addActions([\n            updateObject({ targetId, objectValues: { xy: newXY } }, { delay: FALL_TRIGGER_DELAY }),\n            fall({ targetId }, { delay: FALL_REMOVE_DELAY }),\n            targetId === PLAYER_ID ? lose() : removeObject(targetId),\n        ])\n        return { objects, actions }\n    }\n\n    // Can enter to this region?\n    for (const obj of newXYObjects) {\n        const objDef = getDefinition(obj.type)\n        const event: ActionEvent = { who: target, vector, state, self: obj }\n\n        if (isTooHight(obj, target)) {\n            addActions(objDef.push?.(event))\n            return { objects, actions }\n        }\n    }\n\n    const newElevation = maxElevation(newXYObjects)\n\n    // Post enter events\n    for (const obj of newXYObjects) {\n        const objDef = getDefinition(obj.type)\n\n        // skip when we are higher than this object eg. box in water\n        if (newElevation > obj.elevation + objDef.height(obj)) {\n            continue\n        }\n\n        const event: ActionEvent = { who: target, vector, state, self: obj }\n        addActions(objDef.enter?.(event))\n    }\n\n    // Move target to new location\n    const newObjects = objects.map(obj => {\n        if (obj !== target) return obj\n        return { ...obj, xy: newXY, elevation: newElevation }\n    })\n\n    return { objects: newObjects, actions }\n}\n\nconst maxElevation = (objects: ObjectInstance[]): number =>\n    Math.max(\n        ...objects.map(obj => {\n            const objDef = getDefinition(obj.type)\n            return objDef.height(obj) + obj.elevation\n        }),\n    )\n\nconst isTooHight = (ontoObj: ObjectInstance, who: ObjectInstance) => {\n    const objDef = getDefinition(ontoObj.type)\n    return ontoObj.elevation + objDef.height(ontoObj) - who.elevation > MAX_MOVE_ELEVATION\n}\n","import { Action } from 'redux'\nimport actionCreatorFactory from 'typescript-fsa'\nimport { reducerWithInitialState } from 'typescript-fsa-reducers'\nimport { FALL_ELEVATION } from '../config'\nimport { arrMerge, findById } from '../helpers'\nimport { getDefinition } from '../objects/definitions'\nimport { ActionEvent, MapData, ObjectInstance, ObjectInstanceData, Vector2 } from '../types/types'\nimport { equipResolver } from './resolvers/equipResolver'\nimport { flyResolver } from './resolvers/flyResolver'\nimport { grappleResolver } from './resolvers/grappleResolver'\nimport { moveResolver } from './resolvers/moveResolver'\nimport { rotateResolver } from './resolvers/rotateResolver'\n\nexport interface GameState {\n    queueStared: boolean\n    queue: Action[]\n    mapId: string | null\n    mapName: string | null\n    objects: ObjectInstance[]\n    cleanObjectsState: ObjectInstance[]\n    winDialog: boolean\n}\n\nexport interface GameStateAware {\n    game: GameState\n}\n\n// const mockObjects = createMap()\n\nexport const initialState: GameState = {\n    queueStared: false,\n    queue: [],\n    mapId: null,\n    mapName: null,\n    objects: [],\n    cleanObjectsState: [],\n    winDialog: false,\n}\n\nconst gameAction = actionCreatorFactory('GG')\nconst queueAction = actionCreatorFactory('QUEUE')\n\nexport const loadMap = gameAction<MapData>('LOAD_MAP')\nexport const unloadMap = gameAction('UNLOAD_MAP')\nexport const reset = gameAction('RESET')\nexport const win = gameAction('WIN')\nexport const showWinDialog = gameAction('SHOW_WIN_DIALOG')\nexport const lose = gameAction('LOSE')\n\nexport const enqueue = queueAction<Action | Action[]>('ENQUEUE')\nexport const tryNextAction = queueAction('TRY_NEXT_ACTION')\nexport const nextAction = queueAction<Action>('NEXT_ACTION')\nexport const queueEnd = queueAction('QUEUE_END')\n\nexport const move = gameAction<{ targetId: string; vector: Vector2 }>('MOVE')\nexport const rotate = gameAction<{ targetId: string; rotation: Vector2 }>('ROTATE')\nexport const equip = gameAction<{ targetId: string }>('EQUIP')\nexport const fall = gameAction<{ targetId: string }>('FALL')\n\nexport const projectile = gameAction<{ instance: ObjectInstance; byId: string }>('PROJECTILE')\nexport const fly = gameAction<{ targetId: string }>('FLY')\nexport const flyEnd = gameAction<{ targetId: string; hitTargetId?: string }>('FLY_END')\nexport const grapple = gameAction<{ targetId: string }>('GRAPPLE')\n\nexport const updateObject = gameAction<{\n    targetId: string\n    objectValues: Partial<ObjectInstance>\n}>('UPDATE_OBJECT')\nexport const setObjectData = gameAction<{\n    targetId: string\n    data: Partial<ObjectInstanceData>\n}>('SET_OBJECT_DATA')\nexport const removeObject = gameAction<string>('REMOVE')\nexport const addObject = gameAction<ObjectInstance>('ADD')\nexport const replaceObjects = gameAction<ObjectInstance[]>('REPLACE_OBJECTS')\nexport const updateCleanObjectsState = gameAction('UPDATE_CLEAN_OBJECTS_STATE')\nexport const tmpSpawn = gameAction<{ instance: ObjectInstance }>('TMP_SPAWN')\n\nexport const gameReducer = reducerWithInitialState(initialState)\n    /*\n     * Loading\n     */\n    .case(\n        loadMap,\n        (state, { id, name, objects }): GameState => ({\n            ...initialState,\n            mapId: id,\n            mapName: name,\n            objects,\n            cleanObjectsState: objects,\n        }),\n    )\n    .case(unloadMap, (): GameState => initialState)\n    .case(\n        reset,\n        (state): GameState => ({\n            ...state,\n            queue: [],\n            queueStared: false,\n            objects: state.cleanObjectsState,\n            cleanObjectsState: state.cleanObjectsState,\n            winDialog: false,\n        }),\n    )\n    .case(\n        showWinDialog,\n        (state): GameState => ({\n            ...state,\n            winDialog: true,\n        }),\n    )\n\n    /*\n     * Queue\n     */\n    .case(\n        enqueue,\n        (state, action): GameState => ({\n            ...state,\n            queue: arrMerge(state.queue, action),\n        }),\n    )\n    .case(\n        nextAction,\n        (state, action): GameState => ({\n            ...state,\n            queueStared: true,\n            queue: state.queue.filter(a => a !== action),\n        }),\n    )\n    .case(queueEnd, (state): GameState => ({ ...state, queueStared: false }))\n\n    /*\n     * User actions\n     */\n    .case(\n        move,\n        (state, { targetId, vector }): GameState => {\n            const { actions, objects } = moveResolver(state, targetId, vector)\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n    .case(\n        rotate,\n        (state, { targetId, rotation }): GameState => {\n            const { actions, objects } = rotateResolver(state, targetId, rotation)\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n    .case(\n        equip,\n        (state, { targetId }): GameState => {\n            const { actions, objects } = equipResolver(state, targetId)\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n\n    /*\n     * Projectiles\n     */\n    .case(\n        projectile,\n        (state, { instance, byId }): GameState => {\n            const objDef = getDefinition(instance.type)\n            const objects = [...state.objects, instance]\n\n            const who = findById(state.objects, byId)!\n            const event: ActionEvent = { who, vector: instance.rotation, state, self: instance }\n\n            const launchActions = objDef.projectileLaunch?.(event) || []\n            const actions = [fly({ targetId: instance.id }), ...launchActions]\n\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n    .case(\n        fly,\n        (state, { targetId }): GameState => {\n            const { actions, objects } = flyResolver(state, targetId)\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n    .case(\n        flyEnd,\n        (state, { targetId, hitTargetId }): GameState => {\n            const obj = findById(state.objects, targetId)\n            const what = hitTargetId ? findById(state.objects, hitTargetId) : undefined\n\n            const actions: Action[] = []\n            if (obj) {\n                const objDef = getDefinition(obj.type)\n                const event: ActionEvent = {\n                    who: null as any, // TODO,\n                    what,\n                    vector: obj.rotation,\n                    state,\n                    self: obj,\n                }\n                const hitActions = objDef.projectileHit?.(event) || []\n                actions.push(...hitActions)\n            }\n            return { ...state, queue: arrMerge(state.queue, actions) }\n        },\n    )\n\n    /*\n     * Grapple\n     */\n    .case(\n        grapple,\n        (state, { targetId }): GameState => {\n            const { actions, objects } = grappleResolver(state, targetId)\n            return {\n                ...state,\n                objects,\n                queue: arrMerge(state.queue, actions),\n            }\n        },\n    )\n\n    /*\n     * Edit and internal actions\n     */\n    .case(\n        setObjectData,\n        (state, { targetId, data }): GameState => {\n            const target = findById(state.objects, targetId)\n\n            return {\n                ...state,\n                objects: state.objects.map(obj => {\n                    if (obj !== target) return obj\n                    return { ...obj, data: { ...obj.data, ...data } }\n                }),\n            }\n        },\n    )\n    .case(\n        updateObject,\n        (state, { targetId, objectValues }): GameState => {\n            return {\n                ...state,\n                objects: state.objects.map(obj =>\n                    obj.id === targetId ? { ...obj, ...objectValues } : obj,\n                ),\n            }\n        },\n    )\n    .case(\n        replaceObjects,\n        (state, objects): GameState => {\n            return { ...state, objects }\n        },\n    )\n    .case(\n        removeObject,\n        (state, targetId): GameState => ({\n            ...state,\n            objects: state.objects.filter(obj => obj.id !== targetId),\n        }),\n    )\n    .case(\n        addObject,\n        (state, instance): GameState => ({\n            ...state,\n            objects: arrMerge(state.objects, instance),\n        }),\n    )\n    .case(\n        updateCleanObjectsState,\n        (state): GameState => ({\n            ...state,\n            cleanObjectsState: state.objects,\n        }),\n    )\n    .case(\n        tmpSpawn,\n        (state, { instance }): GameState => ({\n            ...state,\n            objects: [...state.objects, instance],\n        }),\n    )\n    .case(\n        fall,\n        (state, { targetId }): GameState => {\n            return {\n                ...state,\n                objects: state.objects.map(obj =>\n                    obj.id === targetId ? { ...obj, elevation: FALL_ELEVATION } : obj,\n                ),\n            }\n        },\n    )\n","import { findById } from '../../helpers'\nimport { Vector2 } from '../../types/types'\nimport { ResolverResults } from './types'\nimport { GameState } from '../gameReducer'\n\nexport const rotateResolver = (\n    { objects }: GameState,\n    targetId: string,\n    rotation: Vector2,\n): ResolverResults => {\n    const target = findById(objects, targetId)\n\n    return {\n        objects: objects.map(obj => {\n            if (obj !== target) return obj\n            return { ...obj, rotation }\n        }),\n        actions: [],\n    }\n}\n","import { Action } from 'redux'\nimport { findById, findByXY } from '../../helpers'\nimport { getDefinition } from '../../objects/definitions'\nimport { ActionEvent } from '../../types/types'\nimport { ResolverResults } from './types'\nimport { GameState } from '../gameReducer'\n\nexport const equipResolver = (state: GameState, targetId: string): ResolverResults => {\n    const actions: Action[] = []\n    const target = findById(state.objects, targetId)\n    if (!target) return { objects: state.objects, actions: [] }\n\n    const myObjects = findByXY(state.objects, target.xy).sort((a, b) => b.aIndex - a.aIndex)\n\n    for (const obj of myObjects) {\n        const objDef = getDefinition(obj.type)\n        const event: ActionEvent = { who: target, vector: [0, 0], state, self: obj }\n        actions.push(...(objDef.equip?.(event) || []))\n    }\n\n    return {\n        actions,\n        objects: state.objects,\n    }\n}\n","import { uniq } from 'lodash'\nimport actionCreatorFactory from 'typescript-fsa'\nimport { reducerWithInitialState } from 'typescript-fsa-reducers'\n\nexport interface LocalState {\n    completedMaps: string[]\n}\n\nexport interface LocalStateAware {\n    local: LocalState\n}\n\nexport const initialState: LocalState = {\n    completedMaps: [],\n}\n\nconst action = actionCreatorFactory('LOCAL')\nexport const addCompletedMap = action<string>('COMPLETE_MAP')\n\nexport const localReducer = reducerWithInitialState(initialState).case(\n    addCompletedMap,\n    (state, mapId): LocalState => ({\n        ...state,\n        completedMaps: uniq([...state.completedMaps, mapId]),\n    }),\n)\n","import { first } from 'lodash'\nimport { Action } from 'redux'\nimport { combineEpics, StateObservable } from 'redux-observable'\nimport { concat, Observable, of } from 'rxjs'\nimport { delay, filter, flatMap, map, mapTo } from 'rxjs/operators'\nimport { DEFAULT_ACTION_DELAY } from '../config'\nimport {\n    enqueue,\n    GameStateAware,\n    nextAction,\n    queueEnd,\n    removeObject,\n    tmpSpawn,\n    tryNextAction,\n    win,\n    reset,\n    lose,\n    showWinDialog,\n} from './gameReducer'\nimport { addCompletedMap } from './localReducer'\n\nconst enqueueEpic = (\n    actions$: Observable<Action>,\n    state$: StateObservable<GameStateAware>,\n): Observable<Action> =>\n    actions$.pipe(\n        filter(enqueue.match),\n        filter(() => !state$.value.game.queueStared),\n        mapTo(tryNextAction()),\n    )\n\nconst tryNextEpic = (\n    actions$: Observable<Action>,\n    state$: StateObservable<GameStateAware>,\n): Observable<Action> =>\n    actions$.pipe(\n        filter(tryNextAction.match),\n        map(() => first(state$.value.game.queue)),\n        map(action => (action ? nextAction(action) : queueEnd())),\n    )\n\nconst nextActionEpic = (\n    actions$: Observable<Action>,\n    state$: StateObservable<GameStateAware>,\n): Observable<Action> =>\n    actions$.pipe(\n        filter(nextAction.match),\n        flatMap(action => {\n            const newActionDelay = (action.payload as any).meta?.delay || DEFAULT_ACTION_DELAY\n            return concat(of(action.payload), of(tryNextAction()).pipe(delay(newActionDelay)))\n        }),\n    )\n\nconst tmpSpawnEpic = (\n    actions$: Observable<Action>,\n    state$: StateObservable<GameStateAware>,\n): Observable<Action> =>\n    actions$.pipe(\n        filter(tmpSpawn.match),\n        delay(600),\n        map(action => removeObject(action.payload.instance.id)),\n    )\n\nconst winEpic = (\n    actions$: Observable<Action>,\n    state$: StateObservable<GameStateAware>,\n): Observable<Action> =>\n    actions$.pipe(\n        filter(win.match),\n        delay(600),\n        flatMap(() => concat(of(showWinDialog()), of(addCompletedMap(state$.value.game.mapId!)))),\n    )\n\nconst loseEpic = (\n    actions$: Observable<Action>,\n    state$: StateObservable<GameStateAware>,\n): Observable<Action> =>\n    actions$.pipe(\n        filter(lose.match),\n        delay(600),\n        map(() => reset()),\n    )\n\nexport const gameEpics = combineEpics(\n    enqueueEpic,\n    tryNextEpic,\n    nextActionEpic,\n    tmpSpawnEpic,\n    winEpic,\n    loseEpic,\n)\n","import { Action } from 'redux'\nimport { combineEpics } from 'redux-observable'\nimport { Observable } from 'rxjs'\nimport { filter, ignoreElements, tap } from 'rxjs/operators'\nimport { play, playEngine } from '../audio/play'\nimport { equip, move, lose, grapple } from './gameReducer'\nimport { PLAYER_ID } from '../types/consts'\n\nconst moveSoundEpic = (actions$: Observable<Action>): Observable<Action> =>\n    actions$.pipe(\n        filter(move.match),\n        filter(action => action.payload.targetId === PLAYER_ID),\n        tap(() => playEngine(0.05)),\n        ignoreElements(),\n    )\n\nconst equipSoundEpic = (actions$: Observable<Action>): Observable<Action> =>\n    actions$.pipe(\n        filter(equip.match),\n        tap(target => play('Hero_2', 0.7)),\n        ignoreElements(),\n    )\n\nconst loseSoundEpic = (actions$: Observable<Action>): Observable<Action> =>\n    actions$.pipe(\n        filter(lose.match),\n        tap(target => play('Engine_NO_2', 0.7)),\n        ignoreElements(),\n    )\n\nconst grappleSoundEpic = (actions$: Observable<Action>): Observable<Action> =>\n    actions$.pipe(\n        filter(grapple.match),\n        tap(target => play('Crossbow', 0.7)),\n        ignoreElements(),\n    )\n\nexport const soundEpics = combineEpics(\n    moveSoundEpic,\n    equipSoundEpic,\n    loseSoundEpic,\n    grappleSoundEpic,\n)\n","import { applyMiddleware, combineReducers, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { combineEpics, createEpicMiddleware } from 'redux-observable'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { gameEpics } from './gameEpics'\nimport { gameReducer } from './gameReducer'\nimport { localReducer } from './localReducer'\nimport { soundEpics } from './soundEpics'\n\nconst epicMiddleware = createEpicMiddleware()\n\nconst composeEnhancers = composeWithDevTools({\n    name: 'App',\n})\n\nconst rootReducer = combineReducers({\n    game: gameReducer,\n    local: persistReducer({ key: 'local', storage }, localReducer),\n})\n\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(epicMiddleware)))\nexport const persistor = persistStore(store)\n\nepicMiddleware.run(combineEpics(soundEpics, gameEpics))\n","import { isEqual, uniqueId } from 'lodash'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Action } from 'redux'\nimport { play } from '../audio/play'\nimport { PROJECTILE_ELEVATION } from '../config'\nimport { findById } from '../helpers'\nimport {\n    enqueue,\n    equip,\n    GameStateAware,\n    grapple,\n    loadMap,\n    move,\n    projectile,\n    reset,\n    rotate,\n    unloadMap,\n} from '../state/gameReducer'\nimport { PLAYER_ID } from '../types/consts'\nimport { MapData, ObjectInstance, ObjectTypes, Vector2 } from '../types/types'\n\nexport const useGame = () => {\n    const state = useSelector((state: GameStateAware) => state.game)\n    const dispatch = useDispatch()\n    const player = findById(state.objects, PLAYER_ID)!\n    const rdy = !state.queueStared && !!player\n\n    const triggerMove = (vector: Vector2) => {\n        if (!rdy) return\n\n        const actions: Action[] = []\n\n        if (!isEqual(player.rotation, vector)) {\n            // Hmm it's ok without enqueue?\n            dispatch(rotate({ targetId: player.id, rotation: vector }))\n        } else {\n            actions.push(move({ targetId: player.id, vector }))\n        }\n\n        dispatch(enqueue(actions))\n    }\n\n    const triggerEquip = () => {\n        if (!rdy) return\n        dispatch(enqueue(equip({ targetId: player.id })))\n    }\n\n    const triggerGrapple = () => {\n        if (!rdy) return\n\n        if (!player.data.hasGrapple) {\n            play('Alert_NO')\n            return\n        }\n\n        dispatch(enqueue(grapple({ targetId: player.id })))\n    }\n\n    const triggerFire = () => {\n        if (!rdy) return\n        const { id, xy, rotation, elevation, data } = player\n\n        if (!data.hasCannon) {\n            play('Alert_NO')\n            return\n        }\n\n        const instance: ObjectInstance = {\n            type: ObjectTypes.RocketProjectile,\n            id: uniqueId(),\n            xy,\n            rotation,\n            elevation: elevation + PROJECTILE_ELEVATION,\n            aIndex: 100,\n            zIndex: 10,\n            data,\n        }\n\n        dispatch(enqueue(projectile({ byId: id, instance })))\n    }\n\n    const triggerReset = () => {\n        if (!rdy) return\n        dispatch(reset())\n    }\n\n    const triggerLoadMap = (map: MapData) => {\n        dispatch(loadMap(map))\n    }\n\n    const triggerUnloadMap = () => {\n        dispatch(unloadMap())\n    }\n\n    return {\n        ...state,\n        player,\n\n        loadMap: triggerLoadMap,\n        unloadMap: triggerUnloadMap,\n        reset: triggerReset,\n\n        move: triggerMove,\n        equip: triggerEquip,\n        fire: triggerFire,\n        grapple: triggerGrapple,\n    }\n}\n","import React, { useEffect } from 'react'\nimport { Color } from 'three'\nimport { useGame } from '../hooks/useGame'\nimport { useThree, useFrame } from 'react-three-fiber'\nimport { ObjectInstance } from '../types/types'\nimport { CAMERA_OFFSET } from '../config'\n\nconst d = 5\n\ninterface EnvironmentProps {\n    // player: ObjectInstance,\n    mapId: string | null\n    objectsList: ObjectInstance[]\n}\n\nexport const Environment = ({ objectsList, mapId }: EnvironmentProps) => {\n    const { camera, size } = useThree()\n\n    useEffect(() => {\n        const xValues = objectsList.map(obj => obj.xy[0])\n        const yValues = objectsList.map(obj => obj.xy[1])\n\n        const mapCenterX = Math.max(...xValues) / 2\n        const mapCenterY = Math.max(...yValues) / 2\n\n        const offsetX =\n            (CAMERA_OFFSET[0] * Math.max(mapCenterX, mapCenterY) * 7) /\n            (size.width / size.height) /\n            0.9\n        const offsetY =\n            (CAMERA_OFFSET[1] * Math.max(mapCenterX, mapCenterY) * 7) /\n            (size.width / size.height) /\n            0.9\n        const offsetZ =\n            (CAMERA_OFFSET[2] * Math.max(mapCenterX, mapCenterY) * 7) /\n            (size.width / size.height) /\n            0.9\n\n        camera.position.set(mapCenterX + offsetX, offsetZ, mapCenterY + offsetY)\n        camera.lookAt(mapCenterX, 0, mapCenterY)\n    }, [mapId, size])\n\n    return (\n        <group>\n            <ambientLight intensity={2} color={new Color('#dbab93')} />\n            <pointLight\n                position={[6, 7, 8]}\n                intensity={2.2}\n                color={new Color('#c86b6f')}\n                shadow-mapSize-Height=\"1024\"\n                shadow-mapSize-width=\"1024\"\n                shadow-camera-far={30}\n                shadow-bias={-0.01}\n                castShadow\n                shadow-camera-left={-d}\n                shadow-camera-right={d}\n                shadow-camera-top={d}\n                shadow-camera-bottom={-d}\n            />\n            <pointLight position={[1, 3, 5]} intensity={2.2} color={new Color('#3a8dc2')} />\n        </group>\n    )\n}\n","import React, { Suspense } from 'react'\nimport { Canvas } from 'react-three-fiber'\nimport { PCFSoftShadowMap } from 'three'\nimport { Dialog } from '../components/Dialog'\nimport { maps } from '../data/maps'\nimport { useGame } from '../hooks/useGame'\nimport { getDefinition } from '../objects/definitions'\nimport { Environment } from './Environment'\n\nexport const GameInstance = () => {\n    const { objects, mapId } = useGame()\n\n    if (!mapId) return null\n\n    return (\n        <>\n            {mapId && (\n                <Canvas\n                    key={mapId}\n                    camera={{\n                        zoom: 20,\n                    }}\n                    onCreated={scene => {\n                        if (scene.gl?.shadowMap) {\n                            scene.gl.shadowMap.type = PCFSoftShadowMap\n                            scene.gl.shadowMap.enabled = true\n                        }\n                    }}\n                >\n                    <group>\n                        <Environment objectsList={objects} mapId={mapId} />\n                        <Suspense\n                            fallback={\n                                <mesh>\n                                    <boxBufferGeometry attach=\"geometry\" args={[0.5, 0.5, 0.5]} />\n                                    <meshStandardMaterial attach=\"material\" color=\"red\" />\n                                </mesh>\n                            }\n                        >\n                            {objects.map(obj => {\n                                const { Component3d } = getDefinition(obj.type)\n                                return <Component3d key={obj.id} instance={obj} />\n                            })}\n                        </Suspense>\n                    </group>\n                </Canvas>\n            )}\n        </>\n    )\n}\n","import styled from 'styled-components'\n\nexport const Button = styled.button`\n    background: none;\n    color: rgba(205, 236, 255, 0.7);\n    font-size: 14px;\n    border: 1px solid currentColor;\n    padding: 10px 20px;\n    margin: 4px;\n    border-radius: 4px;\n    text-transform: uppercase;\n    display: inline-block;\n    cursor: pointer;\n\n    &:hover {\n        background-color: rgba(205, 236, 255, 0.2);\n    }\n\n    small {\n        display: block;\n        font-size: 10;\n        text-transform: uppercase;\n        margin-top: 2px;\n    }\n    strong {\n        font-size: 27px;\n    }\n`\n\nexport const ButtonBlock = styled.div`\n    display: inline-block;\n    ${Button} {\n        display: block;\n        margin-top: 6px;\n    }\n`\n","import React, { FC } from 'react'\nimport styled from 'styled-components'\n\nexport const Dialog: FC = ({ children }) => {\n    return (\n        <Container>\n            <DialogBG>{children}</DialogBG>\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    position: fixed;\n    z-index: 50;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(0, 0, 0, 0.5);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nconst DialogBG = styled.div`\n    background-color: #0b4566;\n    padding: 30px 50px;\n    border-radius: 4px;\n    text-align: center;\n`\n","import { MapData } from '../types/types'\n\nimport walk from './walk.json'\n// import buttonImg from './images/walk.png'\n\nimport button from './button.json'\nimport buttonImg from './images/button.png'\n\nimport box from './box.json'\n// import stairsImg from './images/box.png'\n\nimport stairs from './stairs.json'\nimport stairsImg from './images/stairs.png'\n\nimport wall from './wall.json'\nimport wallImg from './images/wall.png'\n\nimport cliff from './cliff.json'\nimport cliffImg from './images/cliff.png'\n\nimport cannon from './cannon.json'\n// import cannonImg from './images/cannonRecoil.png'\n\nimport cannonRecoil from './cannonRecoil.json'\nimport cannonRecoilImg from './images/cannonRecoil.png'\n\nimport dustRiver from './dustRiver.json'\nimport dustRiverImg from './images/dustRiver.png'\n\nimport dustPipe from './dustPipe.json'\nimport dustPipeImg from './images/dustPipe.png'\n\nimport greenRiver from './greenRiver.json'\nimport greenRiverImg from './images/greenRiver.png'\n\nimport lake from './lake.json'\nimport lakeImg from './images/lake.png'\n\nimport crossbow from './crossbow.json'\n// import crossbowImg from './images/crossbow.png'\n\nimport map0 from './map0.json'\nimport map1 from './map1.json'\nimport map2 from './map2.json'\n\nimport mountains from './mountains.json'\n\nimport mapStarter from './starter.json'\nimport { IS_DEV } from '../config'\n\nexport const maps: MapData[] = [\n    { id: 'walk', name: 'walk', objects: walk },\n    { id: 'button', name: 'button', image: buttonImg, objects: button as any },\n\n    { id: 'box', name: 'box', objects: box as any },\n\n    { id: 'stairs', name: 'stairs', image: stairsImg, objects: stairs as any },\n    { id: 'cliff', name: 'cliff', image: cliffImg, objects: cliff as any },\n    { id: 'wall', name: 'wall', image: wallImg, objects: wall as any },\n\n    // Cannon ↓\n    { id: 'cannon', name: 'cannon', objects: cannon },\n    {\n        id: 'cannon-recoil',\n        name: 'cannon-recoil',\n        image: cannonRecoilImg,\n        objects: cannonRecoil as any,\n    },\n    { id: 'dust-river', name: 'dust-river', image: dustRiverImg, objects: dustRiver as any },\n    { id: 'dust-pipe', name: 'dust-pipe', image: dustPipeImg, objects: dustPipe as any },\n    { id: 'green-river', name: 'green-river', image: greenRiverImg, objects: greenRiver as any },\n\n    // Crossbow ↓\n    { id: 'crossbow', name: 'crossbow', objects: crossbow as any },\n    { id: 'mountains', name: 'mountains', objects: mountains as any },\n    { id: 'lake', name: 'lake', image: lakeImg, objects: lake as any },\n]\n\nif (IS_DEV) {\n    maps.push(\n        { id: 'map-0', name: 'Test 0', objects: map0 as any },\n        { id: 'map-1', name: 'Test 1', objects: map1 as any },\n        { id: 'map-2', name: 'Test 2', objects: map2 as any },\n        { id: 'starter', name: 'Editor', objects: mapStarter as any },\n    )\n}\n","import { uniqueId } from 'lodash'\nimport { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { randomRotation, applyVector } from '../helpers'\nimport {\n    addObject,\n    GameStateAware,\n    removeObject,\n    updateObject,\n    updateCleanObjectsState,\n    replaceObjects,\n} from '../state/gameReducer'\nimport { ObjectInstance, ObjectTypes, Vector2 } from '../types/types'\n\nexport const useEditor = () => {\n    const state = useSelector((state: GameStateAware) => state.game)\n    const [editMode, setEditMode] = useState(false)\n    const dispatch = useDispatch()\n\n    const [lastType, setLastType] = useState(ObjectTypes.RockFloor)\n    const [lastElevation, setLastElevation] = useState(0)\n\n    const updateCleanState = () => dispatch(updateCleanObjectsState())\n\n    const toggleEditMode = () => {\n        setEditMode(!editMode)\n    }\n\n    const update = (targetId: string) => (objectValues: Partial<ObjectInstance>) => {\n        objectValues.type && setLastType(objectValues.type)\n        objectValues.elevation && setLastElevation(objectValues.elevation)\n\n        dispatch(updateObject({ targetId, objectValues }))\n        updateCleanState()\n    }\n\n    const moveMap = (vector: Vector2) => {\n        dispatch(\n            replaceObjects(\n                state.objects.map(obj => ({\n                    ...obj,\n                    xy: applyVector(obj.xy, vector),\n                })),\n            ),\n        )\n    }\n\n    const add = (objectValues: Partial<ObjectInstance>) => {\n        const instance: ObjectInstance = {\n            type: lastType,\n            id: `${uniqueId()}-${state.objects.length}`,\n            xy: [0, 0],\n            rotation: randomRotation(),\n            elevation: lastElevation,\n            zIndex: 0,\n            aIndex: 0,\n            data: {},\n            ...objectValues,\n        }\n\n        dispatch(addObject(instance))\n        updateCleanState()\n    }\n\n    const remove = (targetId: string) => {\n        dispatch(removeObject(targetId))\n        updateCleanState()\n    }\n\n    const copyMap = () => {\n        const serializedMap = JSON.stringify(state.objects)\n\n        navigator.clipboard.writeText(serializedMap).then(() => {\n            console.log('Copied to clipboard')\n        }, console.error)\n    }\n\n    return { update, add, remove, moveMap, toggleEditMode, editMode, copyMap }\n}\n","// import { useEffect } from 'react'\n\n// export const useKeyboardEvent = (key: string, callback: Function) => {\n//     useEffect(() => {\n//         const handler = (event: KeyboardEvent) => {\n//             if (event.key === key) callback()\n//         }\n\n//         window.addEventListener('keydown', handler)\n\n//         return () => window.removeEventListener('keydown', handler)\n//     })\n// }\n\nimport hotkeys from 'hotkeys-js'\nimport { DependencyList, useEffect, useCallback } from 'react'\n\nexport const useKeyboardEvent = (\n    key: string | false,\n    callback: (event: KeyboardEvent) => void,\n    deps: DependencyList = [],\n) => {\n    const memoisedCallback = useCallback(callback, deps)\n\n    useEffect(() => {\n        if (!key) return\n\n        hotkeys(key, memoisedCallback)\n\n        return () => hotkeys.unbind(key, memoisedCallback)\n    }, [key, memoisedCallback])\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { AUTHORS } from '../config'\nimport { shuffleArray } from '../helpers'\n\nexport const Authors = () => (\n    <>\n        <Info>\n            <b>Twórcy</b>\n        </Info>\n        <AuthorList>\n            {shuffleArray(AUTHORS).map(({ name, tech }, index) => (\n                <li key={index}>\n                    <b>{name}</b> {tech}\n                </li>\n            ))}\n        </AuthorList>\n        <Info>\n            Gra stworzona w ramach Game Jam{' '}\n            <a href=\"https://zostanwdomurobgry.pl\">ZostanWDomuRobGry.pl</a>\n        </Info>\n    </>\n)\n\nconst Info = styled.p`\n    text-align: center;\n`\n\nconst AuthorList = styled.ul`\n    text-align: center;\n    list-style: none;\n    line-height: 1.4;\n`\n","import { isEmpty, isEqual } from 'lodash'\nimport React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { createArray, findByXY, applyVector } from '../helpers'\nimport { useEditor } from '../hooks/useEditor'\nimport { getDefinition, objectDefinitions } from '../objects/definitions'\nimport { DOWN, LEFT, RIGHT, UP } from '../types/consts'\nimport { ObjectInstance, ObjectTypes, Vector2, XY } from '../types/types'\n\ninterface DebugViewProps {\n    objects: ObjectInstance[]\n}\n\nconst size = 150\nconst grid = 10\n\nconst color: Partial<Record<ObjectTypes, string>> = {\n    [ObjectTypes.Player]: 'red',\n    [ObjectTypes.WinTrigger]: 'green',\n\n    [ObjectTypes.Grass]: 'green',\n    [ObjectTypes.Water]: 'blue',\n    [ObjectTypes.RockFloor]: 'gray',\n    [ObjectTypes.Wall]: 'white',\n    [ObjectTypes.Box]: 'brown',\n    [ObjectTypes.BigRock]: 'silver',\n    [ObjectTypes.BigRock2]: 'silver',\n\n    [ObjectTypes.Pipe]: 'lightblue',\n    [ObjectTypes.PipeLeft]: 'lightblue',\n    [ObjectTypes.PipeRight]: 'lightblue',\n    [ObjectTypes.PipePlace]: 'lightblue',\n    [ObjectTypes.PipeUp]: 'lightblue',\n    [ObjectTypes.PipeDown]: 'lightblue',\n    [ObjectTypes.PipeElement]: 'lightblue',\n\n    [ObjectTypes.Fence]: 'white',\n\n    [ObjectTypes.Button]: 'pink',\n    [ObjectTypes.Door]: 'pink',\n    [ObjectTypes.WallMetal]: 'black',\n    [ObjectTypes.Ice]: 'white',\n\n    [ObjectTypes.Crossbow]: 'purple',\n    [ObjectTypes.Cannon]: 'purple',\n    [ObjectTypes.Boom]: 'white',\n\n    [ObjectTypes.CrossbowProjectile]: 'white',\n    [ObjectTypes.RocketProjectile]: 'white',\n\n    [ObjectTypes.Tree]: 'green',\n    [ObjectTypes.Tree2]: 'green',\n    [ObjectTypes.Metal]: '#ccc',\n    [ObjectTypes.Metal2]: '#ccc',\n}\n\nexport const DebugView = ({ objects }: DebugViewProps) => {\n    const editor = useEditor()\n\n    return (\n        <Container>\n            <button onClick={editor.copyMap}>Copy map</button>\n            Move map:\n            <button onClick={() => editor.moveMap(UP)}>UP</button>\n            <button onClick={() => editor.moveMap(DOWN)}>DOWN</button>\n            <button onClick={() => editor.moveMap(LEFT)}>LEFT</button>\n            <button onClick={() => editor.moveMap(RIGHT)}>RIGHT</button>\n            <MapGrid>\n                {createArray(grid).map(y => (\n                    <Row key={y}>\n                        {createArray(grid).map(x => (\n                            <Cell\n                                key={x}\n                                objects={findByXY(objects, [x, y])}\n                                editor={editor}\n                                xy={[x, y]}\n                            />\n                        ))}\n                    </Row>\n                ))}\n            </MapGrid>\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    position: absolute;\n    z-index: 100;\n    top: 0;\n    right: 0;\n    left: 0;\n    bottom: 0;\n    opacity: 0.8;\n    background-color: rgba(0, 0, 0, 0.7);\n    overflow: auto;\n`\n\nconst MapGrid = styled.div`\n    border: 1px solid #333;\n    font-size: 12px;\n`\n\nconst Row = styled.div`\n    display: flex;\n`\n\nconst Cols = styled.div`\n    display: grid;\n    grid-auto-flow: column;\n    grid-auto-columns: auto;\n    margin: 5px 0;\n`\n\ninterface CellProps {\n    xy: XY\n    objects: ObjectInstance[]\n    editor: ReturnType<typeof useEditor>\n}\n\nexport const Cell = ({ objects, xy, editor: { update, add, remove } }: CellProps) => {\n    const [open, setOpen] = useState(false)\n\n    const addEmpty = () => add({ xy })\n    const openAndAdd = () => {\n        setOpen(true)\n        if (!objects.length) addEmpty()\n    }\n\n    const getHeight = (obj: ObjectInstance) => {\n        const def = getDefinition(obj.type)\n        return def.height(obj)\n    }\n\n    if (open) {\n        return (\n            <CellContainer>\n                {objects.map(obj => (\n                    <CellObj key={obj.id}>\n                        <Remove onClick={() => remove(obj.id)} />\n                        <TextInput obj={obj} field=\"id\" onChange={update(obj.id)} />\n                        <TypeSelect obj={obj} onChange={update(obj.id)} />\n                        elevation:\n                        <ElevationInput obj={obj} onChange={update(obj.id)} />\n                        rotation:\n                        <RotationInput obj={obj} onChange={update(obj.id)} />\n                        move:\n                        <MoveInput obj={obj} onChange={update(obj.id)} />\n                        <Cols>\n                            <div>\n                                zIndex:\n                                <NumberInput obj={obj} field=\"zIndex\" onChange={update(obj.id)} />\n                            </div>\n                            <div>\n                                aIndex:\n                                <NumberInput obj={obj} field=\"aIndex\" onChange={update(obj.id)} />\n                            </div>\n                            <div>\n                                Size: <br />\n                                h: <b>{getHeight(obj)}</b> e: <b>{obj.elevation}</b>\n                            </div>\n                        </Cols>\n                        <DataInput obj={obj} onChange={update(obj.id)} />\n                    </CellObj>\n                ))}\n                <button onClick={addEmpty}>+</button>\n                <button onClick={() => setOpen(false)}>Close</button>\n            </CellContainer>\n        )\n    }\n\n    return (\n        <CellInfoContainer onClick={openAndAdd}>\n            {objects.map(obj => (\n                <CellObj key={obj.id}>\n                    <div>\n                        <strong style={{ color: color[obj.type] }}>{obj.type}</strong> <br />\n                        <small>{obj.id}</small>\n                    </div>\n                    {!isEmpty(obj.data) && <pre>{JSON.stringify(obj.data, null, 1)}</pre>}\n                    <small>\n                        h: {getHeight(obj)} e: {obj.elevation}\n                    </small>\n                </CellObj>\n            ))}\n        </CellInfoContainer>\n    )\n}\n\nconst CellInfoContainer = styled.div`\n    width: ${size}px;\n    min-height: ${size}px;\n    border: 1px solid #333;\n`\n\nconst CellObj = styled.div`\n    position: relative;\n    background: #333;\n    padding: 7px 10px;\n    margin: 4px;\n    line-height: 1;\n    font-size: 12px;\n    pre {\n        font-size: 10px;\n    }\n`\n\nconst Remove = styled.div`\n    position: absolute;\n    top: 0;\n    right: 0;\n    cursor: pointer;\n    &::after {\n        content: '❌';\n    }\n`\n\nconst CellContainer = styled.div`\n    width: ${size * 1.5}px;\n    min-height: ${size}px;\n    border: 1px solid #333;\n`\n\ninterface TextInputProps {\n    obj: ObjectInstance\n    field: keyof ObjectInstance\n    onChange(partial: Partial<ObjectInstance>): void\n}\n\nconst TextInput = ({ obj, field, onChange }: TextInputProps) => {\n    return (\n        <div>\n            <input\n                value={obj[field] as string}\n                onChange={event => onChange({ [field]: event.target.value })}\n            />\n        </div>\n    )\n}\n\ninterface NumberInputProps {\n    obj: ObjectInstance\n    field: keyof ObjectInstance\n    onChange(partial: Partial<ObjectInstance>): void\n    style?: React.CSSProperties\n}\n\nconst NumberInput = ({ obj, field, onChange, style }: NumberInputProps) => {\n    return (\n        <div>\n            <input\n                type=\"number\"\n                step=\"0.1\"\n                value={obj[field] as string}\n                style={style || { width: 40 }}\n                onChange={event => {\n                    const value = parseFloat(event.target.value)\n                    if (Number.isNaN(value)) return\n                    onChange({ [field]: parseFloat(event.target.value) })\n                }}\n            />\n        </div>\n    )\n}\n\ninterface TypeSelectProps {\n    obj: ObjectInstance\n    onChange(partial: Partial<ObjectInstance>): void\n}\n\nconst TypeSelect = ({ obj, onChange }: TypeSelectProps) => {\n    return (\n        <div>\n            <select\n                value={obj.type}\n                onChange={event => onChange({ type: event.target.value as ObjectTypes })}\n            >\n                {Object.keys(objectDefinitions).map(item => (\n                    <option>{item}</option>\n                ))}\n            </select>\n        </div>\n    )\n}\n\ninterface ElevationInputProps {\n    obj: ObjectInstance\n    onChange(partial: Partial<ObjectInstance>): void\n}\n\nconst ElevationInput = ({ obj, onChange }: ElevationInputProps) => {\n    const f = 100\n    return (\n        <div>\n            <Cols>\n                <NumberInput obj={obj} field=\"elevation\" onChange={onChange} />\n                <input\n                    type=\"range\"\n                    min={-1 * f}\n                    max={10 * f}\n                    value={obj.elevation * f}\n                    onChange={event => onChange({ elevation: parseFloat(event.target.value) / f })}\n                />\n            </Cols>\n        </div>\n    )\n}\n\ninterface RotationInputProps {\n    obj: ObjectInstance\n    onChange(partial: Partial<ObjectInstance>): void\n}\n\nconst RotationInput = ({ obj, onChange }: RotationInputProps) => {\n    return (\n        <div>\n            <RotationInputButton obj={obj} label={'LEFT'} rotation={LEFT} onChange={onChange} />\n            <RotationInputButton obj={obj} label={'UP'} rotation={UP} onChange={onChange} />\n            <RotationInputButton obj={obj} label={'DOWN'} rotation={DOWN} onChange={onChange} />\n            <RotationInputButton obj={obj} label={'RIGHT'} rotation={RIGHT} onChange={onChange} />\n        </div>\n    )\n}\n\ninterface RotationInputButtonProps {\n    label: string\n    obj: ObjectInstance\n    rotation?: Vector2\n    onChange(partial: Partial<ObjectInstance>): void\n}\n\nconst RotationInputButton = ({ obj, onChange, rotation, label }: RotationInputButtonProps) => {\n    return (\n        <RotationBtn\n            active={!!rotation && isEqual(obj.rotation, rotation)}\n            onClick={() => onChange({ rotation })}\n        >\n            {label}\n        </RotationBtn>\n    )\n}\n\nconst RotationBtn = styled.span<{ active: boolean }>`\n    margin-right: 5px;\n    cursor: pointer;\n    ${p => p.active && 'font-weight: bold;'};\n`\n\nconst MoveInput = ({ obj, onChange }: RotationInputProps) => {\n    return (\n        <div>\n            <RotationInputButton\n                obj={obj}\n                label={'LEFT'}\n                onChange={() => onChange({ xy: applyVector(obj.xy, LEFT) })}\n            />\n            <RotationInputButton\n                obj={obj}\n                label={'UP'}\n                onChange={() => onChange({ xy: applyVector(obj.xy, UP) })}\n            />\n            <RotationInputButton\n                obj={obj}\n                label={'DOWN'}\n                onChange={() => onChange({ xy: applyVector(obj.xy, DOWN) })}\n            />\n            <RotationInputButton\n                obj={obj}\n                label={'RIGHT'}\n                onChange={() => onChange({ xy: applyVector(obj.xy, RIGHT) })}\n            />\n        </div>\n    )\n}\n\ninterface DataInputProps {\n    obj: ObjectInstance\n    onChange(partial: Partial<ObjectInstance>): void\n}\n\nconst DataInput = ({ obj, onChange }: DataInputProps) => {\n    const data = JSON.stringify(obj.data)\n    const [localData, setLocalData] = useState(data)\n    return (\n        <div>\n            <textarea\n                value={localData}\n                onFocus={() => setLocalData(JSON.stringify(obj.data))}\n                onChange={event => {\n                    setLocalData(event.target.value)\n                    try {\n                        const data = JSON.parse(event.target.value)\n                        onChange({ data })\n                    } catch (e) {\n                        console.error(e)\n                    }\n                }}\n            />\n        </div>\n    )\n}\n","import React, { FC } from 'react'\nimport introVideo from './intro.mp4'\nimport styled from 'styled-components'\nimport { Button } from '../../components/Button'\n\ninterface IntroProps {\n    onEnded(): void\n}\n\nexport const Intro = ({ onEnded }: IntroProps) => {\n    return (\n        <Container>\n            <Video autoPlay onEnded={onEnded}>\n                <source src={introVideo} type=\"video/mp4\" />\n            </Video>\n            <SkipButton onClick={onEnded}>Skip Intro</SkipButton>\n        </Container>\n    )\n}\n\nconst SkipButton = styled(Button)`\n    position: absolute;\n    bottom: 30px;\n    left: 0;\n    right: 0;\n    margin: auto;\n    width: 200px;\n    background-color: rgba(0, 0, 0, 0.5);\n`\n\nconst Container = styled.div`\n    position: fixed;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    background: #000;\n`\n\nconst Video = styled.video`\n    width: 100%;\n    height: 100%;\n`\n","import React, { useEffect, useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport { getAudio } from '../audio/play'\nimport { Button, ButtonBlock } from '../components/Button'\nimport { Dialog } from '../components/Dialog'\nimport {\n    BTN_EQUIP,\n    BTN_EXIT,\n    BTN_FIRE,\n    BTN_GRAPPLE,\n    BTN_LEVEL,\n    BTN_RESTART,\n    CONGRATULATIONS,\n    GAME_NAME,\n    IS_DEV,\n    LEVEL_COMPLETE,\n    NEXT_LEVEL,\n} from '../config'\nimport { maps } from '../data/maps'\nimport { useEditor } from '../hooks/useEditor'\nimport { useGame } from '../hooks/useGame'\nimport { useKeyboardEvent } from '../hooks/useKeyboardEvent'\nimport { useLocal } from '../hooks/useLocal'\nimport { DOWN, LEFT, RIGHT, UP } from '../types/consts'\nimport { Authors } from './Authors'\nimport { DebugView } from './DebugView'\nimport { Intro } from './intro/Intro'\n\nexport const Menu = () => {\n    const {\n        objects,\n        winDialog,\n        mapId,\n        mapName,\n        move,\n        equip,\n        grapple,\n        fire,\n        loadMap,\n        unloadMap,\n        reset,\n    } = useGame()\n    const { player } = useGame()\n    const { editMode, toggleEditMode } = useEditor()\n    const { isCompleted } = useLocal()\n\n    const [introPlayed, setIntroPlayed] = useState(true) // TODO false\n    const [gameStarted, setGameStarted] = useState(true) // TODO false\n\n    const musicRef = useRef(getAudio('Music', 0.3))\n    const droneRef = useRef(getAudio('Drone', 1))\n    const playMusic = !mapId || winDialog\n\n    useEffect(() => {\n        if (!gameStarted || !introPlayed) return\n        if (playMusic) {\n            droneRef.current.pause()\n\n            musicRef.current.currentTime = 0\n            musicRef.current.play()\n        } else {\n            musicRef.current.pause()\n\n            droneRef.current.currentTime = 0\n            droneRef.current.play()\n\n            const onEnd = () => droneRef.current.play()\n            droneRef.current.addEventListener('ended', onEnd)\n            return () => droneRef.current.removeEventListener('ended', onEnd)\n        }\n    }, [playMusic, gameStarted, introPlayed])\n\n    const nextMap = () => {\n        const currentIndex = maps.findIndex(m => m.id === mapId)\n        const nextMap = maps[currentIndex + 1]\n        if (nextMap) loadMap(nextMap)\n        else unloadMap()\n    }\n\n    useKeyboardEvent('m', toggleEditMode, [editMode])\n\n    const left = () => move(LEFT)\n    const up = () => move(UP)\n    const down = () => move(DOWN)\n    const right = () => move(RIGHT)\n\n    useKeyboardEvent('r', reset, [mapId])\n    useKeyboardEvent('q', unloadMap)\n    useKeyboardEvent(winDialog && 'enter', nextMap, [winDialog])\n\n    useKeyboardEvent('w', up, [up])\n    useKeyboardEvent('s', down, [down])\n    useKeyboardEvent('a', left, [left])\n    useKeyboardEvent('d', right, [right])\n\n    useKeyboardEvent('up', up, [up])\n    useKeyboardEvent('down', down, [down])\n    useKeyboardEvent('left', left, [left])\n    useKeyboardEvent('right', right, [right])\n\n    useKeyboardEvent('e', equip, [equip])\n    useKeyboardEvent('f', grapple, [grapple])\n    useKeyboardEvent('space', fire, [fire])\n\n    useKeyboardEvent(\n        '*',\n        event => {\n            const index = +event.key\n            if (index && maps[index]) loadMap(maps[index])\n        },\n        [],\n    )\n\n    return (\n        <>\n            {!introPlayed && gameStarted && <Intro onEnded={() => setIntroPlayed(true)} />}\n            {!mapId && (\n                <>\n                    <Title>{GAME_NAME}</Title>\n                    {gameStarted ? (\n                        <LevelWrapper>\n                            {maps.map((map, index) => (\n                                <LevelButton key={map.id} onClick={() => loadMap(map)}>\n                                    {BTN_LEVEL} {index} {isCompleted(map.id) && <Completed />}\n                                    {IS_DEV && (\n                                        <small style={{ fontSize: 11 }}>\n                                            <br />\n                                            {map.name}\n                                        </small>\n                                    )}\n                                    {map.image && <img src={map.image} width=\"200\" alt=\"\" />}\n                                </LevelButton>\n                            ))}\n                        </LevelWrapper>\n                    ) : (\n                        <StartButtonWrapper>\n                            <StartButton onClick={() => setGameStarted(true)}>Play</StartButton>\n                        </StartButtonWrapper>\n                    )}\n                </>\n            )}\n\n            {editMode && <DebugView objects={objects} />}\n\n            {mapId && (\n                <SmallMenuWrapper>\n                    <Button onClick={unloadMap}>\n                        {BTN_EXIT}\n                        <small>{`[Q]`}</small>\n                    </Button>\n                    <Button onClick={reset}>\n                        {BTN_RESTART} <small>{`[R]`}</small>\n                    </Button>\n                </SmallMenuWrapper>\n            )}\n            {mapName && (\n                <MapName>\n                    {BTN_LEVEL} {maps.findIndex(m => m.id === mapId)}\n                </MapName>\n            )}\n            {mapId && player && (\n                <ControlsWrapper>\n                    <Button onClick={left}>\n                        <strong>←</strong>\n                        <small>{`[A]`}</small>\n                    </Button>\n                    <ButtonBlock>\n                        <Button onClick={up}>\n                            <strong>↑</strong>\n                            <small>{`[W]`}</small>\n                        </Button>\n                        <Button onClick={down}>\n                            <strong>↓</strong>\n                            <small>{`[S]`}</small>\n                        </Button>\n                    </ButtonBlock>\n                    <Button onClick={right}>\n                        <strong>→</strong>\n                        <small>{`[D]`}</small>\n                    </Button>\n                    <Button onClick={equip}>\n                        {BTN_EQUIP} <small>{`[E]`}</small>\n                    </Button>\n                    {player.data.hasGrapple && (\n                        <Button onClick={grapple}>\n                            {BTN_GRAPPLE} <small>{`[F]`}</small>\n                        </Button>\n                    )}\n                    {player.data.hasCannon && (\n                        <Button onClick={fire}>\n                            {BTN_FIRE} <small>{'[SPACE]'}</small>\n                        </Button>\n                    )}\n                </ControlsWrapper>\n            )}\n            {winDialog && (\n                <Dialog>\n                    <h1>{CONGRATULATIONS}</h1>\n                    <p>{LEVEL_COMPLETE}</p> <br />\n                    <Button onClick={nextMap}>\n                        {NEXT_LEVEL} <small>[enter]</small>\n                    </Button>\n                </Dialog>\n            )}\n            {!mapId && <Authors />}\n        </>\n    )\n}\n\nconst Completed = styled.span`\n    &::after {\n        content: '✓';\n        color: #8fe34f;\n    }\n`\n\nconst StartButtonWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    padding: 120px 0;\n`\n\nconst StartButton = styled(Button)`\n    font-size: 50px;\n    padding: 40px 60px;\n`\n\nconst Title = styled.h1`\n    font-family: 'Gugi', cursive;\n    font-size: 85px;\n    text-align: center;\n    font-weight: normal;\n    color: #fff;\n`\n\nconst LevelWrapper = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n    grid-auto-rows: 1fr;\n    grid-gap: 24px;\n    padding: 24px;\n`\n\nconst LevelButton = styled.button`\n    cursor: pointer;\n    background: none;\n    border: none;\n    color: rgba(205, 236, 255, 0.726);\n    font-size: 30px;\n    padding: 20px 30px;\n    margin: 4px;\n    border-radius: 4px;\n    text-transform: uppercase;\n    text-align: center;\n    transition: all ease 150ms;\n\n    &:hover {\n        background-color: rgba(205, 236, 255, 0.2);\n    }\n\n    img {\n        display: block;\n        margin: auto;\n        margin-top: 20px;\n        height: 200px;\n        object-fit: contain;\n    }\n`\n\nconst MapName = styled.div`\n    font-weight: bold;\n    position: absolute;\n    z-index: 5;\n    top: 0;\n    right: 0;\n    padding: 10px 20px 0 0;\n    font-size: 24px;\n    text-transform: uppercase;\n`\n\nconst ControlsWrapper = styled.div`\n    position: absolute;\n    z-index: 5;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    text-align: center;\n`\n\nconst SmallMenuWrapper = styled.div`\n    position: absolute;\n    z-index: 5;\n    top: 0;\n    left: 0;\n`\n","import { useSelector } from 'react-redux'\nimport { LocalStateAware } from '../state/localReducer'\n\nexport const useLocal = () => {\n    const state = useSelector((state: LocalStateAware) => state.local)\n    const isCompleted = (mapId: string) => state.completedMaps.includes(mapId)\n\n    return { isCompleted }\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { store, persistor } from '../state/store'\nimport { GameInstance } from './GameInstance'\nimport { Menu } from './Menu'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nexport const App = () => {\n    return (\n        <Provider store={store}>\n            <PersistGate loading={null} persistor={persistor}>\n                <GameInstance />\n                <Menu />\n            </PersistGate>\n        </Provider>\n    )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './app/App'\nimport './styles/global.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","module.exports = __webpack_public_path__ + \"static/media/button.95cda525.png\";","module.exports = __webpack_public_path__ + \"static/media/stairs.2492224d.png\";","module.exports = __webpack_public_path__ + \"static/media/wall.730fc322.png\";","module.exports = __webpack_public_path__ + \"static/media/cliff.6206b09f.png\";","module.exports = __webpack_public_path__ + \"static/media/cannonRecoil.04c35559.png\";","module.exports = __webpack_public_path__ + \"static/media/dustRiver.0727068f.png\";","module.exports = __webpack_public_path__ + \"static/media/dustPipe.388f7bd1.png\";","module.exports = __webpack_public_path__ + \"static/media/greenRiver.5a21b17c.png\";"],"sourceRoot":""}