{"version":3,"sources":["types/types.ts","helpers.ts","types/consts.ts","mocks/mapMock.ts","audio/play.ts","objects/models/Items.tsx","objects/tileTypeDefinitions.tsx","objects/propTypeDefinitions.tsx","objects/definitions.ts","state/resolvers/flyResolver.ts","state/resolvers/moveResolver.ts","config.ts","state/gameReducer.ts","state/resolvers/rotateResolver.ts","state/gameEpics.ts","state/soundEpics.ts","state/store.ts","hooks/useGame.ts","hooks/useKeyboardEvent.tsx","app/DebugView.tsx","hooks/useEditor.ts","app/Environment.tsx","app/GameInstance.tsx","app/App.tsx","index.tsx"],"names":["ObjectTypes","applyVector","x","y","findById","props","id","find","prop","findByXY","objects","xy","filter","tile","x1","y1","x2","y2","samePosition","asArray","item","Array","isArray","arrMerge","a","b","UP","RIGHT","DOWN","LEFT","tileDict","0","Grass","1","RockFloor","2","Button","3","Ice","mapBitmap","propDict","Player","BigRock","Cannon","4","Crossbow","propsBitmap","soundList","button","process","music","Alert_NO","Alert_YES","Bazooka","Engine_start","Engine_LOOP_128","Engine_NO_1","Engine_NO_2","Engine_stop","Equip_1","Equip_2","Equip_3","Equip_4","Hero_1","Hero_2","Jump","play","name","volume","sound","Audio","playEquip","Math","round","random","engineStart","Asset","url","instance","elevation","rotation","castShadow","receiveShadow","elevationFix","anim","useSpring","pos","rot","vectorToThree","scene","useLoader","GLTFLoader","clone","children","scale","set","primitive","object","position","AnimatieAsset","data","gltf","gltfanimation","mixer","AnimationMixer","animations","forEach","clip","clipAction","useFrame","update","cannonInHeadScene","crossbowInHeadScene","group","visible","gun","AnimateSelfAsset","gltfScene","index","console","log","time","stopAllAction","vector","PI","tileDebugComponent","color","style","width","height","backgroundColor","fontSize","tileTypeDefinitions","Component","Component3d","enter","who","move","targetId","push","force","self","remove","state","randomProp","sample","p","setObjectData","info","uniqueId","propDebugComponent","margin","borderRadius","type","opacity","padding","propTypeDefinitions","equip","Boom","Projectile","projectileLaunch","isCannon","map","v","delay","projectileHit","tmpSpawn","aIndex","zIndex","objectDefinitions","getDefinition","def","Error","isTooHight","ontoObj","flyer","objDef","maxElevation","max","obj","initialState","queueStared","queue","tiles","flatMap","items","typeNumber","createMap","action","actionCreatorFactory","enqueue","tryNextAction","nextAction","queueEnd","rotate","projectile","fly","hit","updateObject","gameReducer","reducerWithInitialState","case","actions","addActions","abortResults","target","warn","newXY","newXYObjects","sort","length","event","moveResolver","rotateResolver","equipResolver","byId","hitActions","limit","hitTargetId","flyResolver","setObjectDataResolver","objectValues","myObjects","gameEpics","combineEpics","actions$","state$","pipe","match","value","game","mapTo","first","newActionDelay","payload","meta","concat","of","soundEpics","tap","ignoreElements","epicMiddleware","createEpicMiddleware","composeEnhancers","composeWithDevTools","rootReducer","combineReducers","store","createStore","applyMiddleware","run","useKeyboardEvent","key","callback","useEffect","handler","window","addEventListener","removeEventListener","DebugView","useState","editId","setEditId","edit","dispatch","useDispatch","useEditor","top","right","size","min","step","onChange","parseInt","Object","keys","left","onClick","isEmpty","JSON","stringify","Environment","intensity","Color","shadow-mapSize-Height","shadow-mapSize-width","shadow-camera-far","shadow-bias","shadow-camera-left","shadow-camera-right","shadow-camera-top","shadow-camera-bottom","GameInstance","useSelector","isEqual","fire","useGame","up","down","bottom","textAlign","orthographic","camera","zoom","fov","onCreated","lookAt","gl","shadowMap","PCFSoftShadowMap","enabled","fallback","attach","args","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b309e802.chunk.js","sourcesContent":["import { GameState } from '../state/gameReducer'\nimport { Action } from 'redux'\nimport { FC, ReactNode } from 'react'\n\nexport type XY = [number, number]\nexport type Vector2 = [number, number]\n\nexport enum ObjectTypes {\n    Player = 'Player',\n\n    Grass = 'Grass',\n    RockFloor = 'RockFloor',\n    BigRock = 'BigRock',\n\n    Ice = 'Ice',\n\n    Button = 'Button',\n\n    Crossbow = 'Crossbow',\n    Cannon = 'Cannon',\n    Boom = 'Boom',\n    Projectile = 'Projectile',\n}\n\nexport interface ObjectInstance {\n    type: ObjectTypes\n    id: string\n    xy: XY\n    rotation: Vector2\n    elevation: number\n    zIndex: number\n    aIndex: number\n    data: Partial<ObjectInstanceData>\n}\n\nexport interface ObjectInstanceData {\n    gun: 'cannon' | 'crossbow'\n    info: string\n}\n\nexport interface ActionEvent {\n    who: ObjectInstance\n    self: ObjectInstance\n    vector: Vector2\n    state: GameState\n    force?: number\n}\n\nexport interface ObjectDefinition {\n    name: string\n    height: number\n    push?(event: ActionEvent): Action[] // triggered when elevation is to big\n    enter?(event: ActionEvent): Action[]\n    leave?(event: ActionEvent): Action[]\n    equip?(event: ActionEvent): Action[]\n    projectileLaunch?(event: ActionEvent): Action[] // eg. for projectile\n    projectileHit?(event: ActionEvent): Action[] // eg. for projectile\n    Component(props: RenderComponentProps & { children: ReactNode }): any\n    Component3d(props: RenderComponentProps): any\n}\n\nexport interface RenderComponentProps {\n    instance: ObjectInstance\n}\n","import { XY, Vector2 } from './types/types'\n\nexport const reverseVector = (vector: Vector2) => vector.map(v => v * -1) as Vector2\n\nexport const applyVector = ([x, y]: XY, [vx, vy]: Vector2): XY => [x + vx, y + vy]\n\nexport const samePosition = ([x1, y1]: XY, [x2, y2]: XY) => x1 === x2 && y1 === y2\n\nexport const findById = <T extends { id: string }>(props: T[], id: string) => {\n    return props.find(prop => prop.id === id)\n}\n\nexport const findByXY = <T extends { xy: XY }>(objects: T[], xy: XY) => {\n    return objects.filter(tile => samePosition(tile.xy, xy))\n}\n\nexport const asArray = <T>(item: T | T[]): T[] => (Array.isArray(item) ? item : [item])\nexport const arrMerge = <T>(a: T[], b: T | T[] = []): T[] => [...a, ...asArray(b)]\n","import { Vector2 } from './types'\n\nexport const PLAYER_ID = 'player'\n\nexport const UP: Vector2 = [0, -1]\nexport const RIGHT: Vector2 = [1, 0]\nexport const DOWN: Vector2 = [0, 1]\nexport const LEFT: Vector2 = [-1, 0]\n","import { sample, uniqueId } from 'lodash'\nimport { findByXY } from '../helpers'\nimport { DOWN, LEFT, RIGHT, UP, PLAYER_ID } from '../types/consts'\nimport { ObjectInstance, ObjectTypes } from '../types/types'\n\nconst tileDict = {\n    0: ObjectTypes.Grass,\n    1: ObjectTypes.RockFloor,\n    2: ObjectTypes.Button,\n    3: ObjectTypes.Ice,\n}\n\n// prettier-ignore\nconst mapBitmap = [\n    [1,1,1,1,2,1,1,],\n    [1,0,3,3,0,0,1,],\n    [1,0,0,1,1,0,1,],\n    [1,0,0,1,0,0,1,],\n    [1,1,1,1,1,1,1,],\n]\n\nconst propDict = {\n    1: ObjectTypes.Player,\n    2: ObjectTypes.BigRock,\n    3: ObjectTypes.Cannon,\n    4: ObjectTypes.Crossbow,\n}\n\n// prettier-ignore\nconst propsBitmap = [\n    [0,0,0,4,0,0,0,],\n    [0,1,0,0,0,0,0,],\n    [0,3,0,0,0,0,0,],\n    [0,2,0,0,0,0,2,],\n    [0,0,0,0,0,0,0,],\n]\n\n// TODO?\nconst randomRotation = () => {\n    return sample([UP, LEFT, RIGHT, DOWN])!\n}\n\nexport const createMap = (): ObjectInstance[] => {\n    const tiles: ObjectInstance[] = mapBitmap.flatMap((items, y) =>\n        items.map((typeNumber, x) => {\n            const type = tileDict[typeNumber as keyof typeof tileDict]\n            return {\n                type,\n                xy: [x, y],\n                id: uniqueId(type),\n                elevation: Math.random() / 1.5,\n                rotation: randomRotation(),\n                zIndex: 1,\n                aIndex: 100,\n                data: {},\n            }\n        }),\n    )\n\n    const props = propsBitmap\n        .flatMap((items, y) =>\n            items.map((typeNumber, x) => {\n                const type = propDict[typeNumber as keyof typeof propDict]\n                if (!type) return\n                return {\n                    type,\n                    xy: [x, y],\n                    id: type === ObjectTypes.Player ? PLAYER_ID : uniqueId(type),\n                    elevation: findByXY(tiles, [x, y])[0]?.elevation || 0,\n                    rotation: [0, 0],\n                    zIndex: 2,\n                    aIndex: 10,\n                    data: {},\n                }\n            }),\n        )\n        .filter(a => a) as ObjectInstance[]\n\n    return [...props, ...tiles]\n}\n","const soundList = {\n    button: `${process.env.PUBLIC_URL}/sounds/Button_gameplay.mp3`,\n    music: `${process.env.PUBLIC_URL}/sounds/elementary1.mp3`,\n    Alert_NO: `${process.env.PUBLIC_URL}/sounds/Alert_NO.mp3`,\n    Alert_YES: `${process.env.PUBLIC_URL}/sounds/Alert_YES.mp3`,\n    Bazooka: `${process.env.PUBLIC_URL}/sounds/Bazooka.mp3`,\n    Crossbow: `${process.env.PUBLIC_URL}/sounds/Crossbow.mp3`,\n    Engine_start: `${process.env.PUBLIC_URL}/sounds/Engine_start.mp3`,\n    Engine_LOOP_128: `${process.env.PUBLIC_URL}/sounds/Engine_LOOP_128.mp3`,\n    Engine_NO_1: `${process.env.PUBLIC_URL}/sounds/Engine_NO_1.mp3`,\n    Engine_NO_2: `${process.env.PUBLIC_URL}/sounds/Engine_NO_2.mp3`,\n    Engine_stop: `${process.env.PUBLIC_URL}/sounds/Engine_stop.mp3`,\n    Equip_1: `${process.env.PUBLIC_URL}/sounds/Equip_1.mp3`,\n    Equip_2: `${process.env.PUBLIC_URL}/sounds/Equip_2.mp3`,\n    Equip_3: `${process.env.PUBLIC_URL}/sounds/Equip_3.mp3`,\n    Equip_4: `${process.env.PUBLIC_URL}/sounds/Equip_4.mp3`,\n    Hero_1: `${process.env.PUBLIC_URL}/sounds/Hero_1.mp3`,\n    Hero_2: `${process.env.PUBLIC_URL}/sounds/Hero_2.mp3`,\n    Jump: `${process.env.PUBLIC_URL}/sounds/Jump.mp3`,\n}\n\nexport type SoundName = keyof typeof soundList\n\nexport const play = (name: SoundName, volume?: number) => {\n    const sound = new Audio(soundList[name])\n    if (volume) sound.volume = volume\n    sound.play()\n    // sound.addEventListener('ended', () => {\n    //     sound.play()\n    // })\n}\nexport const playEquip = (volume?: number) => {\n    const list = ['Equip_1', 'Equip_2', 'Equip_3', 'Equip_4']\n    play(list[Math.round(Math.random() * 4)] as SoundName, volume)\n}\n\nconst engineStart = new Audio(soundList['Engine_LOOP_128'])\n\nexport const playEngine = (volume?: number) => {\n    if (volume) engineStart.volume = volume\n    // const playEnd = () => {\n    //     play('Engine_stop', volume)\n    //     engineStart.removeEventListener('ended', playEnd)\n    // }\n    engineStart.play()\n    // engineStart.removeEventListener('ended', playEnd)\n    // engineStart.addEventListener('ended', playEnd)\n}\n","import React from 'react'\nimport { useLoader, useFrame } from 'react-three-fiber'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport { RenderComponentProps, Vector2 } from '../../types/types'\nimport { AnimationMixer, Group } from 'three'\nimport { setInterval } from 'timers'\nimport { useSpring, animated } from 'react-spring/three'\n\nexport const Player = (props: RenderComponentProps) => {\n    return <AnimatieAsset {...props} url=\"robot_model.gltf\" />\n}\n\nexport const Rock = (props: RenderComponentProps) => {\n    return <Asset {...props} url=\"rock1.gltf\" />\n}\n\nexport const Boom = (props: RenderComponentProps) => {\n    return <AnimateSelfAsset {...props} url=\"boom.gltf\" />\n}\n\nexport const Cannon = (props: RenderComponentProps) => {\n    return <Asset {...props} url=\"rakietnica_srednia.gltf\" elevationFix={-0.8} />\n}\n\nexport const Rocket = (props: RenderComponentProps) => {\n    return <Asset {...props} url=\"rocket.gltf\" />\n}\n\nexport const Crossbow = (props: RenderComponentProps) => {\n    return <Asset {...props} url=\"kusza.gltf\" elevationFix={-0.8} />\n}\n\nexport const Ground = (props: RenderComponentProps) => {\n    return <Asset {...props} url=\"rock.gltf\" castShadow={false} receiveShadow={true} />\n}\n\nexport const Grass = (props: RenderComponentProps) => {\n    return (\n        <Asset\n            {...props}\n            url=\"grass_002_export_test_1_cube.gltf\" // INNY model\n            castShadow={false}\n            receiveShadow={true}\n        />\n    )\n}\n\nexport const Ice = (props: RenderComponentProps) => {\n    return (\n        <Asset\n            {...props}\n            url=\"ice_002_export_test_1_cube.gltf\" // INNY model\n            castShadow={false}\n            receiveShadow={true}\n        />\n    )\n}\nexport const Button = (props: RenderComponentProps) => {\n    return (\n        <Asset\n            {...props}\n            url=\"ground_002_export_test_1_cube.gltf\" // INNY model\n            castShadow={false}\n            receiveShadow={true}\n        />\n    )\n}\n\ninterface AssetProps extends RenderComponentProps {\n    url: string\n    color?: string\n    castShadow?: boolean\n    receiveShadow?: boolean\n    elevationFix?: number\n}\n\nconst Asset = ({\n    url,\n    instance: { xy, elevation, rotation },\n    castShadow = true,\n    receiveShadow = true,\n    elevationFix = 0,\n}: AssetProps) => {\n    const anim = useSpring({\n        pos: [xy[0], elevation + elevationFix, xy[1]],\n        rot: [0, vectorToThree(rotation), 0],\n    })\n    const gltf = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/${url}`)\n    const scene = gltf.scene.clone()\n    if (castShadow) scene.children[0].castShadow = true\n    if (receiveShadow) scene.children[0].receiveShadow = true\n    scene.scale.set(0.5, 0.5, 0.5)\n    return <animated.primitive object={scene} position={anim.pos} rotation={anim.rot} />\n}\n\nconst AnimatieAsset = ({\n    url,\n    instance: { xy, elevation, rotation, data },\n    castShadow = true,\n    receiveShadow = true,\n}: AssetProps) => {\n    const anim = useSpring({\n        pos: [xy[0], elevation, xy[1]],\n        rot: [0, vectorToThree(rotation), 0],\n    })\n\n    const gltf = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/${url}`)\n    gltf.scene.scale.set(0.5, 0.5, 0.5)\n    if (castShadow) gltf.scene.children[0].castShadow = true\n    if (receiveShadow) gltf.scene.children[0].receiveShadow = true\n\n    // const gltfanimation = useLoader(GLTFLoader, `/assets/animations/jump.gltf`)\n    // const gltfanimation = useLoader(GLTFLoader, `/assets/animations/move.gltf`)\n    const gltfanimation = useLoader(\n        GLTFLoader,\n        `${process.env.PUBLIC_URL}/assets/animations/boring.gltf`,\n    )\n    const mixer = new AnimationMixer(gltfanimation.scene)\n    gltfanimation.animations.forEach(clip => {\n        mixer.clipAction(clip, gltf.scene).play()\n    })\n    useFrame(() => mixer.update(0.02))\n\n    const cannonInHead = useLoader(\n        GLTFLoader,\n        `${process.env.PUBLIC_URL}/assets/rakietnica_srednia.gltf`,\n    )\n    const cannonInHeadScene = cannonInHead.scene.clone()\n\n    const crossbowInHead = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/kusza.gltf`)\n    const crossbowInHeadScene = crossbowInHead.scene.clone()\n\n    return (\n        <animated.group position={anim.pos} rotation={anim.rot}>\n            <primitive object={gltf.scene}>\n                <primitive object={cannonInHeadScene} visible={data.gun == 'cannon'} />\n                <primitive object={crossbowInHeadScene} visible={data.gun == 'crossbow'} />\n            </primitive>\n        </animated.group>\n    )\n}\n\nconst AnimateSelfAsset = ({\n    url,\n    instance: { xy, elevation, rotation, data },\n    castShadow = true,\n    receiveShadow = true,\n}: AssetProps) => {\n    const anim = useSpring({\n        pos: [xy[0], elevation, xy[1]],\n        rot: [0, vectorToThree(rotation), 0],\n    })\n    const gltf = useLoader(GLTFLoader, `${process.env.PUBLIC_URL}/assets/${url}`)\n    const gltfScene = gltf.scene.clone()\n    if (castShadow) gltfScene.children[0].castShadow = true\n    if (receiveShadow) gltfScene.children[0].receiveShadow = true\n\n    gltfScene.scale.set(0.3, 0.3, 0.3)\n\n    const mixer = new AnimationMixer(gltfScene)\n    gltf.animations.forEach((clip, index) => {\n        mixer.clipAction(clip, gltfScene.children[index]).play()\n    })\n    useFrame(() => {\n        mixer.update(0.03)\n        console.log(mixer.time)\n        if (mixer.time > 0.8) {\n            mixer.stopAllAction()\n            gltfScene.visible = false\n        }\n    })\n\n    return (\n        <animated.group position={anim.pos} rotation={anim.rot}>\n            <primitive object={gltfScene} />\n        </animated.group>\n    )\n}\n\nconst vectorToThree = (vector: Vector2) => {\n    if (vector[0] === 1 && vector[1] === 0) return Math.PI / 2\n    if (vector[0] === 0 && vector[1] === -1) return (Math.PI / 2) * 2\n    if (vector[0] === -1 && vector[1] === 0) return (Math.PI / 2) * 3\n    // if (vector[0] === 0 && vector[1] === 1) return (Math.PI / 2) * 4\n    return 0\n}\n\n// export const box = (props: RenderComponentProps) => {\n//     return (\n//         <mesh>\n//             <boxBufferGeometry attach=\"geometry\" args={[0.5, 0.5, 0.5]} />\n//             <meshStandardMaterial attach=\"material\" color={props.color} />\n//         </mesh>\n//     )\n// }\n","import { sample, uniqueId } from 'lodash'\nimport React from 'react'\nimport { play } from '../audio/play'\nimport { move, remove, setObjectData } from '../state/gameReducer'\nimport { PLAYER_ID } from '../types/consts'\nimport { ObjectDefinition, ObjectTypes } from '../types/types'\nimport { Button, Grass, Ground, Ice } from './models/Items'\n\nconst tileDebugComponent = (color: string) => (props: any) => (\n    <div\n        style={{ width: '100%', height: '100%', backgroundColor: color, fontSize: 9 }}\n        {...props}\n    />\n)\n\nexport const tileTypeDefinitions: Partial<Record<ObjectTypes, ObjectDefinition>> = {\n    [ObjectTypes.Grass]: {\n        name: 'Grass',\n        height: 0,\n        Component: tileDebugComponent('green'),\n        Component3d: Grass,\n    },\n\n    [ObjectTypes.Ice]: {\n        name: 'Ice',\n        height: 0,\n        enter: ({ who, vector }) => [move({ targetId: who.id, vector })],\n        Component: tileDebugComponent('lightblue'),\n        Component3d: Ice,\n    },\n\n    [ObjectTypes.RockFloor]: {\n        name: 'Rock floor',\n        height: 0,\n        push: ({ force, self }) => {\n            if (force && force >= 50) return [remove(self.id)]\n            return []\n        },\n        Component: tileDebugComponent('gray'),\n        Component3d: Ground,\n    },\n\n    [ObjectTypes.Button]: {\n        name: 'Button',\n        height: 2,\n        push: ({ state, self }) => {\n            const randomProp = sample(state.objects.filter(p => p.id !== PLAYER_ID))\n            play('button')\n            if (!randomProp) return []\n            return [\n                remove(randomProp.id),\n                setObjectData({ targetId: self.id, data: { info: uniqueId('Ups!') } }),\n            ]\n        },\n        Component: tileDebugComponent('blue'),\n        Component3d: Button,\n    },\n}\n","import React from 'react'\nimport { playEquip, play } from '../audio/play'\nimport { move, remove, setObjectData, tmpSpawn } from '../state/gameReducer'\nimport { ObjectDefinition, ObjectTypes } from '../types/types'\nimport { Cannon, Crossbow, Player, Rock, Rocket, Boom } from './models/Items'\nimport { reverseVector } from '../helpers'\nimport { uniqueId } from 'lodash'\n\nconst propDebugComponent = (color: string) => ({ instance, children }: any) => {\n    return (\n        <div\n            style={{\n                margin: '20%',\n                width: '60%',\n                height: '60%',\n                borderRadius: instance.type === ObjectTypes.Player ? 100 : 5,\n                backgroundColor: color,\n                color: 'black',\n                opacity: 0.7,\n            }}\n        >\n            <pre style={{ padding: 2, fontSize: 8 }}>{children}</pre>\n        </div>\n    )\n}\n\nexport const propTypeDefinitions: Partial<Record<ObjectTypes, ObjectDefinition>> = {\n    [ObjectTypes.Player]: {\n        name: 'Player',\n        height: 2,\n        Component: propDebugComponent('white'),\n        Component3d: Player,\n    },\n\n    [ObjectTypes.BigRock]: {\n        name: 'Big rock',\n        height: 0.5,\n        push: ({ self, vector }) => [move({ targetId: self.id, vector })],\n        Component: propDebugComponent('brown'),\n        Component3d: Rock,\n    },\n\n    [ObjectTypes.Cannon]: {\n        name: 'Cannon',\n        height: 0,\n        equip: ({ who, self }) => {\n            playEquip(0.8)\n            return [setObjectData({ targetId: who.id, data: { gun: 'cannon' } }), remove(self.id)]\n        },\n        Component: propDebugComponent('red'),\n        Component3d: Cannon,\n    },\n\n    [ObjectTypes.Boom]: {\n        name: 'Boom',\n        height: 0,\n        Component: propDebugComponent('yellow'),\n        Component3d: Boom,\n    },\n\n    [ObjectTypes.Crossbow]: {\n        name: 'Crossbow',\n        height: 0,\n        equip: ({ who, self }) => {\n            playEquip(0.8)\n            return [setObjectData({ targetId: who.id, data: { gun: 'crossbow' } }), remove(self.id)]\n        },\n        Component: propDebugComponent('red'),\n        Component3d: Crossbow,\n    },\n\n    [ObjectTypes.Projectile]: {\n        name: 'Projectile',\n        height: 0,\n        projectileLaunch: ({ who }) => {\n            const isCannon = who.data?.gun === 'cannon'\n            play(isCannon ? 'Bazooka' : 'Crossbow')\n            return [\n                move(\n                    { targetId: who.id, vector: isCannon ? reverseVector(who.rotation) : [0, 0] },\n                    { delay: 250 }, // delay remove from projectileHit\n                ),\n            ]\n        },\n        projectileHit: ({ self }) => {\n            play('Alert_YES') // TODO Boooooom!!!\n            return [\n                remove(self.id),\n                tmpSpawn({\n                    instance: {\n                        type: ObjectTypes.Boom,\n                        id: uniqueId(),\n                        xy: self.xy,\n                        elevation: self.elevation,\n                        rotation: self.rotation,\n                        aIndex: 0,\n                        zIndex: 20,\n                        data: {},\n                    },\n                }),\n            ]\n        },\n        Component: propDebugComponent('yellow'),\n        Component3d: Rocket,\n    },\n}\n","import { ObjectDefinition, ObjectTypes } from '../types/types'\nimport { tileTypeDefinitions } from './tileTypeDefinitions'\nimport { propTypeDefinitions } from './propTypeDefinitions'\n\nexport const objectDefinitions: Partial<Record<ObjectTypes, ObjectDefinition>> = {\n    ...tileTypeDefinitions,\n    ...propTypeDefinitions,\n}\n\nexport const getDefinition = (type: ObjectTypes): ObjectDefinition => {\n    const def = objectDefinitions[type]\n\n    if (!def) throw new Error(`[getDefinition] Definition for ${type} not found`)\n\n    return def\n}\n","import { Action } from 'redux'\nimport { applyVector, asArray, findById, findByXY } from '../../helpers'\nimport { getDefinition } from '../../objects/definitions'\nimport { ActionEvent, ObjectInstance } from '../../types/types'\nimport { GameState, hit } from '../gameReducer'\nimport { ResolverResults } from './types'\n\nexport const flyResolver = (state: GameState, targetId: string): ResolverResults => {\n    let objects = state.objects\n    const actions: Action[] = []\n    const addActions = (a: Action | Action[] = []) => actions.push(...asArray(a))\n    const abortResults = { objects, actions }\n\n    const target = findById(objects, targetId)\n\n    if (!target) {\n        console.warn(`[move] Target ${targetId} not found`)\n        return abortResults\n    }\n\n    const vector = target.rotation\n    let xy = target.xy\n\n    let limit = 15\n\n    while (limit) {\n        limit--\n\n        xy = applyVector(xy, vector)\n        const newXYObjects = findByXY(objects, xy).sort((a, b) => b.aIndex - a.aIndex)\n\n        for (const obj of newXYObjects) {\n            const objDef = getDefinition(obj.type)\n            const event: ActionEvent = { who: target, vector, state, self: obj, force: 100 }\n\n            if (isTooHight(obj, target)) {\n                objects = objects.map(obj => {\n                    if (obj !== target) return obj\n                    return { ...obj, xy }\n                })\n\n                addActions(hit({ targetId, hitTargetId: obj.id }))\n                addActions(objDef.push?.(event))\n                return { objects, actions }\n            }\n        }\n    }\n\n    addActions(hit({ targetId }))\n\n    objects = objects.map(obj => {\n        if (obj !== target) return obj\n        return { ...obj, xy }\n    })\n\n    return { objects, actions }\n}\n\nconst isTooHight = (ontoObj: ObjectInstance, flyer: ObjectInstance) => {\n    const objDef = getDefinition(ontoObj.type)\n    return ontoObj.elevation + objDef.height > flyer.elevation\n}\n","import { Action } from 'redux'\nimport { MAX_ELEVATION_DIFF } from '../../config'\nimport { applyVector, asArray, findById, findByXY } from '../../helpers'\nimport { getDefinition } from '../../objects/definitions'\nimport { ActionEvent, ObjectInstance, Vector2 } from '../../types/types'\nimport { GameState } from '../gameReducer'\nimport { ResolverResults } from './types'\n\nexport const moveResolver = (\n    state: GameState,\n    targetId: string,\n    vector: Vector2,\n): ResolverResults => {\n    let objects = state.objects\n    const actions: Action[] = []\n    const addActions = (a: Action | Action[] = []) => actions.push(...asArray(a))\n    const abortResults = { objects, actions }\n\n    const target = findById(objects, targetId)\n\n    if (!target) {\n        console.warn(`[move] Target ${targetId} not found`)\n        return abortResults\n    }\n\n    const newXY = applyVector(target.xy, vector)\n    const newXYObjects = findByXY(objects, newXY).sort((a, b) => b.aIndex - a.aIndex)\n\n    // Nothing there, don't go\n    if (!newXYObjects.length) {\n        return abortResults\n    }\n\n    // Can enter to this region?\n    for (const obj of newXYObjects) {\n        const objDef = getDefinition(obj.type)\n        const event: ActionEvent = { who: target, vector, state, self: obj }\n\n        if (isTooHight(obj, target)) {\n            addActions(objDef.push?.(event))\n            return { objects, actions }\n        }\n    }\n\n    // Post enter events\n    for (const obj of newXYObjects) {\n        const objDef = getDefinition(obj.type)\n        const event: ActionEvent = { who: target, vector, state, self: obj }\n        addActions(objDef.enter?.(event))\n    }\n\n    objects = objects.map(obj => {\n        if (obj !== target) return obj\n        return { ...obj, xy: newXY, elevation: maxElevation(newXYObjects) }\n    })\n\n    return { objects, actions }\n}\n\nconst maxElevation = (objects: ObjectInstance[]): number =>\n    Math.max(\n        ...objects.map(obj => {\n            const objDef = getDefinition(obj.type)\n            return objDef.height + obj.elevation\n        }),\n    )\n\nconst isTooHight = (ontoObj: ObjectInstance, who: ObjectInstance) => {\n    const objDef = getDefinition(ontoObj.type)\n    return ontoObj.elevation + objDef.height - who.elevation > MAX_ELEVATION_DIFF\n}\n","export const MAX_ELEVATION_DIFF = 0.5\nexport const PROJECTILE_ELEVATION = 0.8\nexport const DEFAULT_ACTION_DELAY = 65\n","import { uniqueId } from 'lodash'\nimport { Action } from 'redux'\nimport actionCreatorFactory from 'typescript-fsa'\nimport { reducerWithInitialState } from 'typescript-fsa-reducers'\nimport { PROJECTILE_ELEVATION } from '../config'\nimport { arrMerge, findById, findByXY } from '../helpers'\nimport { createMap } from '../mocks/mapMock'\nimport { getDefinition } from '../objects/definitions'\nimport {\n    ActionEvent,\n    ObjectInstance,\n    ObjectInstanceData,\n    ObjectTypes,\n    Vector2,\n    XY,\n} from '../types/types'\nimport { flyResolver } from './resolvers/flyResolver'\nimport { moveResolver } from './resolvers/moveResolver'\nimport { rotateResolver } from './resolvers/rotateResolver'\nimport { ResolverResults } from './resolvers/types'\n\nexport interface GameState {\n    queueStared: boolean\n    queue: Action[]\n    objects: ObjectInstance[]\n}\n\nexport interface GameStateAware {\n    game: GameState\n}\n\nexport const initialState: GameState = {\n    queueStared: false,\n    queue: [],\n    objects: createMap(),\n}\n\nconst action = actionCreatorFactory('GAME')\n\nexport const enqueue = action<Action | Action[]>('ENQUEUE')\nexport const tryNextAction = action('TRY_NEXT_ACTION')\nexport const nextAction = action<Action>('NEXT_ACTION')\nexport const queueEnd = action('QUEUE_END')\n\nexport const move = action<{ targetId: string; vector: Vector2 }>('MOVE')\nexport const rotate = action<{ targetId: string; rotation: Vector2 }>('ROTATE')\nexport const equip = action<{ targetId: string }>('EQUIP')\n\nexport const projectile = action<{ byId: string; xy: XY; vector: Vector2; elevation: number }>(\n    'PROJECTILE',\n)\nexport const fly = action<{ targetId: string }>('FLY')\nexport const hit = action<{ targetId: string; hitTargetId?: string }>('HIT')\n\nexport const updateObject = action<{\n    targetId: string\n    objectValues: Partial<ObjectInstance>\n}>('UPDATE_OBJECT')\nexport const setObjectData = action<{\n    targetId: string\n    data: Partial<ObjectInstanceData>\n}>('SET_OBJECT_DATA')\nexport const remove = action<string>('REMOVE')\nexport const tmpSpawn = action<{ instance: ObjectInstance }>('TMP_SPAWN')\n\nexport const gameReducer = reducerWithInitialState(initialState)\n    /*\n     * Queue\n     */\n    .case(\n        enqueue,\n        (state, action): GameState => ({\n            ...state,\n            queue: arrMerge(state.queue, action),\n        }),\n    )\n    .case(\n        nextAction,\n        (state, action): GameState => ({\n            ...state,\n            queueStared: true,\n            queue: state.queue.filter(a => a !== action),\n        }),\n    )\n    .case(queueEnd, (state): GameState => ({ ...state, queueStared: false }))\n\n    /*\n     * User actions\n     */\n    .case(\n        move,\n        (state, { targetId, vector }): GameState => {\n            const { actions, objects } = moveResolver(state, targetId, vector)\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n    .case(\n        rotate,\n        (state, { targetId, rotation }): GameState => {\n            const { actions, objects } = rotateResolver(state, targetId, rotation)\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n    .case(\n        equip,\n        (state, { targetId }): GameState => {\n            const { actions, objects } = equipResolver(state, targetId)\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n\n    /*\n     * Projectiles\n     */\n    .case(\n        projectile,\n        (state, { xy, vector, elevation, byId }): GameState => {\n            const type = ObjectTypes.Projectile\n            const objDef = getDefinition(type)\n            const obj: ObjectInstance = {\n                type,\n                id: uniqueId(type),\n                xy,\n                rotation: vector,\n                elevation: elevation + PROJECTILE_ELEVATION,\n                aIndex: 100,\n                zIndex: 10,\n                data: {},\n            }\n            const objects = [...state.objects, obj]\n            const actions: Action[] = [fly({ targetId: obj.id })]\n            const who = findById(state.objects, byId)!\n            const event: ActionEvent = { who, vector: obj.rotation, state, self: obj }\n            const hitActions = objDef.projectileLaunch?.(event) || []\n            actions.push(...hitActions)\n\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n    .case(\n        fly,\n        (state, { targetId }): GameState => {\n            const { actions, objects } = flyResolver(state, targetId)\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n    .case(\n        hit,\n        (state, { targetId, hitTargetId }): GameState => {\n            const obj = findById(state.objects, targetId)\n            // const who = findById(state.objects, hitTargetId)!\n\n            const actions: Action[] = []\n            if (obj) {\n                const objDef = getDefinition(obj.type)\n                //                                 ↓ replace with who // TODO\n                const event: ActionEvent = { who: obj, vector: obj.rotation, state, self: obj }\n                const hitActions = objDef.projectileHit?.(event) || []\n                actions.push(...hitActions)\n            }\n            return { ...state, queue: arrMerge(state.queue, actions) }\n        },\n    )\n\n    /*\n     * Edit and internal actions\n     */\n    .case(\n        setObjectData,\n        (state, { targetId, data }): GameState => {\n            const { actions, objects } = setObjectDataResolver(state, targetId, data)\n            return { ...state, objects, queue: arrMerge(state.queue, actions) }\n        },\n    )\n    .case(\n        updateObject,\n        (state, { targetId, objectValues }): GameState => {\n            return {\n                ...state,\n                objects: state.objects.map(obj =>\n                    obj.id === targetId ? { ...obj, ...objectValues } : obj,\n                ),\n            }\n        },\n    )\n    .case(\n        remove,\n        (state, targetId): GameState => ({\n            ...state,\n            objects: state.objects.filter(obj => obj.id !== targetId),\n        }),\n    )\n    .case(\n        tmpSpawn,\n        (state, { instance }): GameState => ({\n            ...state,\n            objects: [...state.objects, instance],\n        }),\n    )\n\nexport const equipResolver = (state: GameState, targetId: string): ResolverResults => {\n    const actions: Action[] = []\n    const target = findById(state.objects, targetId)\n    if (!target) return { objects: state.objects, actions: [] }\n\n    const myObjects = findByXY(state.objects, target.xy).sort((a, b) => b.aIndex - a.aIndex)\n\n    for (const obj of myObjects) {\n        const objDef = getDefinition(obj.type)\n        const event: ActionEvent = { who: target, vector: [0, 0], state, self: obj }\n        actions.push(...(objDef.equip?.(event) || []))\n    }\n\n    return {\n        actions,\n        objects: state.objects,\n    }\n}\n\nexport const setObjectDataResolver = (\n    { objects }: GameState,\n    targetId: string,\n    data: Partial<ObjectInstanceData>,\n): ResolverResults => {\n    const target = findById(objects, targetId)\n\n    return {\n        objects: objects.map(obj => {\n            if (obj !== target) return obj\n            return { ...obj, data: { ...obj.data, ...data } }\n        }),\n        actions: [],\n    }\n}\n","import { findById } from '../../helpers'\nimport { Vector2 } from '../../types/types'\nimport { ResolverResults } from './types'\nimport { GameState } from '../gameReducer'\n\nexport const rotateResolver = (\n    { objects }: GameState,\n    targetId: string,\n    rotation: Vector2,\n): ResolverResults => {\n    const target = findById(objects, targetId)\n\n    return {\n        objects: objects.map(obj => {\n            if (obj !== target) return obj\n            return { ...obj, rotation }\n        }),\n        actions: [],\n    }\n}\n","import { first } from 'lodash'\nimport { Action } from 'redux'\nimport { combineEpics, StateObservable } from 'redux-observable'\nimport { concat, Observable, of } from 'rxjs'\nimport { delay, filter, flatMap, map, mapTo } from 'rxjs/operators'\nimport { DEFAULT_ACTION_DELAY } from '../config'\nimport {\n    enqueue,\n    GameStateAware,\n    nextAction,\n    queueEnd,\n    tryNextAction,\n    tmpSpawn,\n    remove,\n} from './gameReducer'\n\nconst enqueueEpic = (\n    actions$: Observable<Action>,\n    state$: StateObservable<GameStateAware>,\n): Observable<Action> =>\n    actions$.pipe(\n        filter(enqueue.match),\n        filter(() => !state$.value.game.queueStared),\n        mapTo(tryNextAction()),\n    )\n\nconst tryNextEpic = (\n    actions$: Observable<Action>,\n    state$: StateObservable<GameStateAware>,\n): Observable<Action> =>\n    actions$.pipe(\n        filter(tryNextAction.match),\n        map(() => first(state$.value.game.queue)),\n        map(action => (action ? nextAction(action) : queueEnd())),\n    )\n\nconst nextActionEpic = (\n    actions$: Observable<Action>,\n    state$: StateObservable<GameStateAware>,\n): Observable<Action> =>\n    actions$.pipe(\n        filter(nextAction.match),\n        flatMap(action => {\n            const newActionDelay = (action.payload as any).meta?.delay || DEFAULT_ACTION_DELAY\n            return concat(of(action.payload), of(tryNextAction()).pipe(delay(newActionDelay)))\n        }),\n    )\n\nconst tmpSpawnEpic = (\n    actions$: Observable<Action>,\n    state$: StateObservable<GameStateAware>,\n): Observable<Action> =>\n    actions$.pipe(\n        filter(tmpSpawn.match),\n        delay(1000),\n        map(action => remove(action.payload.instance.id)),\n    )\n\nexport const gameEpics = combineEpics(enqueueEpic, tryNextEpic, nextActionEpic, tmpSpawnEpic)\n","import { Action } from 'redux'\nimport { combineEpics } from 'redux-observable'\nimport { Observable } from 'rxjs'\nimport { filter, ignoreElements, tap } from 'rxjs/operators'\nimport { play, playEngine } from '../audio/play'\nimport { equip, move } from './gameReducer'\nimport { PLAYER_ID } from '../types/consts'\n\nconst moveSoundEpic = (actions$: Observable<Action>): Observable<Action> =>\n    actions$.pipe(\n        filter(move.match),\n        filter(action => action.payload.targetId === PLAYER_ID),\n        tap(() => playEngine(0.1)),\n        ignoreElements(),\n    )\n\nconst equipSoundEpic = (actions$: Observable<Action>): Observable<Action> =>\n    actions$.pipe(\n        filter(equip.match),\n        tap(target => play('Hero_2', 0.7)),\n        ignoreElements(),\n    )\n\nexport const soundEpics = combineEpics(moveSoundEpic, equipSoundEpic)\n","import { applyMiddleware, combineReducers, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { combineEpics, createEpicMiddleware } from 'redux-observable'\nimport { gameEpics } from './gameEpics'\nimport { gameReducer } from './gameReducer'\nimport { soundEpics } from './soundEpics'\n\nconst epicMiddleware = createEpicMiddleware()\n\nconst composeEnhancers = composeWithDevTools({\n    name: 'App',\n})\n\nconst rootReducer = combineReducers({\n    game: gameReducer,\n})\n\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(epicMiddleware)))\n\nepicMiddleware.run(combineEpics(soundEpics, gameEpics))\n","import { isEqual } from 'lodash'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Action } from 'redux'\nimport { findById } from '../helpers'\nimport { enqueue, equip, GameStateAware, move, rotate, projectile } from '../state/gameReducer'\nimport { PLAYER_ID } from '../types/consts'\nimport { Vector2 } from '../types/types'\nimport { play } from '../audio/play'\n\nconst targetId = PLAYER_ID\n\nexport const useGame = () => {\n    const state = useSelector((state: GameStateAware) => state.game)\n    const dispatch = useDispatch()\n\n    const triggerMove = (vector: Vector2) => {\n        if (state.queueStared) return\n\n        const actions: Action[] = []\n        const who = findById(state.objects, targetId)\n\n        if (!who) {\n            return console.warn(`Player don't exists [${targetId}]`)\n        }\n\n        if (!isEqual(who.rotation, vector)) {\n            actions.push(rotate({ targetId, rotation: vector }))\n        } else {\n            actions.push(move({ targetId, vector }))\n        }\n\n        dispatch(enqueue(actions))\n    }\n\n    const triggerEquip = () => {\n        if (state.queueStared) return\n        dispatch(enqueue(equip({ targetId })))\n    }\n\n    const triggerFire = () => {\n        if (state.queueStared) return\n        const { id, xy, rotation, elevation, data } = findById(state.objects, targetId)!\n        if (!data?.gun) {\n            play('Alert_NO')\n            return\n        }\n        dispatch(enqueue(projectile({ byId: id, xy, vector: rotation, elevation })))\n    }\n\n    return { ...state, move: triggerMove, equip: triggerEquip, fire: triggerFire }\n}\n","import { useEffect } from 'react'\n\nexport const useKeyboardEvent = (key: string, callback: Function) => {\n    useEffect(() => {\n        const handler = (event: KeyboardEvent) => {\n            if (event.key === key) callback()\n        }\n\n        window.addEventListener('keydown', handler)\n\n        return () => window.removeEventListener('keydown', handler)\n    })\n}\n","import { isEmpty } from 'lodash'\nimport React, { useState } from 'react'\nimport { findById } from '../helpers'\nimport { useEditor } from '../hooks/useEditor'\nimport { getDefinition, objectDefinitions } from '../objects/definitions'\nimport { ObjectInstance, ObjectTypes } from '../types/types'\n\ninterface DebugViewProps {\n    objects: ObjectInstance[]\n}\n\nconst size = 60\n\nexport const DebugView = ({ objects }: DebugViewProps) => {\n    const [editId, setEditId] = useState<string>()\n    const { edit } = useEditor()\n    const obj = editId && findById(objects, editId)\n    const update = (value: Partial<ObjectInstance>) => {\n        if (obj) edit(obj.id, value)\n    }\n\n    return (\n        <div\n            style={{\n                position: 'absolute',\n                zIndex: 100,\n                top: 0,\n                right: 0,\n                width: size * 8,\n                opacity: 0.8,\n            }}\n        >\n            {obj && (\n                <>\n                    <input\n                        type=\"range\"\n                        min={-1}\n                        max={5}\n                        step={0.01}\n                        value={obj.elevation}\n                        onChange={event => update({ elevation: parseInt(event.target.value, 10) })}\n                    />\n                    <select\n                        value={obj.type}\n                        onChange={event => update({ type: event.target.value as ObjectTypes })}\n                    >\n                        {Object.keys(objectDefinitions).map(item => (\n                            <option>{item}</option>\n                        ))}\n                    </select>\n                </>\n            )}\n            <div style={{ position: 'relative' }}>\n                {objects.map(obj => {\n                    const { type, id, xy, rotation, elevation, zIndex, data } = obj\n                    const { Component } = getDefinition(type)\n                    return (\n                        <div\n                            key={id}\n                            style={{\n                                position: 'absolute',\n                                left: xy[0] * size,\n                                top: xy[1] * size,\n                                width: size,\n                                height: size,\n                                zIndex,\n                            }}\n                            onClick={() => setEditId(id)}\n                        >\n                            <Component instance={obj}>\n                                {type} <br />\n                                {isEmpty(data) ? '' : JSON.stringify(data, null, 1)}\n                            </Component>\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n\ninterface LabelProps {\n    text: string\n    bottom?: boolean\n}\n\nexport const Label = ({ text, bottom }: LabelProps) => (\n    <div\n        style={{\n            position: 'absolute',\n            left: 0,\n            top: bottom ? '80%' : 0,\n            fontSize: 10,\n            color: 'black',\n        }}\n    >\n        {text}\n    </div>\n)\n","import { useDispatch } from 'react-redux'\nimport { updateObject } from '../state/gameReducer'\nimport { PLAYER_ID } from '../types/consts'\nimport { ObjectInstance } from '../types/types'\n\nexport const useEditor = () => {\n    // const state = useSelector((state: GameStateAware) => state.game)\n    const dispatch = useDispatch()\n\n    const edit = (targetId: string, objectValues: Partial<ObjectInstance>) => {\n        dispatch(updateObject({ targetId, objectValues }))\n    }\n\n    return { edit }\n}\n","import React from 'react'\nimport { Color } from 'three'\n\nconst d = 5\n\nexport const Environment = () => {\n    return (\n        <group>\n            <ambientLight intensity={2} />\n            <pointLight\n                position={[6, 7, 8]}\n                intensity={2.2}\n                color={new Color('#3a8dc2')}\n                shadow-mapSize-Height=\"1024\"\n                shadow-mapSize-width=\"1024\"\n                shadow-camera-far={30}\n                shadow-bias={-0.01}\n                castShadow\n                shadow-camera-left={-d}\n                shadow-camera-right={d}\n                shadow-camera-top={d}\n                shadow-camera-bottom={-d}\n            />\n            <pointLight position={[1, 3, 5]} intensity={2.2} color={new Color('#c86b6f')} />\n        </group>\n    )\n}\n","import React, { Suspense } from 'react'\nimport { Canvas } from 'react-three-fiber'\nimport { PCFSoftShadowMap } from 'three'\nimport { useGame } from '../hooks/useGame'\nimport { useKeyboardEvent } from '../hooks/useKeyboardEvent'\nimport { getDefinition } from '../objects/definitions'\nimport { DOWN, LEFT, RIGHT, UP } from '../types/consts'\nimport { DebugView } from './DebugView'\nimport { Environment } from './Environment'\n\nexport const GameInstance = () => {\n    const { objects, move, equip, fire } = useGame()\n\n    const left = () => move(LEFT)\n    const up = () => move(UP)\n    const down = () => move(DOWN)\n    const right = () => move(RIGHT)\n\n    useKeyboardEvent('ArrowLeft', left)\n    useKeyboardEvent('ArrowUp', up)\n    useKeyboardEvent('ArrowDown', down)\n    useKeyboardEvent('ArrowRight', right)\n    useKeyboardEvent('Enter', equip)\n    useKeyboardEvent(' ', fire)\n\n    return (\n        <>\n            <DebugView objects={objects} />\n            <div\n                style={{\n                    position: 'absolute',\n                    zIndex: 5,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    textAlign: 'center',\n                }}\n            >\n                <button onClick={left}>←</button>\n                <button onClick={up}>↑</button>\n                <button onClick={down}>↓</button>\n                <button onClick={right}>→</button>\n                <button onClick={equip}>equip</button>\n                <button onClick={fire}>fire</button>\n            </div>\n            <Canvas\n                orthographic\n                camera={{ zoom: 100, fov: 1075, position: [-2 + 3, 7, 5 + 2] }}\n                onCreated={scene => {\n                    scene.camera.lookAt(3, 1, 2)\n                    scene.gl.shadowMap.type = PCFSoftShadowMap\n                    scene.gl.shadowMap.enabled = true\n                }}\n            >\n                <Environment />\n                <Suspense\n                    fallback={\n                        <mesh>\n                            <boxBufferGeometry attach=\"geometry\" args={[0.5, 0.5, 0.5]} />\n                            <meshStandardMaterial attach=\"material\" color=\"red\" />\n                        </mesh>\n                    }\n                >\n                    {objects.map(obj => {\n                        const { Component3d } = getDefinition(obj.type)\n                        return <Component3d key={obj.id} instance={obj} />\n                    })}\n                </Suspense>\n            </Canvas>\n        </>\n    )\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { store } from '../state/store'\nimport { GameInstance } from './GameInstance'\n\nexport const App = () => {\n    return (\n        <Provider store={store}>\n            <GameInstance />\n        </Provider>\n    )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './app/App'\nimport './styles/global.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}